
E:/diy-x86os/start/test/build/source/snake/snake.elf:     file format elf32-i386
E:/diy-x86os/start/test/build/source/snake/snake.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x84000000

Program Header:
    LOAD off    0x00001000 vaddr 0x84000000 paddr 0x84000000 align 2**12
         filesz 0x0000636c memsz 0x000063f8 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000557f  84000000  84000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000401  84005580  84005580  00006580  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009cc  840059a0  840059a0  000069a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000078  84006380  84006380  0000736c  2**5
                  ALLOC
  4 .debug_line   00003c25  00000000  00000000  0000736c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0001c208  00000000  00000000  0000af91  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000624d  00000000  00000000  00027199  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000610  00000000  00000000  0002d3e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00001399  00000000  00000000  0002d9f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000023  00000000  00000000  0002ed91  2**0
                  CONTENTS, READONLY
 10 .debug_frame  00001524  00000000  00000000  0002edb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line_str 00000e29  00000000  00000000  000302d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_rnglists 0000004e  00000000  00000000  00031101  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
84000000 l    d  .text	00000000 .text
84005580 l    d  .rodata	00000000 .rodata
840059a0 l    d  .data	00000000 .data
84006380 l    d  .bss	00000000 .bss
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
8400004e l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 main.c
84006380 l     O .bss	00000004 row_max
84006384 l     O .bss	00000004 col_max
84006388 l     O .bss	00000004 food
8400638c l     O .bss	0000000c snake
8400043b l     F .text	00000052 is_hit_itself
8400048d l     F .text	00000051 is_hit_wall
840004de l     F .text	00000037 is_hit_food
84000515 l     F .text	00000030 show_char
84000545 l     F .text	0000001f show_string
8400064e l     F .text	00000051 add_head
8400069f l     F .text	00000071 remove_tail
84000710 l     F .text	00000070 create_snake
84000780 l     F .text	00000109 create_food
84000889 l     F .text	00000024 free_food
840008ad l     F .text	00000151 move_forward
840009fe l     F .text	0000007a show_welcome
84000a78 l     F .text	0000002c begin_game
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
84000f03 l     F .text	000000ad std
84000fb0 l     F .text	0000001b stdin_init
84000fcb l     F .text	0000001b stdout_init
84000fe6 l     F .text	0000001b stderr_init
84006398 l     O .bss	00000004 __sfp_recursive_mutex
8400639c l     O .bss	00000004 __sinit_recursive_mutex
840012a9 l     F .text	0000000a __fp_lock
840012b3 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 impure.c
840059a0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
8400198f l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 mlock.c
840063e8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 __call_atexit.c
840063ec l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
84002f66 l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 fputwc.c
84003ec4 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
8400459a l     F .text	0000000a __get_global_locale
840045a4 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 mbtowc_r.c
84004640 l     F .text	0000000a __get_global_locale
8400464a l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8400476d l       .text	00000000 L20
84004724 l       .text	00000000 L5
8400476a l       .text	00000000 L15
84004730 l       .text	00000000 L8
84004751 l       .text	00000000 L9
84004760 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
84005127 l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
840053fa l     F .text	0000000a __get_global_locale
84005404 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
84005504 l     F .text	0000000a __get_global_locale
8400550e l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 ctype_.c
8400455a g     F .text	00000040 _isatty_r
84003a1f g     F .text	00000037 cleanup_glue
84002cc4 g     F .text	00000046 _lseek_r
84000152 g     F .text	0000001b yield
84000308 g     F .text	00000033 ioctl
84002505 g     F .text	00000035 printf
8400540e g     F .text	00000077 _wcrtomb_r
840028c0 g     F .text	0000004a __sseek
840011f8 g     F .text	00000099 __sinit
84003c36 g     F .text	00000112 __swbuf_r
840045ae g     F .text	0000005f _setlocale_r
84001001 g     F .text	0000006f __sfmoreglue
840024d2 g     F .text	00000006 __malloc_unlock
840047c0 g       .text	00000000 memmove
840011de g     F .text	0000001a _cleanup
84004079 g     F .text	00000043 _fstat_r
840063f0 g     O .bss	00000004 errno
84003c19 g     F .text	0000001d __srget
8400285b g     F .text	0000000a __seofread
84000125 g     F .text	0000002d execve
840000c8 g     F .text	0000001b getpid
84002bee g     F .text	00000067 _getc_r
84002c55 g     F .text	0000006f getc
84004778 g       .text	00000000 memcpy
8400260b g     F .text	0000020c setvbuf
840011bd g     F .text	00000021 _cleanup_r
84001956 g     F .text	0000001c malloc
840024d8 g     F .text	0000002d _printf_r
840002a5 g     F .text	00000021 isatty
840063a0 g     O .bss	00000004 __malloc_top_pad
84006380 g       .bss	00000000 __bss_start__
840040bc g     F .text	0000049e __sfvwrite_r
840025cb g     F .text	00000040 _sbrk_r
840003a6 g     F .text	00000040 readdir
840039d9 g     F .text	00000046 _read_r
84002aca g     F .text	00000107 _fclose_r
84000eca g     F .text	00000039 fflush
840063a4 g     O .bss	00000004 __malloc_max_sbrked_mem
84000251 g     F .text	0000002d lseek
84005618 g     O .rodata	00000004 _global_impure_ptr
8400484d g     F .text	000008da _realloc_r
84003fda g     F .text	00000057 _fputwc_r
840012bd g     F .text	00000024 __fp_lock_all
84003a56 g     F .text	00000160 _reclaim_reent
84000203 g     F .text	0000002d write
8400027e g     F .text	00000027 fstat
84002fcc g     F .text	000000a8 __sfputs_r
84001291 g     F .text	00000006 __sfp_lock_acquire
840046e0 g       .text	00000000 memchr
840063f8 g       .bss	00000000 __bss_end__
84001305 g     F .text	000003db _free_r
8400016d g     F .text	00000021 wait
84005700 g     O .rodata	00000180 _ctype_b
8400460d g     F .text	00000014 __locale_mb_cur_max
84003bb6 g     F .text	00000063 __srget_r
84002975 g     F .text	00000115 __call_exitprocs
840061ec g     O .data	00000004 __malloc_sbrk_base
84000000 g       .text	00000000 _start
84002562 g     F .text	00000069 rand
840001d6 g     F .text	0000002d read
84000582 g     F .text	000000cc create_map
84000564 g     F .text	0000001e clear_map
840063c0 g     O .bss	00000028 __malloc_current_mallinfo
8400041a g     F .text	00000021 unlink
840024d8 g     F .text	0000002d _iprintf_r
84002a8a g     F .text	00000040 _close_r
8400010a g     F .text	0000001b fork
84003d69 g     F .text	0000015b __swsetup_r
84001070 g     F .text	0000014d __sfp
84005de0 g     O .data	00000408 __malloc_av_
840012a3 g     F .text	00000006 __sinit_lock_release
84002817 g     F .text	00000044 __sread
840024cc g     F .text	00000006 __malloc_lock
840002c6 g     F .text	00000021 sbrk
84000e72 g     F .text	00000058 _fflush_r
84000010 g     F .text	0000003e cstart
84002444 g       .text	00000000 memset
84000aa4 g     F .text	00000164 main
840063a8 g     O .bss	00000004 __malloc_max_total_mem
84003d48 g     F .text	00000021 __swbuf
8400253a g     F .text	00000028 srand
8400290a g     F .text	00000025 __sclose
84002bd1 g     F .text	0000001d fclose
84001931 g     F .text	00000025 getchar
84001c22 g     F .text	00000822 _malloc_r
8400553c g     F .text	00000043 __ascii_wctomb
8400033b g     F .text	0000006b opendir
84001841 g     F .text	00000068 _fwalk
84004654 g     F .text	0000002a _mbtowc_r
840016e0 g     F .text	00000161 _malloc_trim_r
84005355 g     F .text	000000a5 strcmp
84003074 g     F .text	00000025 vfiprintf
840002e7 g     F .text	00000021 dup
84002505 g     F .text	00000035 iprintf
840063f4 g     O .bss	00000004 _PathLocale
8400292f g     F .text	00000046 _write_r
84004621 g     F .text	0000001f setlocale
840033ef g     F .text	0000019b _printf_common
84005dc4 g     O .data	00000004 _impure_ptr
84000c4c g     F .text	00000226 __sflush_r
84005154 g     F .text	00000201 __srefill_r
8400467e g     F .text	00000058 __ascii_mbtowc
840012e1 g     F .text	00000024 __fp_unlock_all
840000e3 g     F .text	00000027 print_msg
84002df7 g     F .text	00000093 __swhatbuf_r
84001914 g     F .text	0000001d _getchar_r
84003f2a g     F .text	000000b0 __fputwc
84002865 g     F .text	0000005b __swrite
840061e8 g     O .data	00000004 __malloc_trim_threshold
84000c08 g     F .text	00000044 exit
84003099 g     F .text	00000356 _vfiprintf_r
840018a9 g     F .text	0000006b _fwalk_reent
84001297 g     F .text	00000006 __sfp_lock_release
84005880 g     O .rodata	00000101 _ctype_
8400018e g     F .text	00000021 _exit
84002d0a g     F .text	000000ed __smakebuf_r
8400358a g     F .text	0000044f _printf_i
840001af g     F .text	00000027 open
84002e8a g     F .text	000000dc __sprint_r
840003e6 g     F .text	00000034 closedir
84005518 g     F .text	00000024 _wctomb_r
84003099 g     F .text	00000356 _vfprintf_r
8400009a g     F .text	0000002e msleep
84005485 g     F .text	0000007f wcrtomb
84000230 g     F .text	00000021 close
84006200 g     O .data	0000016c __global_locale
84003074 g     F .text	00000025 vfprintf
84004031 g     F .text	00000048 fputwc
84001972 g     F .text	0000001d free
8400129d g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

84000000 <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
84000000:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
84000003:	8e d8                	mov    %eax,%ds
    mov %ax, %es
84000005:	8e c0                	mov    %eax,%es
    mov %ax, %fs
84000007:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
84000009:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
8400000b:	e9 00 00 00 00       	jmp    84000010 <cstart>

84000010 <cstart>:
extern uint8_t __bss_start__[], __bss_end__[];

/**
 * @brief 应用的初始化，C部分
 */
void cstart (int argc, char ** argv) {
84000010:	55                   	push   %ebp
84000011:	89 e5                	mov    %esp,%ebp
84000013:	83 ec 18             	sub    $0x18,%esp
    // 清空bss区，注意这是必须的！！！
    // 像newlib库中有些代码就依赖于此，未清空时数据未知，导致调用sbrk时申请很大内存空间
    uint8_t * start = __bss_start__;
84000016:	c7 45 f4 80 63 00 84 	movl   $0x84006380,-0xc(%ebp)
    while (start < __bss_end__) {
8400001d:	eb 0c                	jmp    8400002b <cstart+0x1b>
        *start++ = 0;
8400001f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000022:	8d 50 01             	lea    0x1(%eax),%edx
84000025:	89 55 f4             	mov    %edx,-0xc(%ebp)
84000028:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
8400002b:	81 7d f4 f8 63 00 84 	cmpl   $0x840063f8,-0xc(%ebp)
84000032:	72 eb                	jb     8400001f <cstart+0xf>
    }

    exit(main(argc, argv));
84000034:	83 ec 08             	sub    $0x8,%esp
84000037:	ff 75 0c             	pushl  0xc(%ebp)
8400003a:	ff 75 08             	pushl  0x8(%ebp)
8400003d:	e8 62 0a 00 00       	call   84000aa4 <main>
84000042:	83 c4 10             	add    $0x10,%esp
84000045:	83 ec 0c             	sub    $0xc,%esp
84000048:	50                   	push   %eax
84000049:	e8 ba 0b 00 00       	call   84000c08 <exit>

8400004e <sys_call>:
#include <string.h>

/**
 * 执行系统调用
 */
static inline int sys_call (syscall_args_t * args) {
8400004e:	55                   	push   %ebp
8400004f:	89 e5                	mov    %esp,%ebp
84000051:	57                   	push   %edi
84000052:	56                   	push   %esi
84000053:	53                   	push   %ebx
84000054:	83 ec 10             	sub    $0x10,%esp
    const unsigned long sys_gate_addr[] = {0, SELECTOR_SYSCALL | 0};  // 使用特权级0
84000057:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8400005e:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
            "push %[arg1]\n\t"
            "push %[arg0]\n\t"
            "push %[id]\n\t"
            "lcalll *(%[gate])\n\n"
            :"=a"(ret)
            :[arg3]"r"(args->arg3), [arg2]"r"(args->arg2), [arg1]"r"(args->arg1),
84000065:	8b 45 08             	mov    0x8(%ebp),%eax
84000068:	8b 40 10             	mov    0x10(%eax),%eax
8400006b:	8b 55 08             	mov    0x8(%ebp),%edx
8400006e:	8b 52 0c             	mov    0xc(%edx),%edx
84000071:	8b 4d 08             	mov    0x8(%ebp),%ecx
84000074:	8b 49 08             	mov    0x8(%ecx),%ecx
    [arg0]"r"(args->arg0), [id]"r"(args->id),
84000077:	8b 5d 08             	mov    0x8(%ebp),%ebx
8400007a:	8b 5b 04             	mov    0x4(%ebx),%ebx
8400007d:	8b 75 08             	mov    0x8(%ebp),%esi
84000080:	8b 36                	mov    (%esi),%esi
    __asm__ __volatile__(
84000082:	8d 7d e8             	lea    -0x18(%ebp),%edi
84000085:	50                   	push   %eax
84000086:	52                   	push   %edx
84000087:	51                   	push   %ecx
84000088:	53                   	push   %ebx
84000089:	56                   	push   %esi
8400008a:	ff 1f                	lcall  *(%edi)
8400008c:	89 45 f0             	mov    %eax,-0x10(%ebp)
    [gate]"r"(sys_gate_addr));
    return ret;
8400008f:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
84000092:	83 c4 10             	add    $0x10,%esp
84000095:	5b                   	pop    %ebx
84000096:	5e                   	pop    %esi
84000097:	5f                   	pop    %edi
84000098:	5d                   	pop    %ebp
84000099:	c3                   	ret    

8400009a <msleep>:

int msleep (int ms) {
8400009a:	55                   	push   %ebp
8400009b:	89 e5                	mov    %esp,%ebp
8400009d:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) {
840000a0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
840000a4:	7f 07                	jg     840000ad <msleep+0x13>
        return 0;
840000a6:	b8 00 00 00 00       	mov    $0x0,%eax
840000ab:	eb 19                	jmp    840000c6 <msleep+0x2c>
    }

    syscall_args_t args;
    args.id = SYS_msleep;
840000ad:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
840000b4:	8b 45 08             	mov    0x8(%ebp),%eax
840000b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
840000ba:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000bd:	50                   	push   %eax
840000be:	e8 8b ff ff ff       	call   8400004e <sys_call>
840000c3:	83 c4 04             	add    $0x4,%esp
}
840000c6:	c9                   	leave  
840000c7:	c3                   	ret    

840000c8 <getpid>:

int getpid() {
840000c8:	55                   	push   %ebp
840000c9:	89 e5                	mov    %esp,%ebp
840000cb:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
840000ce:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
840000d5:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000d8:	50                   	push   %eax
840000d9:	e8 70 ff ff ff       	call   8400004e <sys_call>
840000de:	83 c4 04             	add    $0x4,%esp
}
840000e1:	c9                   	leave  
840000e2:	c3                   	ret    

840000e3 <print_msg>:

int print_msg(char * fmt, int arg) {
840000e3:	55                   	push   %ebp
840000e4:	89 e5                	mov    %esp,%ebp
840000e6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
840000e9:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (int)fmt;
840000f0:	8b 45 08             	mov    0x8(%ebp),%eax
840000f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
840000f6:	8b 45 0c             	mov    0xc(%ebp),%eax
840000f9:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
840000fc:	8d 45 ec             	lea    -0x14(%ebp),%eax
840000ff:	50                   	push   %eax
84000100:	e8 49 ff ff ff       	call   8400004e <sys_call>
84000105:	83 c4 04             	add    $0x4,%esp
}
84000108:	c9                   	leave  
84000109:	c3                   	ret    

8400010a <fork>:

int fork() {
8400010a:	55                   	push   %ebp
8400010b:	89 e5                	mov    %esp,%ebp
8400010d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
84000110:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
84000117:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400011a:	50                   	push   %eax
8400011b:	e8 2e ff ff ff       	call   8400004e <sys_call>
84000120:	83 c4 04             	add    $0x4,%esp
}
84000123:	c9                   	leave  
84000124:	c3                   	ret    

84000125 <execve>:

int execve(const char *name, char * const *argv, char * const *env) {
84000125:	55                   	push   %ebp
84000126:	89 e5                	mov    %esp,%ebp
84000128:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
8400012b:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
84000132:	8b 45 08             	mov    0x8(%ebp),%eax
84000135:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
84000138:	8b 45 0c             	mov    0xc(%ebp),%eax
8400013b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
8400013e:	8b 45 10             	mov    0x10(%ebp),%eax
84000141:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
84000144:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000147:	50                   	push   %eax
84000148:	e8 01 ff ff ff       	call   8400004e <sys_call>
8400014d:	83 c4 04             	add    $0x4,%esp
}
84000150:	c9                   	leave  
84000151:	c3                   	ret    

84000152 <yield>:

int yield (void) {
84000152:	55                   	push   %ebp
84000153:	89 e5                	mov    %esp,%ebp
84000155:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
84000158:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    return sys_call(&args);
8400015f:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000162:	50                   	push   %eax
84000163:	e8 e6 fe ff ff       	call   8400004e <sys_call>
84000168:	83 c4 04             	add    $0x4,%esp
}
8400016b:	c9                   	leave  
8400016c:	c3                   	ret    

8400016d <wait>:

int wait(int* status) {
8400016d:	55                   	push   %ebp
8400016e:	89 e5                	mov    %esp,%ebp
84000170:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
84000173:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
8400017a:	8b 45 08             	mov    0x8(%ebp),%eax
8400017d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
84000180:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000183:	50                   	push   %eax
84000184:	e8 c5 fe ff ff       	call   8400004e <sys_call>
84000189:	83 c4 04             	add    $0x4,%esp
}
8400018c:	c9                   	leave  
8400018d:	c3                   	ret    

8400018e <_exit>:

void _exit(int status) {
8400018e:	55                   	push   %ebp
8400018f:	89 e5                	mov    %esp,%ebp
84000191:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
84000194:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = (int)status;
8400019b:	8b 45 08             	mov    0x8(%ebp),%eax
8400019e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
840001a1:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001a4:	50                   	push   %eax
840001a5:	e8 a4 fe ff ff       	call   8400004e <sys_call>
840001aa:	83 c4 04             	add    $0x4,%esp
    for (;;) {}
840001ad:	eb fe                	jmp    840001ad <_exit+0x1f>

840001af <open>:
}

int open(const char *name, int flags, ...) {
840001af:	55                   	push   %ebp
840001b0:	89 e5                	mov    %esp,%ebp
840001b2:	83 ec 20             	sub    $0x20,%esp
    // 不考虑支持太多参数
    syscall_args_t args;
    args.id = SYS_open;
840001b5:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
840001bc:	8b 45 08             	mov    0x8(%ebp),%eax
840001bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)flags;
840001c2:	8b 45 0c             	mov    0xc(%ebp),%eax
840001c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
840001c8:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001cb:	50                   	push   %eax
840001cc:	e8 7d fe ff ff       	call   8400004e <sys_call>
840001d1:	83 c4 04             	add    $0x4,%esp
}
840001d4:	c9                   	leave  
840001d5:	c3                   	ret    

840001d6 <read>:

int read(int file, char *ptr, int len) {
840001d6:	55                   	push   %ebp
840001d7:	89 e5                	mov    %esp,%ebp
840001d9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
840001dc:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = (int)file;
840001e3:	8b 45 08             	mov    0x8(%ebp),%eax
840001e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
840001e9:	8b 45 0c             	mov    0xc(%ebp),%eax
840001ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
840001ef:	8b 45 10             	mov    0x10(%ebp),%eax
840001f2:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
840001f5:	8d 45 ec             	lea    -0x14(%ebp),%eax
840001f8:	50                   	push   %eax
840001f9:	e8 50 fe ff ff       	call   8400004e <sys_call>
840001fe:	83 c4 04             	add    $0x4,%esp
}
84000201:	c9                   	leave  
84000202:	c3                   	ret    

84000203 <write>:

int write(int file, char *ptr, int len) {
84000203:	55                   	push   %ebp
84000204:	89 e5                	mov    %esp,%ebp
84000206:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
84000209:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = (int)file;
84000210:	8b 45 08             	mov    0x8(%ebp),%eax
84000213:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
84000216:	8b 45 0c             	mov    0xc(%ebp),%eax
84000219:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8400021c:	8b 45 10             	mov    0x10(%ebp),%eax
8400021f:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
84000222:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000225:	50                   	push   %eax
84000226:	e8 23 fe ff ff       	call   8400004e <sys_call>
8400022b:	83 c4 04             	add    $0x4,%esp
}
8400022e:	c9                   	leave  
8400022f:	c3                   	ret    

84000230 <close>:

int close(int file) {
84000230:	55                   	push   %ebp
84000231:	89 e5                	mov    %esp,%ebp
84000233:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
84000236:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = (int)file;
8400023d:	8b 45 08             	mov    0x8(%ebp),%eax
84000240:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
84000243:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000246:	50                   	push   %eax
84000247:	e8 02 fe ff ff       	call   8400004e <sys_call>
8400024c:	83 c4 04             	add    $0x4,%esp
}
8400024f:	c9                   	leave  
84000250:	c3                   	ret    

84000251 <lseek>:

int lseek(int file, int ptr, int dir) {
84000251:	55                   	push   %ebp
84000252:	89 e5                	mov    %esp,%ebp
84000254:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
84000257:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = (int)file;
8400025e:	8b 45 08             	mov    0x8(%ebp),%eax
84000261:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
84000264:	8b 45 0c             	mov    0xc(%ebp),%eax
84000267:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
8400026a:	8b 45 10             	mov    0x10(%ebp),%eax
8400026d:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
84000270:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000273:	50                   	push   %eax
84000274:	e8 d5 fd ff ff       	call   8400004e <sys_call>
84000279:	83 c4 04             	add    $0x4,%esp
}
8400027c:	c9                   	leave  
8400027d:	c3                   	ret    

8400027e <fstat>:

/**
 * 获取文件的状态
 */
int fstat(int file, struct stat *st) {
8400027e:	55                   	push   %ebp
8400027f:	89 e5                	mov    %esp,%ebp
84000281:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
84000284:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)file;
8400028b:	8b 45 08             	mov    0x8(%ebp),%eax
8400028e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
84000291:	8b 45 0c             	mov    0xc(%ebp),%eax
84000294:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
84000297:	8d 45 ec             	lea    -0x14(%ebp),%eax
8400029a:	50                   	push   %eax
8400029b:	e8 ae fd ff ff       	call   8400004e <sys_call>
840002a0:	83 c4 04             	add    $0x4,%esp
}
840002a3:	c9                   	leave  
840002a4:	c3                   	ret    

840002a5 <isatty>:

/**
 * 判断文件描述符与tty关联
 */
int isatty(int file) {
840002a5:	55                   	push   %ebp
840002a6:	89 e5                	mov    %esp,%ebp
840002a8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
840002ab:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
840002b2:	8b 45 08             	mov    0x8(%ebp),%eax
840002b5:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
840002b8:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002bb:	50                   	push   %eax
840002bc:	e8 8d fd ff ff       	call   8400004e <sys_call>
840002c1:	83 c4 04             	add    $0x4,%esp
}
840002c4:	c9                   	leave  
840002c5:	c3                   	ret    

840002c6 <sbrk>:

void * sbrk(ptrdiff_t incr) {
840002c6:	55                   	push   %ebp
840002c7:	89 e5                	mov    %esp,%ebp
840002c9:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
840002cc:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)incr;
840002d3:	8b 45 08             	mov    0x8(%ebp),%eax
840002d6:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
840002d9:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002dc:	50                   	push   %eax
840002dd:	e8 6c fd ff ff       	call   8400004e <sys_call>
840002e2:	83 c4 04             	add    $0x4,%esp
}
840002e5:	c9                   	leave  
840002e6:	c3                   	ret    

840002e7 <dup>:

int dup (int file) {
840002e7:	55                   	push   %ebp
840002e8:	89 e5                	mov    %esp,%ebp
840002ea:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
840002ed:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
840002f4:	8b 45 08             	mov    0x8(%ebp),%eax
840002f7:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
840002fa:	8d 45 ec             	lea    -0x14(%ebp),%eax
840002fd:	50                   	push   %eax
840002fe:	e8 4b fd ff ff       	call   8400004e <sys_call>
84000303:	83 c4 04             	add    $0x4,%esp
}
84000306:	c9                   	leave  
84000307:	c3                   	ret    

84000308 <ioctl>:

int ioctl(int fd, int cmd, int arg0, int arg1) {
84000308:	55                   	push   %ebp
84000309:	89 e5                	mov    %esp,%ebp
8400030b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
8400030e:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = fd;
84000315:	8b 45 08             	mov    0x8(%ebp),%eax
84000318:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = cmd;
8400031b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400031e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = arg0;
84000321:	8b 45 10             	mov    0x10(%ebp),%eax
84000324:	89 45 f8             	mov    %eax,-0x8(%ebp)
    args.arg3 = arg1;
84000327:	8b 45 14             	mov    0x14(%ebp),%eax
8400032a:	89 45 fc             	mov    %eax,-0x4(%ebp)
    return sys_call(&args);
8400032d:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000330:	50                   	push   %eax
84000331:	e8 18 fd ff ff       	call   8400004e <sys_call>
84000336:	83 c4 04             	add    $0x4,%esp
}
84000339:	c9                   	leave  
8400033a:	c3                   	ret    

8400033b <opendir>:

DIR * opendir(const char * name) {
8400033b:	55                   	push   %ebp
8400033c:	89 e5                	mov    %esp,%ebp
8400033e:	83 ec 28             	sub    $0x28,%esp
    DIR * dir = (DIR *)malloc(sizeof(DIR));
84000341:	83 ec 0c             	sub    $0xc,%esp
84000344:	68 10 01 00 00       	push   $0x110
84000349:	e8 08 16 00 00       	call   84001956 <malloc>
8400034e:	83 c4 10             	add    $0x10,%esp
84000351:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR *)0) {
84000354:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000358:	75 07                	jne    84000361 <opendir+0x26>
        return (DIR *)0;
8400035a:	b8 00 00 00 00       	mov    $0x0,%eax
8400035f:	eb 43                	jmp    840003a4 <opendir+0x69>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
84000361:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)name;
84000368:	8b 45 08             	mov    0x8(%ebp),%eax
8400036b:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
8400036e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000371:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    int err = sys_call(&args);
84000374:	83 ec 0c             	sub    $0xc,%esp
84000377:	8d 45 dc             	lea    -0x24(%ebp),%eax
8400037a:	50                   	push   %eax
8400037b:	e8 ce fc ff ff       	call   8400004e <sys_call>
84000380:	83 c4 10             	add    $0x10,%esp
84000383:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (err < 0) {
84000386:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8400038a:	79 15                	jns    840003a1 <opendir+0x66>
        free(dir);
8400038c:	83 ec 0c             	sub    $0xc,%esp
8400038f:	ff 75 f4             	pushl  -0xc(%ebp)
84000392:	e8 db 15 00 00       	call   84001972 <free>
84000397:	83 c4 10             	add    $0x10,%esp
        return (DIR *)0;
8400039a:	b8 00 00 00 00       	mov    $0x0,%eax
8400039f:	eb 03                	jmp    840003a4 <opendir+0x69>
    }
    return dir;
840003a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
840003a4:	c9                   	leave  
840003a5:	c3                   	ret    

840003a6 <readdir>:

struct dirent* readdir(DIR* dir) {
840003a6:	55                   	push   %ebp
840003a7:	89 e5                	mov    %esp,%ebp
840003a9:	83 ec 20             	sub    $0x20,%esp

    syscall_args_t args;
    args.id = SYS_readdir;
840003ac:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
840003b3:	8b 45 08             	mov    0x8(%ebp),%eax
840003b6:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&dir->dirent;
840003b9:	8b 45 08             	mov    0x8(%ebp),%eax
840003bc:	83 c0 04             	add    $0x4,%eax
840003bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
    int err = sys_call(&args);
840003c2:	8d 45 e8             	lea    -0x18(%ebp),%eax
840003c5:	50                   	push   %eax
840003c6:	e8 83 fc ff ff       	call   8400004e <sys_call>
840003cb:	83 c4 04             	add    $0x4,%esp
840003ce:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
840003d1:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
840003d5:	79 07                	jns    840003de <readdir+0x38>
        return (struct dirent *)0;
840003d7:	b8 00 00 00 00       	mov    $0x0,%eax
840003dc:	eb 06                	jmp    840003e4 <readdir+0x3e>
    }
    return &dir->dirent;
840003de:	8b 45 08             	mov    0x8(%ebp),%eax
840003e1:	83 c0 04             	add    $0x4,%eax
}
840003e4:	c9                   	leave  
840003e5:	c3                   	ret    

840003e6 <closedir>:

int closedir(DIR *dir) {
840003e6:	55                   	push   %ebp
840003e7:	89 e5                	mov    %esp,%ebp
840003e9:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
840003ec:	c7 45 e4 3e 00 00 00 	movl   $0x3e,-0x1c(%ebp)
    args.arg0 = (int)dir;
840003f3:	8b 45 08             	mov    0x8(%ebp),%eax
840003f6:	89 45 e8             	mov    %eax,-0x18(%ebp)
    sys_call(&args);
840003f9:	8d 45 e4             	lea    -0x1c(%ebp),%eax
840003fc:	50                   	push   %eax
840003fd:	e8 4c fc ff ff       	call   8400004e <sys_call>
84000402:	83 c4 04             	add    $0x4,%esp

    free(dir);
84000405:	83 ec 0c             	sub    $0xc,%esp
84000408:	ff 75 08             	pushl  0x8(%ebp)
8400040b:	e8 62 15 00 00       	call   84001972 <free>
84000410:	83 c4 10             	add    $0x10,%esp
    return 0;
84000413:	b8 00 00 00 00       	mov    $0x0,%eax
}
84000418:	c9                   	leave  
84000419:	c3                   	ret    

8400041a <unlink>:

int unlink(const char *path) {
8400041a:	55                   	push   %ebp
8400041b:	89 e5                	mov    %esp,%ebp
8400041d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
84000420:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)path;
84000427:	8b 45 08             	mov    0x8(%ebp),%eax
8400042a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
8400042d:	8d 45 ec             	lea    -0x14(%ebp),%eax
84000430:	50                   	push   %eax
84000431:	e8 18 fc ff ff       	call   8400004e <sys_call>
84000436:	83 c4 04             	add    $0x4,%esp
}
84000439:	c9                   	leave  
8400043a:	c3                   	ret    

8400043b <is_hit_itself>:
static snake_t snake;		// 目前只支持一条蛇

/**
 * 判断蛇是否咬到自己
 */
static int is_hit_itself (void) {
8400043b:	55                   	push   %ebp
8400043c:	89 e5                	mov    %esp,%ebp
8400043e:	83 ec 10             	sub    $0x10,%esp
	for (body_part_t * body = snake.head->next; body; body = body->next) {
84000441:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000446:	8b 40 08             	mov    0x8(%eax),%eax
84000449:	89 45 fc             	mov    %eax,-0x4(%ebp)
8400044c:	eb 32                	jmp    84000480 <is_hit_itself+0x45>
		if ((body->row == snake.head->row) && (body->col == snake.head->col)) {
8400044e:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000451:	8b 10                	mov    (%eax),%edx
84000453:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000458:	8b 00                	mov    (%eax),%eax
8400045a:	39 c2                	cmp    %eax,%edx
8400045c:	75 19                	jne    84000477 <is_hit_itself+0x3c>
8400045e:	8b 45 fc             	mov    -0x4(%ebp),%eax
84000461:	8b 50 04             	mov    0x4(%eax),%edx
84000464:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000469:	8b 40 04             	mov    0x4(%eax),%eax
8400046c:	39 c2                	cmp    %eax,%edx
8400046e:	75 07                	jne    84000477 <is_hit_itself+0x3c>
			return 1;
84000470:	b8 01 00 00 00       	mov    $0x1,%eax
84000475:	eb 14                	jmp    8400048b <is_hit_itself+0x50>
	for (body_part_t * body = snake.head->next; body; body = body->next) {
84000477:	8b 45 fc             	mov    -0x4(%ebp),%eax
8400047a:	8b 40 08             	mov    0x8(%eax),%eax
8400047d:	89 45 fc             	mov    %eax,-0x4(%ebp)
84000480:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
84000484:	75 c8                	jne    8400044e <is_hit_itself+0x13>
		}
	}
	return 0;
84000486:	b8 00 00 00 00       	mov    $0x0,%eax
}
8400048b:	c9                   	leave  
8400048c:	c3                   	ret    

8400048d <is_hit_wall>:

/**
 * 判断是否碰到墙
 */
static int is_hit_wall (void) {
8400048d:	55                   	push   %ebp
8400048e:	89 e5                	mov    %esp,%ebp
	return ((snake.head->row <= 0) 
84000490:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000495:	8b 00                	mov    (%eax),%eax
			|| (snake.head->col <= 0))
			|| (snake.head->row >= row_max - 1) 
			|| (snake.head->col >= col_max - 1);
84000497:	85 c0                	test   %eax,%eax
84000499:	7e 35                	jle    840004d0 <is_hit_wall+0x43>
			|| (snake.head->col <= 0))
8400049b:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840004a0:	8b 40 04             	mov    0x4(%eax),%eax
840004a3:	85 c0                	test   %eax,%eax
840004a5:	7e 29                	jle    840004d0 <is_hit_wall+0x43>
			|| (snake.head->row >= row_max - 1) 
840004a7:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840004ac:	8b 00                	mov    (%eax),%eax
840004ae:	8b 15 80 63 00 84    	mov    0x84006380,%edx
840004b4:	83 ea 01             	sub    $0x1,%edx
840004b7:	39 d0                	cmp    %edx,%eax
840004b9:	7d 15                	jge    840004d0 <is_hit_wall+0x43>
			|| (snake.head->col >= col_max - 1);
840004bb:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840004c0:	8b 40 04             	mov    0x4(%eax),%eax
840004c3:	8b 15 84 63 00 84    	mov    0x84006384,%edx
840004c9:	83 ea 01             	sub    $0x1,%edx
840004cc:	39 d0                	cmp    %edx,%eax
840004ce:	7c 07                	jl     840004d7 <is_hit_wall+0x4a>
840004d0:	b8 01 00 00 00       	mov    $0x1,%eax
840004d5:	eb 05                	jmp    840004dc <is_hit_wall+0x4f>
840004d7:	b8 00 00 00 00       	mov    $0x0,%eax
}
840004dc:	5d                   	pop    %ebp
840004dd:	c3                   	ret    

840004de <is_hit_food>:

/**
 * 判断是否吃到食物
 */
static int is_hit_food (void) {
840004de:	55                   	push   %ebp
840004df:	89 e5                	mov    %esp,%ebp
	return ((snake.head->row == food->row) && (snake.head->col == food->col));
840004e1:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840004e6:	8b 10                	mov    (%eax),%edx
840004e8:	a1 88 63 00 84       	mov    0x84006388,%eax
840004ed:	8b 00                	mov    (%eax),%eax
840004ef:	39 c2                	cmp    %eax,%edx
840004f1:	75 1b                	jne    8400050e <is_hit_food+0x30>
840004f3:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840004f8:	8b 50 04             	mov    0x4(%eax),%edx
840004fb:	a1 88 63 00 84       	mov    0x84006388,%eax
84000500:	8b 40 04             	mov    0x4(%eax),%eax
84000503:	39 c2                	cmp    %eax,%edx
84000505:	75 07                	jne    8400050e <is_hit_food+0x30>
84000507:	b8 01 00 00 00       	mov    $0x1,%eax
8400050c:	eb 05                	jmp    84000513 <is_hit_food+0x35>
8400050e:	b8 00 00 00 00       	mov    $0x0,%eax
}
84000513:	5d                   	pop    %ebp
84000514:	c3                   	ret    

84000515 <show_char>:

static inline void show_char(int row, int col, char c) {
84000515:	55                   	push   %ebp
84000516:	89 e5                	mov    %esp,%ebp
84000518:	83 ec 18             	sub    $0x18,%esp
8400051b:	8b 45 10             	mov    0x10(%ebp),%eax
8400051e:	88 45 f4             	mov    %al,-0xc(%ebp)
    printf("\x1b[%d;%dH%c\x1b[%d;%dH", row, col, c, row, col);
84000521:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
84000525:	83 ec 08             	sub    $0x8,%esp
84000528:	ff 75 0c             	pushl  0xc(%ebp)
8400052b:	ff 75 08             	pushl  0x8(%ebp)
8400052e:	50                   	push   %eax
8400052f:	ff 75 0c             	pushl  0xc(%ebp)
84000532:	ff 75 08             	pushl  0x8(%ebp)
84000535:	68 80 55 00 84       	push   $0x84005580
8400053a:	e8 c6 1f 00 00       	call   84002505 <iprintf>
8400053f:	83 c4 20             	add    $0x20,%esp
}
84000542:	90                   	nop
84000543:	c9                   	leave  
84000544:	c3                   	ret    

84000545 <show_string>:

static inline void show_string (int row, int col, char * str) {
84000545:	55                   	push   %ebp
84000546:	89 e5                	mov    %esp,%ebp
84000548:	83 ec 08             	sub    $0x8,%esp
    printf("\x1b[%d;%dH%s", row, col, str);
8400054b:	ff 75 10             	pushl  0x10(%ebp)
8400054e:	ff 75 0c             	pushl  0xc(%ebp)
84000551:	ff 75 08             	pushl  0x8(%ebp)
84000554:	68 93 55 00 84       	push   $0x84005593
84000559:	e8 a7 1f 00 00       	call   84002505 <iprintf>
8400055e:	83 c4 10             	add    $0x10,%esp
}
84000561:	90                   	nop
84000562:	c9                   	leave  
84000563:	c3                   	ret    

84000564 <clear_map>:

/**
 * 清空整个地图
 */
void clear_map (void) {
84000564:	55                   	push   %ebp
84000565:	89 e5                	mov    %esp,%ebp
84000567:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
8400056a:	83 ec 08             	sub    $0x8,%esp
8400056d:	68 9e 55 00 84       	push   $0x8400559e
84000572:	68 a3 55 00 84       	push   $0x840055a3
84000577:	e8 89 1f 00 00       	call   84002505 <iprintf>
8400057c:	83 c4 10             	add    $0x10,%esp
}
8400057f:	90                   	nop
84000580:	c9                   	leave  
84000581:	c3                   	ret    

84000582 <create_map>:

/**
 * 创建地图
 */
void create_map(void) {
84000582:	55                   	push   %ebp
84000583:	89 e5                	mov    %esp,%ebp
84000585:	83 ec 18             	sub    $0x18,%esp
	clear_map();
84000588:	e8 d7 ff ff ff       	call   84000564 <clear_map>

    // 上下行
    for (int col = 1; col < col_max - 1; col++) {
8400058d:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
84000594:	eb 16                	jmp    840005ac <create_map+0x2a>
        show_char(0, col, '=');
84000596:	83 ec 04             	sub    $0x4,%esp
84000599:	6a 3d                	push   $0x3d
8400059b:	ff 75 f4             	pushl  -0xc(%ebp)
8400059e:	6a 00                	push   $0x0
840005a0:	e8 70 ff ff ff       	call   84000515 <show_char>
840005a5:	83 c4 10             	add    $0x10,%esp
    for (int col = 1; col < col_max - 1; col++) {
840005a8:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
840005ac:	a1 84 63 00 84       	mov    0x84006384,%eax
840005b1:	83 e8 01             	sub    $0x1,%eax
840005b4:	39 45 f4             	cmp    %eax,-0xc(%ebp)
840005b7:	7c dd                	jl     84000596 <create_map+0x14>
    }
    for (int col = 1; col < col_max - 1; col++) {
840005b9:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
840005c0:	eb 1d                	jmp    840005df <create_map+0x5d>
        show_char(row_max -1, col, '=');
840005c2:	a1 80 63 00 84       	mov    0x84006380,%eax
840005c7:	83 e8 01             	sub    $0x1,%eax
840005ca:	83 ec 04             	sub    $0x4,%esp
840005cd:	6a 3d                	push   $0x3d
840005cf:	ff 75 f0             	pushl  -0x10(%ebp)
840005d2:	50                   	push   %eax
840005d3:	e8 3d ff ff ff       	call   84000515 <show_char>
840005d8:	83 c4 10             	add    $0x10,%esp
    for (int col = 1; col < col_max - 1; col++) {
840005db:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
840005df:	a1 84 63 00 84       	mov    0x84006384,%eax
840005e4:	83 e8 01             	sub    $0x1,%eax
840005e7:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840005ea:	7c d6                	jl     840005c2 <create_map+0x40>
    }

    // 左右边界
    for (int row = 1; row < row_max - 1; row++) {
840005ec:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
840005f3:	eb 16                	jmp    8400060b <create_map+0x89>
        show_char(row, 0, '|');
840005f5:	83 ec 04             	sub    $0x4,%esp
840005f8:	6a 7c                	push   $0x7c
840005fa:	6a 00                	push   $0x0
840005fc:	ff 75 ec             	pushl  -0x14(%ebp)
840005ff:	e8 11 ff ff ff       	call   84000515 <show_char>
84000604:	83 c4 10             	add    $0x10,%esp
    for (int row = 1; row < row_max - 1; row++) {
84000607:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
8400060b:	a1 80 63 00 84       	mov    0x84006380,%eax
84000610:	83 e8 01             	sub    $0x1,%eax
84000613:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84000616:	7c dd                	jl     840005f5 <create_map+0x73>
    }
    for (int row = 1; row < row_max - 1; row++) {
84000618:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
8400061f:	eb 1d                	jmp    8400063e <create_map+0xbc>
        show_char(row, col_max - 1, '|');
84000621:	a1 84 63 00 84       	mov    0x84006384,%eax
84000626:	83 e8 01             	sub    $0x1,%eax
84000629:	83 ec 04             	sub    $0x4,%esp
8400062c:	6a 7c                	push   $0x7c
8400062e:	50                   	push   %eax
8400062f:	ff 75 e8             	pushl  -0x18(%ebp)
84000632:	e8 de fe ff ff       	call   84000515 <show_char>
84000637:	83 c4 10             	add    $0x10,%esp
    for (int row = 1; row < row_max - 1; row++) {
8400063a:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8400063e:	a1 80 63 00 84       	mov    0x84006380,%eax
84000643:	83 e8 01             	sub    $0x1,%eax
84000646:	39 45 e8             	cmp    %eax,-0x18(%ebp)
84000649:	7c d6                	jl     84000621 <create_map+0x9f>
    }
}
8400064b:	90                   	nop
8400064c:	c9                   	leave  
8400064d:	c3                   	ret    

8400064e <add_head>:

/**
 * 给蛇添加头部
 */
static void add_head (int row, int col) {
8400064e:	55                   	push   %ebp
8400064f:	89 e5                	mov    %esp,%ebp
84000651:	83 ec 18             	sub    $0x18,%esp
	body_part_t * part = (body_part_t *)malloc(sizeof(body_part_t));
84000654:	83 ec 0c             	sub    $0xc,%esp
84000657:	6a 0c                	push   $0xc
84000659:	e8 f8 12 00 00       	call   84001956 <malloc>
8400065e:	83 c4 10             	add    $0x10,%esp
84000661:	89 45 f4             	mov    %eax,-0xc(%ebp)
	part->row = row;
84000664:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000667:	8b 55 08             	mov    0x8(%ebp),%edx
8400066a:	89 10                	mov    %edx,(%eax)
	part->col = col;
8400066c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400066f:	8b 55 0c             	mov    0xc(%ebp),%edx
84000672:	89 50 04             	mov    %edx,0x4(%eax)
	part->next = snake.head;
84000675:	8b 15 8c 63 00 84    	mov    0x8400638c,%edx
8400067b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400067e:	89 50 08             	mov    %edx,0x8(%eax)
	snake.head = part;
84000681:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000684:	a3 8c 63 00 84       	mov    %eax,0x8400638c
	show_char(row, col, '*');
84000689:	83 ec 04             	sub    $0x4,%esp
8400068c:	6a 2a                	push   $0x2a
8400068e:	ff 75 0c             	pushl  0xc(%ebp)
84000691:	ff 75 08             	pushl  0x8(%ebp)
84000694:	e8 7c fe ff ff       	call   84000515 <show_char>
84000699:	83 c4 10             	add    $0x10,%esp
}
8400069c:	90                   	nop
8400069d:	c9                   	leave  
8400069e:	c3                   	ret    

8400069f <remove_tail>:

/**
 * 移除蛇尾的最后一个结点
 */
static void remove_tail (void) {
8400069f:	55                   	push   %ebp
840006a0:	89 e5                	mov    %esp,%ebp
840006a2:	83 ec 18             	sub    $0x18,%esp
	// 先定位curr到最后一个结点
	body_part_t * pre = (body_part_t *)0;
840006a5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
	body_part_t * curr = snake.head;
840006ac:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840006b1:	89 45 f0             	mov    %eax,-0x10(%ebp)
	while (curr->next) {
840006b4:	eb 0f                	jmp    840006c5 <remove_tail+0x26>
		pre = curr;
840006b6:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006b9:	89 45 f4             	mov    %eax,-0xc(%ebp)
		curr = curr->next;
840006bc:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006bf:	8b 40 08             	mov    0x8(%eax),%eax
840006c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
	while (curr->next) {
840006c5:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006c8:	8b 40 08             	mov    0x8(%eax),%eax
840006cb:	85 c0                	test   %eax,%eax
840006cd:	75 e7                	jne    840006b6 <remove_tail+0x17>
	}

	show_char(curr->row, curr->col, ' ');
840006cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006d2:	8b 50 04             	mov    0x4(%eax),%edx
840006d5:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006d8:	8b 00                	mov    (%eax),%eax
840006da:	83 ec 04             	sub    $0x4,%esp
840006dd:	6a 20                	push   $0x20
840006df:	52                   	push   %edx
840006e0:	50                   	push   %eax
840006e1:	e8 2f fe ff ff       	call   84000515 <show_char>
840006e6:	83 c4 10             	add    $0x10,%esp

	// 再移除
	pre->next = curr->next;
840006e9:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006ec:	8b 50 08             	mov    0x8(%eax),%edx
840006ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
840006f2:	89 50 08             	mov    %edx,0x8(%eax)
	curr->next = (body_part_t *)0;
840006f5:	8b 45 f0             	mov    -0x10(%ebp),%eax
840006f8:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
	free(curr);
840006ff:	83 ec 0c             	sub    $0xc,%esp
84000702:	ff 75 f0             	pushl  -0x10(%ebp)
84000705:	e8 68 12 00 00       	call   84001972 <free>
8400070a:	83 c4 10             	add    $0x10,%esp
}
8400070d:	90                   	nop
8400070e:	c9                   	leave  
8400070f:	c3                   	ret    

84000710 <create_snake>:

/**
 * 创建蛇。最开始只有一个头
 */
static void create_snake (void) {
84000710:	55                   	push   %ebp
84000711:	89 e5                	mov    %esp,%ebp
84000713:	83 ec 08             	sub    $0x8,%esp
	snake.head = (body_part_t *)malloc(sizeof(body_part_t));
84000716:	83 ec 0c             	sub    $0xc,%esp
84000719:	6a 0c                	push   $0xc
8400071b:	e8 36 12 00 00       	call   84001956 <malloc>
84000720:	83 c4 10             	add    $0x10,%esp
84000723:	a3 8c 63 00 84       	mov    %eax,0x8400638c
	snake.head->row = 10;        // 初始位置
84000728:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400072d:	c7 00 0a 00 00 00    	movl   $0xa,(%eax)
	snake.head->col = 20;
84000733:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000738:	c7 40 04 14 00 00 00 	movl   $0x14,0x4(%eax)
	snake.head->next = (body_part_t *)0;
8400073f:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000744:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
	snake.status = SNAKE_BIT_NONE;
8400074b:	c7 05 90 63 00 84 00 	movl   $0x0,0x84006390
84000752:	00 00 00 
	snake.dir = PLAYER1_KEY_LEFT;
84000755:	c7 05 94 63 00 84 61 	movl   $0x61,0x84006394
8400075c:	00 00 00 
    show_char(snake.head->row, snake.head->col, '*');
8400075f:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000764:	8b 50 04             	mov    0x4(%eax),%edx
84000767:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400076c:	8b 00                	mov    (%eax),%eax
8400076e:	83 ec 04             	sub    $0x4,%esp
84000771:	6a 2a                	push   $0x2a
84000773:	52                   	push   %edx
84000774:	50                   	push   %eax
84000775:	e8 9b fd ff ff       	call   84000515 <show_char>
8400077a:	83 c4 10             	add    $0x10,%esp
}
8400077d:	90                   	nop
8400077e:	c9                   	leave  
8400077f:	c3                   	ret    

84000780 <create_food>:

/**
 * 创建食物
 */
static void create_food(void)  {
84000780:	55                   	push   %ebp
84000781:	89 e5                	mov    %esp,%ebp
84000783:	83 ec 18             	sub    $0x18,%esp
	// 创建一个body
	food = (body_part_t *)malloc(sizeof(body_part_t));
84000786:	83 ec 0c             	sub    $0xc,%esp
84000789:	6a 0c                	push   $0xc
8400078b:	e8 c6 11 00 00       	call   84001956 <malloc>
84000790:	83 c4 10             	add    $0x10,%esp
84000793:	a3 88 63 00 84       	mov    %eax,0x84006388

	// 在设定位置时要避免与身体重合，所以要反复调整
	body_part_t * part = snake.head;
84000798:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400079d:	89 45 f4             	mov    %eax,-0xc(%ebp)
	do {
		// 设定一个随机的位置，没有随机数怎么办？
		// 只要让每次出现的位置有变化即可，不一定要真的随机
		food->row = 1 + rand() % (row_max - 3);
840007a0:	e8 bd 1d 00 00       	call   84002562 <rand>
840007a5:	89 c2                	mov    %eax,%edx
840007a7:	a1 80 63 00 84       	mov    0x84006380,%eax
840007ac:	8d 48 fd             	lea    -0x3(%eax),%ecx
840007af:	89 d0                	mov    %edx,%eax
840007b1:	99                   	cltd   
840007b2:	f7 f9                	idiv   %ecx
840007b4:	a1 88 63 00 84       	mov    0x84006388,%eax
840007b9:	83 c2 01             	add    $0x1,%edx
840007bc:	89 10                	mov    %edx,(%eax)
		food->col = 1 + rand() % (col_max - 3);
840007be:	e8 9f 1d 00 00       	call   84002562 <rand>
840007c3:	89 c2                	mov    %eax,%edx
840007c5:	a1 84 63 00 84       	mov    0x84006384,%eax
840007ca:	8d 48 fd             	lea    -0x3(%eax),%ecx
840007cd:	89 d0                	mov    %edx,%eax
840007cf:	99                   	cltd   
840007d0:	f7 f9                	idiv   %ecx
840007d2:	a1 88 63 00 84       	mov    0x84006388,%eax
840007d7:	83 c2 01             	add    $0x1,%edx
840007da:	89 50 04             	mov    %edx,0x4(%eax)

		// 食物不能在墙上
		if ((food->row < 0) || (food->row >= row_max)
840007dd:	a1 88 63 00 84       	mov    0x84006388,%eax
840007e2:	8b 00                	mov    (%eax),%eax
840007e4:	85 c0                	test   %eax,%eax
840007e6:	0f 88 95 00 00 00    	js     84000881 <create_food+0x101>
840007ec:	a1 88 63 00 84       	mov    0x84006388,%eax
840007f1:	8b 10                	mov    (%eax),%edx
840007f3:	a1 80 63 00 84       	mov    0x84006380,%eax
840007f8:	39 c2                	cmp    %eax,%edx
840007fa:	0f 8d 81 00 00 00    	jge    84000881 <create_food+0x101>
				|| (food->col < 0) || (food->col >= col_max)) {
84000800:	a1 88 63 00 84       	mov    0x84006388,%eax
84000805:	8b 40 04             	mov    0x4(%eax),%eax
84000808:	85 c0                	test   %eax,%eax
8400080a:	78 75                	js     84000881 <create_food+0x101>
8400080c:	a1 88 63 00 84       	mov    0x84006388,%eax
84000811:	8b 50 04             	mov    0x4(%eax),%edx
84000814:	a1 84 63 00 84       	mov    0x84006384,%eax
84000819:	39 c2                	cmp    %eax,%edx
8400081b:	7d 64                	jge    84000881 <create_food+0x101>
			continue;
		}

		// 食物不能在蛇身上
		// 遍历，如果有重合，则重来。没有则退出
		while (part) {
8400081d:	eb 4f                	jmp    8400086e <create_food+0xee>
			if ((food->row != snake.head->row) || (food->col != snake.head->col)) {
8400081f:	a1 88 63 00 84       	mov    0x84006388,%eax
84000824:	8b 10                	mov    (%eax),%edx
84000826:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400082b:	8b 00                	mov    (%eax),%eax
8400082d:	39 c2                	cmp    %eax,%edx
8400082f:	75 14                	jne    84000845 <create_food+0xc5>
84000831:	a1 88 63 00 84       	mov    0x84006388,%eax
84000836:	8b 50 04             	mov    0x4(%eax),%edx
84000839:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400083e:	8b 40 04             	mov    0x4(%eax),%eax
84000841:	39 c2                	cmp    %eax,%edx
84000843:	74 20                	je     84000865 <create_food+0xe5>
				// 将食物显示出来
				show_char(food->row, food->col, '*');
84000845:	a1 88 63 00 84       	mov    0x84006388,%eax
8400084a:	8b 50 04             	mov    0x4(%eax),%edx
8400084d:	a1 88 63 00 84       	mov    0x84006388,%eax
84000852:	8b 00                	mov    (%eax),%eax
84000854:	83 ec 04             	sub    $0x4,%esp
84000857:	6a 2a                	push   $0x2a
84000859:	52                   	push   %edx
8400085a:	50                   	push   %eax
8400085b:	e8 b5 fc ff ff       	call   84000515 <show_char>
84000860:	83 c4 10             	add    $0x10,%esp
				return;
84000863:	eb 22                	jmp    84000887 <create_food+0x107>
			}
			part = part->next;
84000865:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000868:	8b 40 08             	mov    0x8(%eax),%eax
8400086b:	89 45 f4             	mov    %eax,-0xc(%ebp)
		while (part) {
8400086e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000872:	75 ab                	jne    8400081f <create_food+0x9f>
		}
		part = snake.head;
84000874:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000879:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400087c:	e9 1f ff ff ff       	jmp    840007a0 <create_food+0x20>
			continue;
84000881:	90                   	nop
		food->row = 1 + rand() % (row_max - 3);
84000882:	e9 19 ff ff ff       	jmp    840007a0 <create_food+0x20>
	} while (1);
}
84000887:	c9                   	leave  
84000888:	c3                   	ret    

84000889 <free_food>:

/**
 * 释放掉食物
 */
static void free_food (void) {
84000889:	55                   	push   %ebp
8400088a:	89 e5                	mov    %esp,%ebp
8400088c:	83 ec 08             	sub    $0x8,%esp
	free(food);
8400088f:	a1 88 63 00 84       	mov    0x84006388,%eax
84000894:	83 ec 0c             	sub    $0xc,%esp
84000897:	50                   	push   %eax
84000898:	e8 d5 10 00 00       	call   84001972 <free>
8400089d:	83 c4 10             	add    $0x10,%esp
	food = (body_part_t *)0;
840008a0:	c7 05 88 63 00 84 00 	movl   $0x0,0x84006388
840008a7:	00 00 00 
}
840008aa:	90                   	nop
840008ab:	c9                   	leave  
840008ac:	c3                   	ret    

840008ad <move_forward>:

/**
 * 蛇向前移动一个位置，具体移动方向由键盘控制
 */
static void move_forward (int dir) {
840008ad:	55                   	push   %ebp
840008ae:	89 e5                	mov    %esp,%ebp
840008b0:	83 ec 18             	sub    $0x18,%esp
	int next_row, next_col;

	// 计算下一位置
	switch (dir) {
840008b3:	8b 45 08             	mov    0x8(%ebp),%eax
840008b6:	83 f8 64             	cmp    $0x64,%eax
840008b9:	74 38                	je     840008f3 <move_forward+0x46>
840008bb:	83 f8 64             	cmp    $0x64,%eax
840008be:	7f 0a                	jg     840008ca <move_forward+0x1d>
840008c0:	83 f8 61             	cmp    $0x61,%eax
840008c3:	74 14                	je     840008d9 <move_forward+0x2c>
	case PLAYER1_KEY_DOWN:
		next_row = snake.head->row + 1;
		next_col = snake.head->col;
		break;
	default:
		return;
840008c5:	e9 32 01 00 00       	jmp    840009fc <move_forward+0x14f>
	switch (dir) {
840008ca:	83 f8 73             	cmp    $0x73,%eax
840008cd:	74 58                	je     84000927 <move_forward+0x7a>
840008cf:	83 f8 77             	cmp    $0x77,%eax
840008d2:	74 39                	je     8400090d <move_forward+0x60>
		return;
840008d4:	e9 23 01 00 00       	jmp    840009fc <move_forward+0x14f>
		next_row = snake.head->row;
840008d9:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840008de:	8b 00                	mov    (%eax),%eax
840008e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col - 1;
840008e3:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840008e8:	8b 40 04             	mov    0x4(%eax),%eax
840008eb:	83 e8 01             	sub    $0x1,%eax
840008ee:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
840008f1:	eb 4d                	jmp    84000940 <move_forward+0x93>
		next_row = snake.head->row;
840008f3:	a1 8c 63 00 84       	mov    0x8400638c,%eax
840008f8:	8b 00                	mov    (%eax),%eax
840008fa:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col + 1;
840008fd:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000902:	8b 40 04             	mov    0x4(%eax),%eax
84000905:	83 c0 01             	add    $0x1,%eax
84000908:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
8400090b:	eb 33                	jmp    84000940 <move_forward+0x93>
		next_row = snake.head->row - 1;
8400090d:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000912:	8b 00                	mov    (%eax),%eax
84000914:	83 e8 01             	sub    $0x1,%eax
84000917:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col;
8400091a:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400091f:	8b 40 04             	mov    0x4(%eax),%eax
84000922:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
84000925:	eb 19                	jmp    84000940 <move_forward+0x93>
		next_row = snake.head->row + 1;
84000927:	a1 8c 63 00 84       	mov    0x8400638c,%eax
8400092c:	8b 00                	mov    (%eax),%eax
8400092e:	83 c0 01             	add    $0x1,%eax
84000931:	89 45 f4             	mov    %eax,-0xc(%ebp)
		next_col = snake.head->col;
84000934:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000939:	8b 40 04             	mov    0x4(%eax),%eax
8400093c:	89 45 f0             	mov    %eax,-0x10(%ebp)
		break;
8400093f:	90                   	nop
	}

	body_part_t * next_part = snake.head->next;
84000940:	a1 8c 63 00 84       	mov    0x8400638c,%eax
84000945:	8b 40 08             	mov    0x8(%eax),%eax
84000948:	89 45 ec             	mov    %eax,-0x14(%ebp)
	if (next_part) {
8400094b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8400094f:	74 19                	je     8400096a <move_forward+0xbd>
		if ((next_row == next_part->row) && (next_col == next_part->col)) {
84000951:	8b 45 ec             	mov    -0x14(%ebp),%eax
84000954:	8b 00                	mov    (%eax),%eax
84000956:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84000959:	75 0f                	jne    8400096a <move_forward+0xbd>
8400095b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400095e:	8b 40 04             	mov    0x4(%eax),%eax
84000961:	39 45 f0             	cmp    %eax,-0x10(%ebp)
84000964:	0f 84 91 00 00 00    	je     840009fb <move_forward+0x14e>
			return;
		}
	}

	// 先不管有没有食物，都生成一个头部，然后前移
	add_head(next_row, next_col);
8400096a:	83 ec 08             	sub    $0x8,%esp
8400096d:	ff 75 f0             	pushl  -0x10(%ebp)
84000970:	ff 75 f4             	pushl  -0xc(%ebp)
84000973:	e8 d6 fc ff ff       	call   8400064e <add_head>
84000978:	83 c4 10             	add    $0x10,%esp

	// 然后检查相应的异常情况
	if (is_hit_itself()) {
8400097b:	e8 bb fa ff ff       	call   8400043b <is_hit_itself>
84000980:	85 c0                	test   %eax,%eax
84000982:	74 11                	je     84000995 <move_forward+0xe8>
		snake.status = SNAKE_BIT_ITSELF;
84000984:	c7 05 90 63 00 84 01 	movl   $0x1,0x84006390
8400098b:	00 00 00 
		remove_tail();
8400098e:	e8 0c fd ff ff       	call   8400069f <remove_tail>
84000993:	eb 48                	jmp    840009dd <move_forward+0x130>
	} else if (is_hit_wall()) {
84000995:	e8 f3 fa ff ff       	call   8400048d <is_hit_wall>
8400099a:	85 c0                	test   %eax,%eax
8400099c:	74 11                	je     840009af <move_forward+0x102>
		snake.status = SNAKE_BIT_WALL;
8400099e:	c7 05 90 63 00 84 02 	movl   $0x2,0x84006390
840009a5:	00 00 00 
		remove_tail();
840009a8:	e8 f2 fc ff ff       	call   8400069f <remove_tail>
840009ad:	eb 2e                	jmp    840009dd <move_forward+0x130>
	} else if (is_hit_food()){
840009af:	e8 2a fb ff ff       	call   840004de <is_hit_food>
840009b4:	85 c0                	test   %eax,%eax
840009b6:	74 16                	je     840009ce <move_forward+0x121>
		// 食物被吃掉, 回收，重新生成
		free_food();
840009b8:	e8 cc fe ff ff       	call   84000889 <free_food>
		create_food();
840009bd:	e8 be fd ff ff       	call   84000780 <create_food>
		snake.status = SNAKE_BIT_FOOD;
840009c2:	c7 05 90 63 00 84 03 	movl   $0x3,0x84006390
840009c9:	00 00 00 
840009cc:	eb 0f                	jmp    840009dd <move_forward+0x130>
	} else {
		// 没有吃到食物，需要移除尾部
		remove_tail();
840009ce:	e8 cc fc ff ff       	call   8400069f <remove_tail>
		snake.status = SNAKE_BIT_NONE;
840009d3:	c7 05 90 63 00 84 00 	movl   $0x0,0x84006390
840009da:	00 00 00 
	}

	snake.dir = dir;
840009dd:	8b 45 08             	mov    0x8(%ebp),%eax
840009e0:	a3 94 63 00 84       	mov    %eax,0x84006394
	fflush(stdout);
840009e5:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
840009ea:	8b 40 08             	mov    0x8(%eax),%eax
840009ed:	83 ec 0c             	sub    $0xc,%esp
840009f0:	50                   	push   %eax
840009f1:	e8 d4 04 00 00       	call   84000eca <fflush>
840009f6:	83 c4 10             	add    $0x10,%esp
840009f9:	eb 01                	jmp    840009fc <move_forward+0x14f>
			return;
840009fb:	90                   	nop
}
840009fc:	c9                   	leave  
840009fd:	c3                   	ret    

840009fe <show_welcome>:

/**
 * 初始化游戏
 */
static void show_welcome (void) {
840009fe:	55                   	push   %ebp
840009ff:	89 e5                	mov    %esp,%ebp
84000a01:	83 ec 08             	sub    $0x8,%esp
	clear_map();
84000a04:	e8 5b fb ff ff       	call   84000564 <clear_map>
	// setvbuf(stdout, NULL, _IONBF, 0); 调试用

    show_string(0, 0, "Welcome to sname game");
84000a09:	83 ec 04             	sub    $0x4,%esp
84000a0c:	68 a6 55 00 84       	push   $0x840055a6
84000a11:	6a 00                	push   $0x0
84000a13:	6a 00                	push   $0x0
84000a15:	e8 2b fb ff ff       	call   84000545 <show_string>
84000a1a:	83 c4 10             	add    $0x10,%esp
    show_string(1, 0, "Use a.w.s.d to move snake");
84000a1d:	83 ec 04             	sub    $0x4,%esp
84000a20:	68 bc 55 00 84       	push   $0x840055bc
84000a25:	6a 00                	push   $0x0
84000a27:	6a 01                	push   $0x1
84000a29:	e8 17 fb ff ff       	call   84000545 <show_string>
84000a2e:	83 c4 10             	add    $0x10,%esp
    show_string(2, 0, "Press any key to start game");
84000a31:	83 ec 04             	sub    $0x4,%esp
84000a34:	68 d6 55 00 84       	push   $0x840055d6
84000a39:	6a 00                	push   $0x0
84000a3b:	6a 02                	push   $0x2
84000a3d:	e8 03 fb ff ff       	call   84000545 <show_string>
84000a42:	83 c4 10             	add    $0x10,%esp
	fflush(stdout);
84000a45:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84000a4a:	8b 40 08             	mov    0x8(%eax),%eax
84000a4d:	83 ec 0c             	sub    $0xc,%esp
84000a50:	50                   	push   %eax
84000a51:	e8 74 04 00 00       	call   84000eca <fflush>
84000a56:	83 c4 10             	add    $0x10,%esp
	
	// 按Q即退出，所以无缓存输入
	setvbuf(stdin, NULL, _IONBF, 0);
84000a59:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84000a5e:	8b 40 04             	mov    0x4(%eax),%eax
84000a61:	6a 00                	push   $0x0
84000a63:	6a 02                	push   $0x2
84000a65:	6a 00                	push   $0x0
84000a67:	50                   	push   %eax
84000a68:	e8 9e 1b 00 00       	call   8400260b <setvbuf>
84000a6d:	83 c4 10             	add    $0x10,%esp
    getchar();
84000a70:	e8 bc 0e 00 00       	call   84001931 <getchar>
}
84000a75:	90                   	nop
84000a76:	c9                   	leave  
84000a77:	c3                   	ret    

84000a78 <begin_game>:

/**
 * @brief 开始游戏
 */
static void begin_game (void) {
84000a78:	55                   	push   %ebp
84000a79:	89 e5                	mov    %esp,%ebp
84000a7b:	83 ec 08             	sub    $0x8,%esp
    create_map();
84000a7e:	e8 ff fa ff ff       	call   84000582 <create_map>
    create_snake();
84000a83:	e8 88 fc ff ff       	call   84000710 <create_snake>
    create_food();
84000a88:	e8 f3 fc ff ff       	call   84000780 <create_food>
	fflush(stdout);
84000a8d:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84000a92:	8b 40 08             	mov    0x8(%eax),%eax
84000a95:	83 ec 0c             	sub    $0xc,%esp
84000a98:	50                   	push   %eax
84000a99:	e8 2c 04 00 00       	call   84000eca <fflush>
84000a9e:	83 c4 10             	add    $0x10,%esp
}
84000aa1:	90                   	nop
84000aa2:	c9                   	leave  
84000aa3:	c3                   	ret    

84000aa4 <main>:

int main (int argc, char ** argv) {
84000aa4:	8d 4c 24 04          	lea    0x4(%esp),%ecx
84000aa8:	83 e4 f0             	and    $0xfffffff0,%esp
84000aab:	ff 71 fc             	pushl  -0x4(%ecx)
84000aae:	55                   	push   %ebp
84000aaf:	89 e5                	mov    %esp,%ebp
84000ab1:	51                   	push   %ecx
84000ab2:	83 ec 24             	sub    $0x24,%esp
	row_max = 25;
84000ab5:	c7 05 80 63 00 84 19 	movl   $0x19,0x84006380
84000abc:	00 00 00 
	col_max = 80;
84000abf:	c7 05 84 63 00 84 50 	movl   $0x50,0x84006384
84000ac6:	00 00 00 

	ioctl(0, TTY_CMD_ECHO, 0, 0);
84000ac9:	6a 00                	push   $0x0
84000acb:	6a 00                	push   $0x0
84000acd:	6a 01                	push   $0x1
84000acf:	6a 00                	push   $0x0
84000ad1:	e8 32 f8 ff ff       	call   84000308 <ioctl>
84000ad6:	83 c4 10             	add    $0x10,%esp

	show_welcome();
84000ad9:	e8 20 ff ff ff       	call   840009fe <show_welcome>
    begin_game();
84000ade:	e8 95 ff ff ff       	call   84000a78 <begin_game>

    int count;
	int cnt = 0;
84000ae3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
	do {
		// 检查是否有键盘输入
		ioctl(0, TTY_CMD_IN_COUNT, (int)&count, 0);
84000aea:	8d 45 e4             	lea    -0x1c(%ebp),%eax
84000aed:	6a 00                	push   $0x0
84000aef:	50                   	push   %eax
84000af0:	6a 02                	push   $0x2
84000af2:	6a 00                	push   $0x0
84000af4:	e8 0f f8 ff ff       	call   84000308 <ioctl>
84000af9:	83 c4 10             	add    $0x10,%esp
		if (count) {
84000afc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84000aff:	85 c0                	test   %eax,%eax
84000b01:	74 18                	je     84000b1b <main+0x77>
			int ch = getchar();
84000b03:	e8 29 0e 00 00       	call   84001931 <getchar>
84000b08:	89 45 f0             	mov    %eax,-0x10(%ebp)
			move_forward(ch);
84000b0b:	83 ec 0c             	sub    $0xc,%esp
84000b0e:	ff 75 f0             	pushl  -0x10(%ebp)
84000b11:	e8 97 fd ff ff       	call   840008ad <move_forward>
84000b16:	83 c4 10             	add    $0x10,%esp
84000b19:	eb 38                	jmp    84000b53 <main+0xaf>
		} else if (++cnt % 50 == 0) {
84000b1b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84000b1f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84000b22:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
84000b27:	89 c8                	mov    %ecx,%eax
84000b29:	f7 ea                	imul   %edx
84000b2b:	c1 fa 04             	sar    $0x4,%edx
84000b2e:	89 c8                	mov    %ecx,%eax
84000b30:	c1 f8 1f             	sar    $0x1f,%eax
84000b33:	29 c2                	sub    %eax,%edx
84000b35:	89 d0                	mov    %edx,%eax
84000b37:	6b c0 32             	imul   $0x32,%eax,%eax
84000b3a:	29 c1                	sub    %eax,%ecx
84000b3c:	89 c8                	mov    %ecx,%eax
84000b3e:	85 c0                	test   %eax,%eax
84000b40:	75 11                	jne    84000b53 <main+0xaf>
			// 每隔一段时间自动往前移
			move_forward(snake.dir);
84000b42:	a1 94 63 00 84       	mov    0x84006394,%eax
84000b47:	83 ec 0c             	sub    $0xc,%esp
84000b4a:	50                   	push   %eax
84000b4b:	e8 5d fd ff ff       	call   840008ad <move_forward>
84000b50:	83 c4 10             	add    $0x10,%esp
		}

		if ((snake.status == SNAKE_BIT_ITSELF) || (snake.status == SNAKE_BIT_WALL)) {
84000b53:	a1 90 63 00 84       	mov    0x84006390,%eax
84000b58:	83 f8 01             	cmp    $0x1,%eax
84000b5b:	74 0a                	je     84000b67 <main+0xc3>
84000b5d:	a1 90 63 00 84       	mov    0x84006390,%eax
84000b62:	83 f8 02             	cmp    $0x2,%eax
84000b65:	75 6d                	jne    84000bd4 <main+0x130>
			int row = row_max / 2, col = col_max / 2;
84000b67:	a1 80 63 00 84       	mov    0x84006380,%eax
84000b6c:	89 c2                	mov    %eax,%edx
84000b6e:	c1 ea 1f             	shr    $0x1f,%edx
84000b71:	01 d0                	add    %edx,%eax
84000b73:	d1 f8                	sar    %eax
84000b75:	89 45 ec             	mov    %eax,-0x14(%ebp)
84000b78:	a1 84 63 00 84       	mov    0x84006384,%eax
84000b7d:	89 c2                	mov    %eax,%edx
84000b7f:	c1 ea 1f             	shr    $0x1f,%edx
84000b82:	01 d0                	add    %edx,%eax
84000b84:	d1 f8                	sar    %eax
84000b86:	89 45 e8             	mov    %eax,-0x18(%ebp)
			show_string(row, col,  "GAME OVER");
84000b89:	83 ec 04             	sub    $0x4,%esp
84000b8c:	68 f2 55 00 84       	push   $0x840055f2
84000b91:	ff 75 e8             	pushl  -0x18(%ebp)
84000b94:	ff 75 ec             	pushl  -0x14(%ebp)
84000b97:	e8 a9 f9 ff ff       	call   84000545 <show_string>
84000b9c:	83 c4 10             	add    $0x10,%esp
			show_string(row + 1, col,  "Press Any key to continue");
84000b9f:	8b 45 ec             	mov    -0x14(%ebp),%eax
84000ba2:	83 c0 01             	add    $0x1,%eax
84000ba5:	83 ec 04             	sub    $0x4,%esp
84000ba8:	68 fc 55 00 84       	push   $0x840055fc
84000bad:	ff 75 e8             	pushl  -0x18(%ebp)
84000bb0:	50                   	push   %eax
84000bb1:	e8 8f f9 ff ff       	call   84000545 <show_string>
84000bb6:	83 c4 10             	add    $0x10,%esp
			fflush(stdout);
84000bb9:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84000bbe:	8b 40 08             	mov    0x8(%eax),%eax
84000bc1:	83 ec 0c             	sub    $0xc,%esp
84000bc4:	50                   	push   %eax
84000bc5:	e8 00 03 00 00       	call   84000eca <fflush>
84000bca:	83 c4 10             	add    $0x10,%esp
			getchar();
84000bcd:	e8 5f 0d 00 00       	call   84001931 <getchar>
			break;
84000bd2:	eb 12                	jmp    84000be6 <main+0x142>
		}

		msleep(10);
84000bd4:	83 ec 0c             	sub    $0xc,%esp
84000bd7:	6a 0a                	push   $0xa
84000bd9:	e8 bc f4 ff ff       	call   8400009a <msleep>
84000bde:	83 c4 10             	add    $0x10,%esp
		ioctl(0, TTY_CMD_IN_COUNT, (int)&count, 0);
84000be1:	e9 04 ff ff ff       	jmp    84000aea <main+0x46>
	}while (1);

	// 这里是有危险的，如果进程异常退出，将导致回显失败
	ioctl(0, TTY_CMD_ECHO, 1, 0);
84000be6:	6a 00                	push   $0x0
84000be8:	6a 01                	push   $0x1
84000bea:	6a 01                	push   $0x1
84000bec:	6a 00                	push   $0x0
84000bee:	e8 15 f7 ff ff       	call   84000308 <ioctl>
84000bf3:	83 c4 10             	add    $0x10,%esp
	clear_map();
84000bf6:	e8 69 f9 ff ff       	call   84000564 <clear_map>
    return 0;
84000bfb:	b8 00 00 00 00       	mov    $0x0,%eax
}
84000c00:	8b 4d fc             	mov    -0x4(%ebp),%ecx
84000c03:	c9                   	leave  
84000c04:	8d 61 fc             	lea    -0x4(%ecx),%esp
84000c07:	c3                   	ret    

84000c08 <exit>:
84000c08:	55                   	push   %ebp
84000c09:	89 e5                	mov    %esp,%ebp
84000c0b:	83 ec 08             	sub    $0x8,%esp
84000c0e:	83 ec 08             	sub    $0x8,%esp
84000c11:	6a 00                	push   $0x0
84000c13:	ff 75 08             	pushl  0x8(%ebp)
84000c16:	e8 5a 1d 00 00       	call   84002975 <__call_exitprocs>
84000c1b:	83 c4 10             	add    $0x10,%esp
84000c1e:	a1 18 56 00 84       	mov    0x84005618,%eax
84000c23:	8b 40 3c             	mov    0x3c(%eax),%eax
84000c26:	85 c0                	test   %eax,%eax
84000c28:	74 17                	je     84000c41 <exit+0x39>
84000c2a:	a1 18 56 00 84       	mov    0x84005618,%eax
84000c2f:	8b 40 3c             	mov    0x3c(%eax),%eax
84000c32:	8b 15 18 56 00 84    	mov    0x84005618,%edx
84000c38:	83 ec 0c             	sub    $0xc,%esp
84000c3b:	52                   	push   %edx
84000c3c:	ff d0                	call   *%eax
84000c3e:	83 c4 10             	add    $0x10,%esp
84000c41:	83 ec 0c             	sub    $0xc,%esp
84000c44:	ff 75 08             	pushl  0x8(%ebp)
84000c47:	e8 42 f5 ff ff       	call   8400018e <_exit>

84000c4c <__sflush_r>:
84000c4c:	55                   	push   %ebp
84000c4d:	89 e5                	mov    %esp,%ebp
84000c4f:	57                   	push   %edi
84000c50:	56                   	push   %esi
84000c51:	53                   	push   %ebx
84000c52:	83 ec 1c             	sub    $0x1c,%esp
84000c55:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84000c58:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000c5c:	66 89 45 de          	mov    %ax,-0x22(%ebp)
84000c60:	0f bf 45 de          	movswl -0x22(%ebp),%eax
84000c64:	83 e0 08             	and    $0x8,%eax
84000c67:	85 c0                	test   %eax,%eax
84000c69:	0f 85 93 01 00 00    	jne    84000e02 <__sflush_r+0x1b6>
84000c6f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000c73:	80 cc 08             	or     $0x8,%ah
84000c76:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000c7a:	8b 43 04             	mov    0x4(%ebx),%eax
84000c7d:	85 c0                	test   %eax,%eax
84000c7f:	7f 0b                	jg     84000c8c <__sflush_r+0x40>
84000c81:	8b 43 3c             	mov    0x3c(%ebx),%eax
84000c84:	85 c0                	test   %eax,%eax
84000c86:	0f 8e 6f 01 00 00    	jle    84000dfb <__sflush_r+0x1af>
84000c8c:	8b 43 28             	mov    0x28(%ebx),%eax
84000c8f:	85 c0                	test   %eax,%eax
84000c91:	0f 84 64 01 00 00    	je     84000dfb <__sflush_r+0x1af>
84000c97:	8b 45 08             	mov    0x8(%ebp),%eax
84000c9a:	8b 00                	mov    (%eax),%eax
84000c9c:	89 45 d8             	mov    %eax,-0x28(%ebp)
84000c9f:	8b 45 08             	mov    0x8(%ebp),%eax
84000ca2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84000ca8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000cac:	98                   	cwtl   
84000cad:	25 00 10 00 00       	and    $0x1000,%eax
84000cb2:	85 c0                	test   %eax,%eax
84000cb4:	74 08                	je     84000cbe <__sflush_r+0x72>
84000cb6:	8b 43 50             	mov    0x50(%ebx),%eax
84000cb9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000cbc:	eb 64                	jmp    84000d22 <__sflush_r+0xd6>
84000cbe:	8b 43 28             	mov    0x28(%ebx),%eax
84000cc1:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000cc4:	6a 01                	push   $0x1
84000cc6:	6a 00                	push   $0x0
84000cc8:	52                   	push   %edx
84000cc9:	ff 75 08             	pushl  0x8(%ebp)
84000ccc:	ff d0                	call   *%eax
84000cce:	83 c4 10             	add    $0x10,%esp
84000cd1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000cd4:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000cd8:	75 48                	jne    84000d22 <__sflush_r+0xd6>
84000cda:	8b 45 08             	mov    0x8(%ebp),%eax
84000cdd:	8b 00                	mov    (%eax),%eax
84000cdf:	85 c0                	test   %eax,%eax
84000ce1:	74 3f                	je     84000d22 <__sflush_r+0xd6>
84000ce3:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
84000cea:	8b 45 08             	mov    0x8(%ebp),%eax
84000ced:	8b 00                	mov    (%eax),%eax
84000cef:	83 f8 1d             	cmp    $0x1d,%eax
84000cf2:	74 0a                	je     84000cfe <__sflush_r+0xb2>
84000cf4:	8b 45 08             	mov    0x8(%ebp),%eax
84000cf7:	8b 00                	mov    (%eax),%eax
84000cf9:	83 f8 16             	cmp    $0x16,%eax
84000cfc:	75 11                	jne    84000d0f <__sflush_r+0xc3>
84000cfe:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
84000d05:	8b 45 08             	mov    0x8(%ebp),%eax
84000d08:	8b 55 d8             	mov    -0x28(%ebp),%edx
84000d0b:	89 10                	mov    %edx,(%eax)
84000d0d:	eb 0b                	jmp    84000d1a <__sflush_r+0xce>
84000d0f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d13:	83 c8 40             	or     $0x40,%eax
84000d16:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000d1a:	8b 45 e0             	mov    -0x20(%ebp),%eax
84000d1d:	e9 48 01 00 00       	jmp    84000e6a <__sflush_r+0x21e>
84000d22:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d26:	98                   	cwtl   
84000d27:	83 e0 04             	and    $0x4,%eax
84000d2a:	85 c0                	test   %eax,%eax
84000d2c:	74 13                	je     84000d41 <__sflush_r+0xf5>
84000d2e:	8b 43 04             	mov    0x4(%ebx),%eax
84000d31:	29 45 e4             	sub    %eax,-0x1c(%ebp)
84000d34:	8b 43 30             	mov    0x30(%ebx),%eax
84000d37:	85 c0                	test   %eax,%eax
84000d39:	74 06                	je     84000d41 <__sflush_r+0xf5>
84000d3b:	8b 43 3c             	mov    0x3c(%ebx),%eax
84000d3e:	29 45 e4             	sub    %eax,-0x1c(%ebp)
84000d41:	8b 43 28             	mov    0x28(%ebx),%eax
84000d44:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000d47:	6a 00                	push   $0x0
84000d49:	ff 75 e4             	pushl  -0x1c(%ebp)
84000d4c:	52                   	push   %edx
84000d4d:	ff 75 08             	pushl  0x8(%ebp)
84000d50:	ff d0                	call   *%eax
84000d52:	83 c4 10             	add    $0x10,%esp
84000d55:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84000d58:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000d5c:	75 1d                	jne    84000d7b <__sflush_r+0x12f>
84000d5e:	8b 45 08             	mov    0x8(%ebp),%eax
84000d61:	8b 00                	mov    (%eax),%eax
84000d63:	85 c0                	test   %eax,%eax
84000d65:	74 14                	je     84000d7b <__sflush_r+0x12f>
84000d67:	8b 45 08             	mov    0x8(%ebp),%eax
84000d6a:	8b 00                	mov    (%eax),%eax
84000d6c:	83 f8 1d             	cmp    $0x1d,%eax
84000d6f:	74 0a                	je     84000d7b <__sflush_r+0x12f>
84000d71:	8b 45 08             	mov    0x8(%ebp),%eax
84000d74:	8b 00                	mov    (%eax),%eax
84000d76:	83 f8 16             	cmp    $0x16,%eax
84000d79:	75 6e                	jne    84000de9 <__sflush_r+0x19d>
84000d7b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d7f:	80 e4 f7             	and    $0xf7,%ah
84000d82:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000d86:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84000d8d:	8b 43 10             	mov    0x10(%ebx),%eax
84000d90:	89 03                	mov    %eax,(%ebx)
84000d92:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000d96:	98                   	cwtl   
84000d97:	25 00 10 00 00       	and    $0x1000,%eax
84000d9c:	85 c0                	test   %eax,%eax
84000d9e:	74 15                	je     84000db5 <__sflush_r+0x169>
84000da0:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
84000da4:	75 09                	jne    84000daf <__sflush_r+0x163>
84000da6:	8b 45 08             	mov    0x8(%ebp),%eax
84000da9:	8b 00                	mov    (%eax),%eax
84000dab:	85 c0                	test   %eax,%eax
84000dad:	75 06                	jne    84000db5 <__sflush_r+0x169>
84000daf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84000db2:	89 43 50             	mov    %eax,0x50(%ebx)
84000db5:	8b 45 08             	mov    0x8(%ebp),%eax
84000db8:	8b 55 d8             	mov    -0x28(%ebp),%edx
84000dbb:	89 10                	mov    %edx,(%eax)
84000dbd:	8b 43 30             	mov    0x30(%ebx),%eax
84000dc0:	85 c0                	test   %eax,%eax
84000dc2:	74 37                	je     84000dfb <__sflush_r+0x1af>
84000dc4:	8b 53 30             	mov    0x30(%ebx),%edx
84000dc7:	8d 43 40             	lea    0x40(%ebx),%eax
84000dca:	39 c2                	cmp    %eax,%edx
84000dcc:	74 12                	je     84000de0 <__sflush_r+0x194>
84000dce:	8b 43 30             	mov    0x30(%ebx),%eax
84000dd1:	83 ec 08             	sub    $0x8,%esp
84000dd4:	50                   	push   %eax
84000dd5:	ff 75 08             	pushl  0x8(%ebp)
84000dd8:	e8 28 05 00 00       	call   84001305 <_free_r>
84000ddd:	83 c4 10             	add    $0x10,%esp
84000de0:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84000de7:	eb 12                	jmp    84000dfb <__sflush_r+0x1af>
84000de9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000ded:	83 c8 40             	or     $0x40,%eax
84000df0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000df4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84000df9:	eb 6f                	jmp    84000e6a <__sflush_r+0x21e>
84000dfb:	b8 00 00 00 00       	mov    $0x0,%eax
84000e00:	eb 68                	jmp    84000e6a <__sflush_r+0x21e>
84000e02:	8b 73 10             	mov    0x10(%ebx),%esi
84000e05:	85 f6                	test   %esi,%esi
84000e07:	75 07                	jne    84000e10 <__sflush_r+0x1c4>
84000e09:	b8 00 00 00 00       	mov    $0x0,%eax
84000e0e:	eb 5a                	jmp    84000e6a <__sflush_r+0x21e>
84000e10:	8b 03                	mov    (%ebx),%eax
84000e12:	29 f0                	sub    %esi,%eax
84000e14:	89 c7                	mov    %eax,%edi
84000e16:	89 33                	mov    %esi,(%ebx)
84000e18:	0f bf 45 de          	movswl -0x22(%ebp),%eax
84000e1c:	83 e0 03             	and    $0x3,%eax
84000e1f:	85 c0                	test   %eax,%eax
84000e21:	75 05                	jne    84000e28 <__sflush_r+0x1dc>
84000e23:	8b 43 14             	mov    0x14(%ebx),%eax
84000e26:	eb 05                	jmp    84000e2d <__sflush_r+0x1e1>
84000e28:	b8 00 00 00 00       	mov    $0x0,%eax
84000e2d:	89 43 08             	mov    %eax,0x8(%ebx)
84000e30:	eb 2f                	jmp    84000e61 <__sflush_r+0x215>
84000e32:	8b 43 24             	mov    0x24(%ebx),%eax
84000e35:	8b 53 1c             	mov    0x1c(%ebx),%edx
84000e38:	57                   	push   %edi
84000e39:	56                   	push   %esi
84000e3a:	52                   	push   %edx
84000e3b:	ff 75 08             	pushl  0x8(%ebp)
84000e3e:	ff d0                	call   *%eax
84000e40:	83 c4 10             	add    $0x10,%esp
84000e43:	85 c0                	test   %eax,%eax
84000e45:	7f 12                	jg     84000e59 <__sflush_r+0x20d>
84000e47:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000e4b:	83 c8 40             	or     $0x40,%eax
84000e4e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84000e52:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84000e57:	eb 11                	jmp    84000e6a <__sflush_r+0x21e>
84000e59:	89 c1                	mov    %eax,%ecx
84000e5b:	89 c8                	mov    %ecx,%eax
84000e5d:	01 c6                	add    %eax,%esi
84000e5f:	29 cf                	sub    %ecx,%edi
84000e61:	85 ff                	test   %edi,%edi
84000e63:	7f cd                	jg     84000e32 <__sflush_r+0x1e6>
84000e65:	b8 00 00 00 00       	mov    $0x0,%eax
84000e6a:	8d 65 f4             	lea    -0xc(%ebp),%esp
84000e6d:	5b                   	pop    %ebx
84000e6e:	5e                   	pop    %esi
84000e6f:	5f                   	pop    %edi
84000e70:	5d                   	pop    %ebp
84000e71:	c3                   	ret    

84000e72 <_fflush_r>:
84000e72:	55                   	push   %ebp
84000e73:	89 e5                	mov    %esp,%ebp
84000e75:	53                   	push   %ebx
84000e76:	83 ec 14             	sub    $0x14,%esp
84000e79:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84000e7c:	8b 45 08             	mov    0x8(%ebp),%eax
84000e7f:	89 45 f4             	mov    %eax,-0xc(%ebp)
84000e82:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84000e86:	74 18                	je     84000ea0 <_fflush_r+0x2e>
84000e88:	8b 45 f4             	mov    -0xc(%ebp),%eax
84000e8b:	8b 40 38             	mov    0x38(%eax),%eax
84000e8e:	85 c0                	test   %eax,%eax
84000e90:	75 0e                	jne    84000ea0 <_fflush_r+0x2e>
84000e92:	83 ec 0c             	sub    $0xc,%esp
84000e95:	ff 75 f4             	pushl  -0xc(%ebp)
84000e98:	e8 5b 03 00 00       	call   840011f8 <__sinit>
84000e9d:	83 c4 10             	add    $0x10,%esp
84000ea0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84000ea4:	66 85 c0             	test   %ax,%ax
84000ea7:	75 07                	jne    84000eb0 <_fflush_r+0x3e>
84000ea9:	b8 00 00 00 00       	mov    $0x0,%eax
84000eae:	eb 15                	jmp    84000ec5 <_fflush_r+0x53>
84000eb0:	83 ec 08             	sub    $0x8,%esp
84000eb3:	53                   	push   %ebx
84000eb4:	ff 75 08             	pushl  0x8(%ebp)
84000eb7:	e8 90 fd ff ff       	call   84000c4c <__sflush_r>
84000ebc:	83 c4 10             	add    $0x10,%esp
84000ebf:	89 45 f0             	mov    %eax,-0x10(%ebp)
84000ec2:	8b 45 f0             	mov    -0x10(%ebp),%eax
84000ec5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84000ec8:	c9                   	leave  
84000ec9:	c3                   	ret    

84000eca <fflush>:
84000eca:	55                   	push   %ebp
84000ecb:	89 e5                	mov    %esp,%ebp
84000ecd:	83 ec 08             	sub    $0x8,%esp
84000ed0:	8b 55 08             	mov    0x8(%ebp),%edx
84000ed3:	85 d2                	test   %edx,%edx
84000ed5:	75 18                	jne    84000eef <fflush+0x25>
84000ed7:	a1 18 56 00 84       	mov    0x84005618,%eax
84000edc:	83 ec 08             	sub    $0x8,%esp
84000edf:	68 72 0e 00 84       	push   $0x84000e72
84000ee4:	50                   	push   %eax
84000ee5:	e8 bf 09 00 00       	call   840018a9 <_fwalk_reent>
84000eea:	83 c4 10             	add    $0x10,%esp
84000eed:	eb 12                	jmp    84000f01 <fflush+0x37>
84000eef:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84000ef4:	83 ec 08             	sub    $0x8,%esp
84000ef7:	52                   	push   %edx
84000ef8:	50                   	push   %eax
84000ef9:	e8 74 ff ff ff       	call   84000e72 <_fflush_r>
84000efe:	83 c4 10             	add    $0x10,%esp
84000f01:	c9                   	leave  
84000f02:	c3                   	ret    

84000f03 <std>:
84000f03:	55                   	push   %ebp
84000f04:	89 e5                	mov    %esp,%ebp
84000f06:	83 ec 08             	sub    $0x8,%esp
84000f09:	8b 45 08             	mov    0x8(%ebp),%eax
84000f0c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84000f12:	8b 45 08             	mov    0x8(%ebp),%eax
84000f15:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
84000f1c:	8b 45 08             	mov    0x8(%ebp),%eax
84000f1f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
84000f26:	8b 45 0c             	mov    0xc(%ebp),%eax
84000f29:	89 c2                	mov    %eax,%edx
84000f2b:	8b 45 08             	mov    0x8(%ebp),%eax
84000f2e:	66 89 50 0c          	mov    %dx,0xc(%eax)
84000f32:	8b 45 08             	mov    0x8(%ebp),%eax
84000f35:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
84000f3c:	8b 45 10             	mov    0x10(%ebp),%eax
84000f3f:	89 c2                	mov    %eax,%edx
84000f41:	8b 45 08             	mov    0x8(%ebp),%eax
84000f44:	66 89 50 0e          	mov    %dx,0xe(%eax)
84000f48:	8b 45 08             	mov    0x8(%ebp),%eax
84000f4b:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
84000f52:	8b 45 08             	mov    0x8(%ebp),%eax
84000f55:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
84000f5c:	8b 45 08             	mov    0x8(%ebp),%eax
84000f5f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
84000f66:	8b 45 08             	mov    0x8(%ebp),%eax
84000f69:	83 c0 5c             	add    $0x5c,%eax
84000f6c:	83 ec 04             	sub    $0x4,%esp
84000f6f:	6a 08                	push   $0x8
84000f71:	6a 00                	push   $0x0
84000f73:	50                   	push   %eax
84000f74:	e8 cb 14 00 00       	call   84002444 <memset>
84000f79:	83 c4 10             	add    $0x10,%esp
84000f7c:	8b 45 08             	mov    0x8(%ebp),%eax
84000f7f:	8b 55 08             	mov    0x8(%ebp),%edx
84000f82:	89 50 1c             	mov    %edx,0x1c(%eax)
84000f85:	8b 45 08             	mov    0x8(%ebp),%eax
84000f88:	c7 40 20 17 28 00 84 	movl   $0x84002817,0x20(%eax)
84000f8f:	8b 45 08             	mov    0x8(%ebp),%eax
84000f92:	c7 40 24 65 28 00 84 	movl   $0x84002865,0x24(%eax)
84000f99:	8b 45 08             	mov    0x8(%ebp),%eax
84000f9c:	c7 40 28 c0 28 00 84 	movl   $0x840028c0,0x28(%eax)
84000fa3:	8b 45 08             	mov    0x8(%ebp),%eax
84000fa6:	c7 40 2c 0a 29 00 84 	movl   $0x8400290a,0x2c(%eax)
84000fad:	90                   	nop
84000fae:	c9                   	leave  
84000faf:	c3                   	ret    

84000fb0 <stdin_init>:
84000fb0:	55                   	push   %ebp
84000fb1:	89 e5                	mov    %esp,%ebp
84000fb3:	83 ec 08             	sub    $0x8,%esp
84000fb6:	83 ec 04             	sub    $0x4,%esp
84000fb9:	6a 00                	push   $0x0
84000fbb:	6a 04                	push   $0x4
84000fbd:	ff 75 08             	pushl  0x8(%ebp)
84000fc0:	e8 3e ff ff ff       	call   84000f03 <std>
84000fc5:	83 c4 10             	add    $0x10,%esp
84000fc8:	90                   	nop
84000fc9:	c9                   	leave  
84000fca:	c3                   	ret    

84000fcb <stdout_init>:
84000fcb:	55                   	push   %ebp
84000fcc:	89 e5                	mov    %esp,%ebp
84000fce:	83 ec 08             	sub    $0x8,%esp
84000fd1:	83 ec 04             	sub    $0x4,%esp
84000fd4:	6a 01                	push   $0x1
84000fd6:	6a 09                	push   $0x9
84000fd8:	ff 75 08             	pushl  0x8(%ebp)
84000fdb:	e8 23 ff ff ff       	call   84000f03 <std>
84000fe0:	83 c4 10             	add    $0x10,%esp
84000fe3:	90                   	nop
84000fe4:	c9                   	leave  
84000fe5:	c3                   	ret    

84000fe6 <stderr_init>:
84000fe6:	55                   	push   %ebp
84000fe7:	89 e5                	mov    %esp,%ebp
84000fe9:	83 ec 08             	sub    $0x8,%esp
84000fec:	83 ec 04             	sub    $0x4,%esp
84000fef:	6a 02                	push   $0x2
84000ff1:	6a 12                	push   $0x12
84000ff3:	ff 75 08             	pushl  0x8(%ebp)
84000ff6:	e8 08 ff ff ff       	call   84000f03 <std>
84000ffb:	83 c4 10             	add    $0x10,%esp
84000ffe:	90                   	nop
84000fff:	c9                   	leave  
84001000:	c3                   	ret    

84001001 <__sfmoreglue>:
84001001:	55                   	push   %ebp
84001002:	89 e5                	mov    %esp,%ebp
84001004:	53                   	push   %ebx
84001005:	83 ec 14             	sub    $0x14,%esp
84001008:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400100b:	8d 43 ff             	lea    -0x1(%ebx),%eax
8400100e:	6b c0 68             	imul   $0x68,%eax,%eax
84001011:	83 c0 74             	add    $0x74,%eax
84001014:	83 ec 08             	sub    $0x8,%esp
84001017:	50                   	push   %eax
84001018:	ff 75 08             	pushl  0x8(%ebp)
8400101b:	e8 02 0c 00 00       	call   84001c22 <_malloc_r>
84001020:	83 c4 10             	add    $0x10,%esp
84001023:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001026:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8400102a:	75 07                	jne    84001033 <__sfmoreglue+0x32>
8400102c:	b8 00 00 00 00       	mov    $0x0,%eax
84001031:	eb 38                	jmp    8400106b <__sfmoreglue+0x6a>
84001033:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001036:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8400103c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400103f:	89 58 04             	mov    %ebx,0x4(%eax)
84001042:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001045:	8d 50 0c             	lea    0xc(%eax),%edx
84001048:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400104b:	89 50 08             	mov    %edx,0x8(%eax)
8400104e:	89 d8                	mov    %ebx,%eax
84001050:	6b c0 68             	imul   $0x68,%eax,%eax
84001053:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001056:	83 c2 0c             	add    $0xc,%edx
84001059:	83 ec 04             	sub    $0x4,%esp
8400105c:	50                   	push   %eax
8400105d:	6a 00                	push   $0x0
8400105f:	52                   	push   %edx
84001060:	e8 df 13 00 00       	call   84002444 <memset>
84001065:	83 c4 10             	add    $0x10,%esp
84001068:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400106b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8400106e:	c9                   	leave  
8400106f:	c3                   	ret    

84001070 <__sfp>:
84001070:	55                   	push   %ebp
84001071:	89 e5                	mov    %esp,%ebp
84001073:	83 ec 18             	sub    $0x18,%esp
84001076:	e8 16 02 00 00       	call   84001291 <__sfp_lock_acquire>
8400107b:	a1 18 56 00 84       	mov    0x84005618,%eax
84001080:	8b 40 38             	mov    0x38(%eax),%eax
84001083:	85 c0                	test   %eax,%eax
84001085:	75 11                	jne    84001098 <__sfp+0x28>
84001087:	a1 18 56 00 84       	mov    0x84005618,%eax
8400108c:	83 ec 0c             	sub    $0xc,%esp
8400108f:	50                   	push   %eax
84001090:	e8 63 01 00 00       	call   840011f8 <__sinit>
84001095:	83 c4 10             	add    $0x10,%esp
84001098:	a1 18 56 00 84       	mov    0x84005618,%eax
8400109d:	05 e0 02 00 00       	add    $0x2e0,%eax
840010a2:	89 45 ec             	mov    %eax,-0x14(%ebp)
840010a5:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010a8:	8b 40 08             	mov    0x8(%eax),%eax
840010ab:	89 45 f4             	mov    %eax,-0xc(%ebp)
840010ae:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010b1:	8b 40 04             	mov    0x4(%eax),%eax
840010b4:	89 45 f0             	mov    %eax,-0x10(%ebp)
840010b7:	eb 10                	jmp    840010c9 <__sfp+0x59>
840010b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
840010bc:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840010c0:	66 85 c0             	test   %ax,%ax
840010c3:	74 58                	je     8400111d <__sfp+0xad>
840010c5:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
840010c9:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
840010cd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
840010d1:	79 e6                	jns    840010b9 <__sfp+0x49>
840010d3:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010d6:	8b 00                	mov    (%eax),%eax
840010d8:	85 c0                	test   %eax,%eax
840010da:	75 1e                	jne    840010fa <__sfp+0x8a>
840010dc:	83 ec 08             	sub    $0x8,%esp
840010df:	6a 04                	push   $0x4
840010e1:	ff 75 08             	pushl  0x8(%ebp)
840010e4:	e8 18 ff ff ff       	call   84001001 <__sfmoreglue>
840010e9:	83 c4 10             	add    $0x10,%esp
840010ec:	8b 55 ec             	mov    -0x14(%ebp),%edx
840010ef:	89 02                	mov    %eax,(%edx)
840010f1:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010f4:	8b 00                	mov    (%eax),%eax
840010f6:	85 c0                	test   %eax,%eax
840010f8:	74 0a                	je     84001104 <__sfp+0x94>
840010fa:	8b 45 ec             	mov    -0x14(%ebp),%eax
840010fd:	8b 00                	mov    (%eax),%eax
840010ff:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001102:	eb a1                	jmp    840010a5 <__sfp+0x35>
84001104:	90                   	nop
84001105:	e8 8d 01 00 00       	call   84001297 <__sfp_lock_release>
8400110a:	8b 45 08             	mov    0x8(%ebp),%eax
8400110d:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
84001113:	b8 00 00 00 00       	mov    $0x0,%eax
84001118:	e9 9e 00 00 00       	jmp    840011bb <__sfp+0x14b>
8400111d:	90                   	nop
8400111e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001121:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
84001127:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400112a:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
84001130:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001133:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
8400113a:	e8 58 01 00 00       	call   84001297 <__sfp_lock_release>
8400113f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001142:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84001148:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400114b:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
84001152:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001155:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
8400115c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400115f:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
84001166:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001169:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
84001170:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001173:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8400117a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400117d:	83 c0 5c             	add    $0x5c,%eax
84001180:	83 ec 04             	sub    $0x4,%esp
84001183:	6a 08                	push   $0x8
84001185:	6a 00                	push   $0x0
84001187:	50                   	push   %eax
84001188:	e8 b7 12 00 00       	call   84002444 <memset>
8400118d:	83 c4 10             	add    $0x10,%esp
84001190:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001193:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
8400119a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400119d:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
840011a4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011a7:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
840011ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011b1:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
840011b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
840011bb:	c9                   	leave  
840011bc:	c3                   	ret    

840011bd <_cleanup_r>:
840011bd:	55                   	push   %ebp
840011be:	89 e5                	mov    %esp,%ebp
840011c0:	83 ec 18             	sub    $0x18,%esp
840011c3:	c7 45 f4 ca 2a 00 84 	movl   $0x84002aca,-0xc(%ebp)
840011ca:	83 ec 08             	sub    $0x8,%esp
840011cd:	ff 75 f4             	pushl  -0xc(%ebp)
840011d0:	ff 75 08             	pushl  0x8(%ebp)
840011d3:	e8 d1 06 00 00       	call   840018a9 <_fwalk_reent>
840011d8:	83 c4 10             	add    $0x10,%esp
840011db:	90                   	nop
840011dc:	c9                   	leave  
840011dd:	c3                   	ret    

840011de <_cleanup>:
840011de:	55                   	push   %ebp
840011df:	89 e5                	mov    %esp,%ebp
840011e1:	83 ec 08             	sub    $0x8,%esp
840011e4:	a1 18 56 00 84       	mov    0x84005618,%eax
840011e9:	83 ec 0c             	sub    $0xc,%esp
840011ec:	50                   	push   %eax
840011ed:	e8 cb ff ff ff       	call   840011bd <_cleanup_r>
840011f2:	83 c4 10             	add    $0x10,%esp
840011f5:	90                   	nop
840011f6:	c9                   	leave  
840011f7:	c3                   	ret    

840011f8 <__sinit>:
840011f8:	55                   	push   %ebp
840011f9:	89 e5                	mov    %esp,%ebp
840011fb:	83 ec 08             	sub    $0x8,%esp
840011fe:	e8 9a 00 00 00       	call   8400129d <__sinit_lock_acquire>
84001203:	8b 45 08             	mov    0x8(%ebp),%eax
84001206:	8b 40 38             	mov    0x38(%eax),%eax
84001209:	85 c0                	test   %eax,%eax
8400120b:	74 07                	je     84001214 <__sinit+0x1c>
8400120d:	e8 91 00 00 00       	call   840012a3 <__sinit_lock_release>
84001212:	eb 7b                	jmp    8400128f <__sinit+0x97>
84001214:	8b 45 08             	mov    0x8(%ebp),%eax
84001217:	c7 40 3c bd 11 00 84 	movl   $0x840011bd,0x3c(%eax)
8400121e:	8b 45 08             	mov    0x8(%ebp),%eax
84001221:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
84001228:	00 00 00 
8400122b:	8b 45 08             	mov    0x8(%ebp),%eax
8400122e:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
84001235:	00 00 00 
84001238:	8b 45 08             	mov    0x8(%ebp),%eax
8400123b:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
84001241:	8b 45 08             	mov    0x8(%ebp),%eax
84001244:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
8400124a:	8b 45 08             	mov    0x8(%ebp),%eax
8400124d:	8b 40 04             	mov    0x4(%eax),%eax
84001250:	83 ec 0c             	sub    $0xc,%esp
84001253:	50                   	push   %eax
84001254:	e8 57 fd ff ff       	call   84000fb0 <stdin_init>
84001259:	83 c4 10             	add    $0x10,%esp
8400125c:	8b 45 08             	mov    0x8(%ebp),%eax
8400125f:	8b 40 08             	mov    0x8(%eax),%eax
84001262:	83 ec 0c             	sub    $0xc,%esp
84001265:	50                   	push   %eax
84001266:	e8 60 fd ff ff       	call   84000fcb <stdout_init>
8400126b:	83 c4 10             	add    $0x10,%esp
8400126e:	8b 45 08             	mov    0x8(%ebp),%eax
84001271:	8b 40 0c             	mov    0xc(%eax),%eax
84001274:	83 ec 0c             	sub    $0xc,%esp
84001277:	50                   	push   %eax
84001278:	e8 69 fd ff ff       	call   84000fe6 <stderr_init>
8400127d:	83 c4 10             	add    $0x10,%esp
84001280:	8b 45 08             	mov    0x8(%ebp),%eax
84001283:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
8400128a:	e8 14 00 00 00       	call   840012a3 <__sinit_lock_release>
8400128f:	c9                   	leave  
84001290:	c3                   	ret    

84001291 <__sfp_lock_acquire>:
84001291:	55                   	push   %ebp
84001292:	89 e5                	mov    %esp,%ebp
84001294:	90                   	nop
84001295:	5d                   	pop    %ebp
84001296:	c3                   	ret    

84001297 <__sfp_lock_release>:
84001297:	55                   	push   %ebp
84001298:	89 e5                	mov    %esp,%ebp
8400129a:	90                   	nop
8400129b:	5d                   	pop    %ebp
8400129c:	c3                   	ret    

8400129d <__sinit_lock_acquire>:
8400129d:	55                   	push   %ebp
8400129e:	89 e5                	mov    %esp,%ebp
840012a0:	90                   	nop
840012a1:	5d                   	pop    %ebp
840012a2:	c3                   	ret    

840012a3 <__sinit_lock_release>:
840012a3:	55                   	push   %ebp
840012a4:	89 e5                	mov    %esp,%ebp
840012a6:	90                   	nop
840012a7:	5d                   	pop    %ebp
840012a8:	c3                   	ret    

840012a9 <__fp_lock>:
840012a9:	55                   	push   %ebp
840012aa:	89 e5                	mov    %esp,%ebp
840012ac:	b8 00 00 00 00       	mov    $0x0,%eax
840012b1:	5d                   	pop    %ebp
840012b2:	c3                   	ret    

840012b3 <__fp_unlock>:
840012b3:	55                   	push   %ebp
840012b4:	89 e5                	mov    %esp,%ebp
840012b6:	b8 00 00 00 00       	mov    $0x0,%eax
840012bb:	5d                   	pop    %ebp
840012bc:	c3                   	ret    

840012bd <__fp_lock_all>:
840012bd:	55                   	push   %ebp
840012be:	89 e5                	mov    %esp,%ebp
840012c0:	83 ec 08             	sub    $0x8,%esp
840012c3:	e8 c9 ff ff ff       	call   84001291 <__sfp_lock_acquire>
840012c8:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
840012cd:	83 ec 08             	sub    $0x8,%esp
840012d0:	68 a9 12 00 84       	push   $0x840012a9
840012d5:	50                   	push   %eax
840012d6:	e8 66 05 00 00       	call   84001841 <_fwalk>
840012db:	83 c4 10             	add    $0x10,%esp
840012de:	90                   	nop
840012df:	c9                   	leave  
840012e0:	c3                   	ret    

840012e1 <__fp_unlock_all>:
840012e1:	55                   	push   %ebp
840012e2:	89 e5                	mov    %esp,%ebp
840012e4:	83 ec 08             	sub    $0x8,%esp
840012e7:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
840012ec:	83 ec 08             	sub    $0x8,%esp
840012ef:	68 b3 12 00 84       	push   $0x840012b3
840012f4:	50                   	push   %eax
840012f5:	e8 47 05 00 00       	call   84001841 <_fwalk>
840012fa:	83 c4 10             	add    $0x10,%esp
840012fd:	e8 95 ff ff ff       	call   84001297 <__sfp_lock_release>
84001302:	90                   	nop
84001303:	c9                   	leave  
84001304:	c3                   	ret    

84001305 <_free_r>:
84001305:	55                   	push   %ebp
84001306:	89 e5                	mov    %esp,%ebp
84001308:	53                   	push   %ebx
84001309:	83 ec 34             	sub    $0x34,%esp
8400130c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84001310:	0f 84 c4 03 00 00    	je     840016da <_free_r+0x3d5>
84001316:	83 ec 0c             	sub    $0xc,%esp
84001319:	ff 75 08             	pushl  0x8(%ebp)
8400131c:	e8 ab 11 00 00       	call   840024cc <__malloc_lock>
84001321:	83 c4 10             	add    $0x10,%esp
84001324:	8b 45 0c             	mov    0xc(%ebp),%eax
84001327:	83 e8 08             	sub    $0x8,%eax
8400132a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400132d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001330:	8b 40 04             	mov    0x4(%eax),%eax
84001333:	89 45 e0             	mov    %eax,-0x20(%ebp)
84001336:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001339:	83 e0 fe             	and    $0xfffffffe,%eax
8400133c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8400133f:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001342:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001345:	01 d0                	add    %edx,%eax
84001347:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400134a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400134d:	8b 40 04             	mov    0x4(%eax),%eax
84001350:	83 e0 fc             	and    $0xfffffffc,%eax
84001353:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001356:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
8400135b:	8b 40 08             	mov    0x8(%eax),%eax
8400135e:	39 45 dc             	cmp    %eax,-0x24(%ebp)
84001361:	0f 85 94 00 00 00    	jne    840013fb <_free_r+0xf6>
84001367:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400136a:	01 45 f0             	add    %eax,-0x10(%ebp)
8400136d:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001370:	83 e0 01             	and    $0x1,%eax
84001373:	85 c0                	test   %eax,%eax
84001375:	75 3a                	jne    840013b1 <_free_r+0xac>
84001377:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400137a:	8b 00                	mov    (%eax),%eax
8400137c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8400137f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001382:	f7 d8                	neg    %eax
84001384:	01 45 f4             	add    %eax,-0xc(%ebp)
84001387:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8400138a:	01 45 f0             	add    %eax,-0x10(%ebp)
8400138d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001390:	8b 40 0c             	mov    0xc(%eax),%eax
84001393:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001396:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001399:	8b 40 08             	mov    0x8(%eax),%eax
8400139c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400139f:	8b 45 e8             	mov    -0x18(%ebp),%eax
840013a2:	8b 55 ec             	mov    -0x14(%ebp),%edx
840013a5:	89 50 0c             	mov    %edx,0xc(%eax)
840013a8:	8b 45 ec             	mov    -0x14(%ebp),%eax
840013ab:	8b 55 e8             	mov    -0x18(%ebp),%edx
840013ae:	89 50 08             	mov    %edx,0x8(%eax)
840013b1:	8b 45 f0             	mov    -0x10(%ebp),%eax
840013b4:	83 c8 01             	or     $0x1,%eax
840013b7:	89 c2                	mov    %eax,%edx
840013b9:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013bc:	89 50 04             	mov    %edx,0x4(%eax)
840013bf:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
840013c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840013c7:	89 42 08             	mov    %eax,0x8(%edx)
840013ca:	a1 e8 61 00 84       	mov    0x840061e8,%eax
840013cf:	39 45 f0             	cmp    %eax,-0x10(%ebp)
840013d2:	72 14                	jb     840013e8 <_free_r+0xe3>
840013d4:	a1 a0 63 00 84       	mov    0x840063a0,%eax
840013d9:	83 ec 08             	sub    $0x8,%esp
840013dc:	50                   	push   %eax
840013dd:	ff 75 08             	pushl  0x8(%ebp)
840013e0:	e8 fb 02 00 00       	call   840016e0 <_malloc_trim_r>
840013e5:	83 c4 10             	add    $0x10,%esp
840013e8:	83 ec 0c             	sub    $0xc,%esp
840013eb:	ff 75 08             	pushl  0x8(%ebp)
840013ee:	e8 df 10 00 00       	call   840024d2 <__malloc_unlock>
840013f3:	83 c4 10             	add    $0x10,%esp
840013f6:	e9 e0 02 00 00       	jmp    840016db <_free_r+0x3d6>
840013fb:	8b 45 dc             	mov    -0x24(%ebp),%eax
840013fe:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001401:	89 50 04             	mov    %edx,0x4(%eax)
84001404:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400140b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400140e:	83 e0 01             	and    $0x1,%eax
84001411:	85 c0                	test   %eax,%eax
84001413:	75 52                	jne    84001467 <_free_r+0x162>
84001415:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001418:	8b 00                	mov    (%eax),%eax
8400141a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8400141d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001420:	f7 d8                	neg    %eax
84001422:	01 45 f4             	add    %eax,-0xc(%ebp)
84001425:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001428:	01 45 f0             	add    %eax,-0x10(%ebp)
8400142b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400142e:	8b 40 08             	mov    0x8(%eax),%eax
84001431:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001436:	39 d0                	cmp    %edx,%eax
84001438:	75 09                	jne    84001443 <_free_r+0x13e>
8400143a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
84001441:	eb 24                	jmp    84001467 <_free_r+0x162>
84001443:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001446:	8b 40 0c             	mov    0xc(%eax),%eax
84001449:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400144c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400144f:	8b 40 08             	mov    0x8(%eax),%eax
84001452:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001455:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001458:	8b 55 ec             	mov    -0x14(%ebp),%edx
8400145b:	89 50 0c             	mov    %edx,0xc(%eax)
8400145e:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001461:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001464:	89 50 08             	mov    %edx,0x8(%eax)
84001467:	8b 55 dc             	mov    -0x24(%ebp),%edx
8400146a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400146d:	01 d0                	add    %edx,%eax
8400146f:	8b 40 04             	mov    0x4(%eax),%eax
84001472:	83 e0 01             	and    $0x1,%eax
84001475:	85 c0                	test   %eax,%eax
84001477:	75 75                	jne    840014ee <_free_r+0x1e9>
84001479:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400147c:	01 45 f0             	add    %eax,-0x10(%ebp)
8400147f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84001483:	75 45                	jne    840014ca <_free_r+0x1c5>
84001485:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001488:	8b 40 08             	mov    0x8(%eax),%eax
8400148b:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001490:	39 d0                	cmp    %edx,%eax
84001492:	75 36                	jne    840014ca <_free_r+0x1c5>
84001494:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8400149b:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
840014a0:	8b 55 f4             	mov    -0xc(%ebp),%edx
840014a3:	89 50 0c             	mov    %edx,0xc(%eax)
840014a6:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
840014ab:	8b 40 0c             	mov    0xc(%eax),%eax
840014ae:	89 42 08             	mov    %eax,0x8(%edx)
840014b1:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
840014b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014b9:	89 50 0c             	mov    %edx,0xc(%eax)
840014bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014bf:	8b 50 0c             	mov    0xc(%eax),%edx
840014c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014c5:	89 50 08             	mov    %edx,0x8(%eax)
840014c8:	eb 24                	jmp    840014ee <_free_r+0x1e9>
840014ca:	8b 45 dc             	mov    -0x24(%ebp),%eax
840014cd:	8b 40 0c             	mov    0xc(%eax),%eax
840014d0:	89 45 ec             	mov    %eax,-0x14(%ebp)
840014d3:	8b 45 dc             	mov    -0x24(%ebp),%eax
840014d6:	8b 40 08             	mov    0x8(%eax),%eax
840014d9:	89 45 e8             	mov    %eax,-0x18(%ebp)
840014dc:	8b 45 e8             	mov    -0x18(%ebp),%eax
840014df:	8b 55 ec             	mov    -0x14(%ebp),%edx
840014e2:	89 50 0c             	mov    %edx,0xc(%eax)
840014e5:	8b 45 ec             	mov    -0x14(%ebp),%eax
840014e8:	8b 55 e8             	mov    -0x18(%ebp),%edx
840014eb:	89 50 08             	mov    %edx,0x8(%eax)
840014ee:	8b 45 f0             	mov    -0x10(%ebp),%eax
840014f1:	83 c8 01             	or     $0x1,%eax
840014f4:	89 c2                	mov    %eax,%edx
840014f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
840014f9:	89 50 04             	mov    %edx,0x4(%eax)
840014fc:	8b 55 f4             	mov    -0xc(%ebp),%edx
840014ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001502:	01 c2                	add    %eax,%edx
84001504:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001507:	89 02                	mov    %eax,(%edx)
84001509:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8400150d:	0f 85 b7 01 00 00    	jne    840016ca <_free_r+0x3c5>
84001513:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
8400151a:	77 7f                	ja     8400159b <_free_r+0x296>
8400151c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400151f:	c1 e8 03             	shr    $0x3,%eax
84001522:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001525:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
8400152a:	8b 58 04             	mov    0x4(%eax),%ebx
8400152d:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001530:	8d 50 03             	lea    0x3(%eax),%edx
84001533:	85 c0                	test   %eax,%eax
84001535:	0f 48 c2             	cmovs  %edx,%eax
84001538:	c1 f8 02             	sar    $0x2,%eax
8400153b:	ba 01 00 00 00       	mov    $0x1,%edx
84001540:	89 c1                	mov    %eax,%ecx
84001542:	d3 e2                	shl    %cl,%edx
84001544:	89 d0                	mov    %edx,%eax
84001546:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
8400154b:	09 d8                	or     %ebx,%eax
8400154d:	89 42 04             	mov    %eax,0x4(%edx)
84001550:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001553:	83 c0 01             	add    $0x1,%eax
84001556:	01 c0                	add    %eax,%eax
84001558:	c1 e0 02             	shl    $0x2,%eax
8400155b:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84001560:	83 e8 08             	sub    $0x8,%eax
84001563:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001566:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001569:	8b 40 08             	mov    0x8(%eax),%eax
8400156c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400156f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001572:	8b 55 ec             	mov    -0x14(%ebp),%edx
84001575:	89 50 0c             	mov    %edx,0xc(%eax)
84001578:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400157b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400157e:	89 50 08             	mov    %edx,0x8(%eax)
84001581:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001584:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001587:	89 50 08             	mov    %edx,0x8(%eax)
8400158a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400158d:	8b 50 08             	mov    0x8(%eax),%edx
84001590:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001593:	89 50 0c             	mov    %edx,0xc(%eax)
84001596:	e9 2f 01 00 00       	jmp    840016ca <_free_r+0x3c5>
8400159b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400159e:	c1 e8 09             	shr    $0x9,%eax
840015a1:	85 c0                	test   %eax,%eax
840015a3:	75 08                	jne    840015ad <_free_r+0x2a8>
840015a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015a8:	c1 e8 03             	shr    $0x3,%eax
840015ab:	eb 77                	jmp    84001624 <_free_r+0x31f>
840015ad:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015b0:	c1 e8 09             	shr    $0x9,%eax
840015b3:	83 f8 04             	cmp    $0x4,%eax
840015b6:	77 0b                	ja     840015c3 <_free_r+0x2be>
840015b8:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015bb:	c1 e8 06             	shr    $0x6,%eax
840015be:	83 c0 38             	add    $0x38,%eax
840015c1:	eb 61                	jmp    84001624 <_free_r+0x31f>
840015c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015c6:	c1 e8 09             	shr    $0x9,%eax
840015c9:	83 f8 14             	cmp    $0x14,%eax
840015cc:	77 0b                	ja     840015d9 <_free_r+0x2d4>
840015ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015d1:	c1 e8 09             	shr    $0x9,%eax
840015d4:	83 c0 5b             	add    $0x5b,%eax
840015d7:	eb 4b                	jmp    84001624 <_free_r+0x31f>
840015d9:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015dc:	c1 e8 09             	shr    $0x9,%eax
840015df:	83 f8 54             	cmp    $0x54,%eax
840015e2:	77 0b                	ja     840015ef <_free_r+0x2ea>
840015e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015e7:	c1 e8 0c             	shr    $0xc,%eax
840015ea:	83 c0 6e             	add    $0x6e,%eax
840015ed:	eb 35                	jmp    84001624 <_free_r+0x31f>
840015ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015f2:	c1 e8 09             	shr    $0x9,%eax
840015f5:	3d 54 01 00 00       	cmp    $0x154,%eax
840015fa:	77 0b                	ja     84001607 <_free_r+0x302>
840015fc:	8b 45 f0             	mov    -0x10(%ebp),%eax
840015ff:	c1 e8 0f             	shr    $0xf,%eax
84001602:	83 c0 77             	add    $0x77,%eax
84001605:	eb 1d                	jmp    84001624 <_free_r+0x31f>
84001607:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400160a:	c1 e8 09             	shr    $0x9,%eax
8400160d:	3d 54 05 00 00       	cmp    $0x554,%eax
84001612:	77 0b                	ja     8400161f <_free_r+0x31a>
84001614:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001617:	c1 e8 12             	shr    $0x12,%eax
8400161a:	83 c0 7c             	add    $0x7c,%eax
8400161d:	eb 05                	jmp    84001624 <_free_r+0x31f>
8400161f:	b8 7e 00 00 00       	mov    $0x7e,%eax
84001624:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001627:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400162a:	83 c0 01             	add    $0x1,%eax
8400162d:	01 c0                	add    %eax,%eax
8400162f:	c1 e0 02             	shl    $0x2,%eax
84001632:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84001637:	83 e8 08             	sub    $0x8,%eax
8400163a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400163d:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001640:	8b 40 08             	mov    0x8(%eax),%eax
84001643:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001646:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001649:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8400164c:	75 36                	jne    84001684 <_free_r+0x37f>
8400164e:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001653:	8b 58 04             	mov    0x4(%eax),%ebx
84001656:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001659:	8d 50 03             	lea    0x3(%eax),%edx
8400165c:	85 c0                	test   %eax,%eax
8400165e:	0f 48 c2             	cmovs  %edx,%eax
84001661:	c1 f8 02             	sar    $0x2,%eax
84001664:	ba 01 00 00 00       	mov    $0x1,%edx
84001669:	89 c1                	mov    %eax,%ecx
8400166b:	d3 e2                	shl    %cl,%edx
8400166d:	89 d0                	mov    %edx,%eax
8400166f:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84001674:	09 d8                	or     %ebx,%eax
84001676:	89 42 04             	mov    %eax,0x4(%edx)
84001679:	eb 28                	jmp    840016a3 <_free_r+0x39e>
8400167b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400167e:	8b 40 08             	mov    0x8(%eax),%eax
84001681:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001684:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001687:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8400168a:	74 0e                	je     8400169a <_free_r+0x395>
8400168c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400168f:	8b 40 04             	mov    0x4(%eax),%eax
84001692:	83 e0 fc             	and    $0xfffffffc,%eax
84001695:	39 45 f0             	cmp    %eax,-0x10(%ebp)
84001698:	72 e1                	jb     8400167b <_free_r+0x376>
8400169a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400169d:	8b 40 0c             	mov    0xc(%eax),%eax
840016a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
840016a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
840016a6:	8b 55 ec             	mov    -0x14(%ebp),%edx
840016a9:	89 50 0c             	mov    %edx,0xc(%eax)
840016ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
840016af:	8b 55 e8             	mov    -0x18(%ebp),%edx
840016b2:	89 50 08             	mov    %edx,0x8(%eax)
840016b5:	8b 45 ec             	mov    -0x14(%ebp),%eax
840016b8:	8b 55 f4             	mov    -0xc(%ebp),%edx
840016bb:	89 50 08             	mov    %edx,0x8(%eax)
840016be:	8b 45 ec             	mov    -0x14(%ebp),%eax
840016c1:	8b 50 08             	mov    0x8(%eax),%edx
840016c4:	8b 45 e8             	mov    -0x18(%ebp),%eax
840016c7:	89 50 0c             	mov    %edx,0xc(%eax)
840016ca:	83 ec 0c             	sub    $0xc,%esp
840016cd:	ff 75 08             	pushl  0x8(%ebp)
840016d0:	e8 fd 0d 00 00       	call   840024d2 <__malloc_unlock>
840016d5:	83 c4 10             	add    $0x10,%esp
840016d8:	eb 01                	jmp    840016db <_free_r+0x3d6>
840016da:	90                   	nop
840016db:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840016de:	c9                   	leave  
840016df:	c3                   	ret    

840016e0 <_malloc_trim_r>:
840016e0:	55                   	push   %ebp
840016e1:	89 e5                	mov    %esp,%ebp
840016e3:	83 ec 28             	sub    $0x28,%esp
840016e6:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
840016ed:	83 ec 0c             	sub    $0xc,%esp
840016f0:	ff 75 08             	pushl  0x8(%ebp)
840016f3:	e8 d4 0d 00 00       	call   840024cc <__malloc_lock>
840016f8:	83 c4 10             	add    $0x10,%esp
840016fb:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001700:	8b 40 08             	mov    0x8(%eax),%eax
84001703:	8b 40 04             	mov    0x4(%eax),%eax
84001706:	83 e0 fc             	and    $0xfffffffc,%eax
84001709:	89 45 f0             	mov    %eax,-0x10(%ebp)
8400170c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400170f:	2b 45 0c             	sub    0xc(%ebp),%eax
84001712:	89 c2                	mov    %eax,%edx
84001714:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001717:	01 d0                	add    %edx,%eax
84001719:	83 e8 11             	sub    $0x11,%eax
8400171c:	ba 00 00 00 00       	mov    $0x0,%edx
84001721:	f7 75 f4             	divl   -0xc(%ebp)
84001724:	83 e8 01             	sub    $0x1,%eax
84001727:	0f af 45 f4          	imul   -0xc(%ebp),%eax
8400172b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400172e:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001731:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84001734:	7d 18                	jge    8400174e <_malloc_trim_r+0x6e>
84001736:	83 ec 0c             	sub    $0xc,%esp
84001739:	ff 75 08             	pushl  0x8(%ebp)
8400173c:	e8 91 0d 00 00       	call   840024d2 <__malloc_unlock>
84001741:	83 c4 10             	add    $0x10,%esp
84001744:	b8 00 00 00 00       	mov    $0x0,%eax
84001749:	e9 f1 00 00 00       	jmp    8400183f <_malloc_trim_r+0x15f>
8400174e:	83 ec 08             	sub    $0x8,%esp
84001751:	6a 00                	push   $0x0
84001753:	ff 75 08             	pushl  0x8(%ebp)
84001756:	e8 70 0e 00 00       	call   840025cb <_sbrk_r>
8400175b:	83 c4 10             	add    $0x10,%esp
8400175e:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001761:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001766:	8b 50 08             	mov    0x8(%eax),%edx
84001769:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400176c:	01 d0                	add    %edx,%eax
8400176e:	39 45 e8             	cmp    %eax,-0x18(%ebp)
84001771:	74 18                	je     8400178b <_malloc_trim_r+0xab>
84001773:	83 ec 0c             	sub    $0xc,%esp
84001776:	ff 75 08             	pushl  0x8(%ebp)
84001779:	e8 54 0d 00 00       	call   840024d2 <__malloc_unlock>
8400177e:	83 c4 10             	add    $0x10,%esp
84001781:	b8 00 00 00 00       	mov    $0x0,%eax
84001786:	e9 b4 00 00 00       	jmp    8400183f <_malloc_trim_r+0x15f>
8400178b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400178e:	f7 d8                	neg    %eax
84001790:	83 ec 08             	sub    $0x8,%esp
84001793:	50                   	push   %eax
84001794:	ff 75 08             	pushl  0x8(%ebp)
84001797:	e8 2f 0e 00 00       	call   840025cb <_sbrk_r>
8400179c:	83 c4 10             	add    $0x10,%esp
8400179f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
840017a2:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
840017a6:	75 61                	jne    84001809 <_malloc_trim_r+0x129>
840017a8:	83 ec 08             	sub    $0x8,%esp
840017ab:	6a 00                	push   $0x0
840017ad:	ff 75 08             	pushl  0x8(%ebp)
840017b0:	e8 16 0e 00 00       	call   840025cb <_sbrk_r>
840017b5:	83 c4 10             	add    $0x10,%esp
840017b8:	89 45 e8             	mov    %eax,-0x18(%ebp)
840017bb:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840017c0:	8b 50 08             	mov    0x8(%eax),%edx
840017c3:	8b 45 e8             	mov    -0x18(%ebp),%eax
840017c6:	29 d0                	sub    %edx,%eax
840017c8:	89 45 f0             	mov    %eax,-0x10(%ebp)
840017cb:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
840017cf:	7e 23                	jle    840017f4 <_malloc_trim_r+0x114>
840017d1:	8b 15 ec 61 00 84    	mov    0x840061ec,%edx
840017d7:	8b 45 e8             	mov    -0x18(%ebp),%eax
840017da:	29 d0                	sub    %edx,%eax
840017dc:	a3 c0 63 00 84       	mov    %eax,0x840063c0
840017e1:	8b 45 f0             	mov    -0x10(%ebp),%eax
840017e4:	83 c8 01             	or     $0x1,%eax
840017e7:	89 c2                	mov    %eax,%edx
840017e9:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840017ee:	8b 40 08             	mov    0x8(%eax),%eax
840017f1:	89 50 04             	mov    %edx,0x4(%eax)
840017f4:	83 ec 0c             	sub    $0xc,%esp
840017f7:	ff 75 08             	pushl  0x8(%ebp)
840017fa:	e8 d3 0c 00 00       	call   840024d2 <__malloc_unlock>
840017ff:	83 c4 10             	add    $0x10,%esp
84001802:	b8 00 00 00 00       	mov    $0x0,%eax
84001807:	eb 36                	jmp    8400183f <_malloc_trim_r+0x15f>
84001809:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400180c:	2b 45 ec             	sub    -0x14(%ebp),%eax
8400180f:	83 c8 01             	or     $0x1,%eax
84001812:	89 c2                	mov    %eax,%edx
84001814:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001819:	8b 40 08             	mov    0x8(%eax),%eax
8400181c:	89 50 04             	mov    %edx,0x4(%eax)
8400181f:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001824:	2b 45 ec             	sub    -0x14(%ebp),%eax
84001827:	a3 c0 63 00 84       	mov    %eax,0x840063c0
8400182c:	83 ec 0c             	sub    $0xc,%esp
8400182f:	ff 75 08             	pushl  0x8(%ebp)
84001832:	e8 9b 0c 00 00       	call   840024d2 <__malloc_unlock>
84001837:	83 c4 10             	add    $0x10,%esp
8400183a:	b8 01 00 00 00       	mov    $0x1,%eax
8400183f:	c9                   	leave  
84001840:	c3                   	ret    

84001841 <_fwalk>:
84001841:	55                   	push   %ebp
84001842:	89 e5                	mov    %esp,%ebp
84001844:	57                   	push   %edi
84001845:	56                   	push   %esi
84001846:	53                   	push   %ebx
84001847:	83 ec 1c             	sub    $0x1c,%esp
8400184a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84001851:	8b 45 08             	mov    0x8(%ebp),%eax
84001854:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
8400185a:	eb 3e                	jmp    8400189a <_fwalk+0x59>
8400185c:	8b 5e 08             	mov    0x8(%esi),%ebx
8400185f:	8b 7e 04             	mov    0x4(%esi),%edi
84001862:	eb 2d                	jmp    84001891 <_fwalk+0x50>
84001864:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84001868:	66 85 c0             	test   %ax,%ax
8400186b:	74 21                	je     8400188e <_fwalk+0x4d>
8400186d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84001871:	66 83 f8 01          	cmp    $0x1,%ax
84001875:	74 17                	je     8400188e <_fwalk+0x4d>
84001877:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8400187b:	66 83 f8 ff          	cmp    $0xffff,%ax
8400187f:	74 0d                	je     8400188e <_fwalk+0x4d>
84001881:	83 ec 0c             	sub    $0xc,%esp
84001884:	53                   	push   %ebx
84001885:	ff 55 0c             	call   *0xc(%ebp)
84001888:	83 c4 10             	add    $0x10,%esp
8400188b:	09 45 e4             	or     %eax,-0x1c(%ebp)
8400188e:	83 c3 68             	add    $0x68,%ebx
84001891:	83 ef 01             	sub    $0x1,%edi
84001894:	85 ff                	test   %edi,%edi
84001896:	79 cc                	jns    84001864 <_fwalk+0x23>
84001898:	8b 36                	mov    (%esi),%esi
8400189a:	85 f6                	test   %esi,%esi
8400189c:	75 be                	jne    8400185c <_fwalk+0x1b>
8400189e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
840018a1:	8d 65 f4             	lea    -0xc(%ebp),%esp
840018a4:	5b                   	pop    %ebx
840018a5:	5e                   	pop    %esi
840018a6:	5f                   	pop    %edi
840018a7:	5d                   	pop    %ebp
840018a8:	c3                   	ret    

840018a9 <_fwalk_reent>:
840018a9:	55                   	push   %ebp
840018aa:	89 e5                	mov    %esp,%ebp
840018ac:	57                   	push   %edi
840018ad:	56                   	push   %esi
840018ae:	53                   	push   %ebx
840018af:	83 ec 1c             	sub    $0x1c,%esp
840018b2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840018b9:	8b 45 08             	mov    0x8(%ebp),%eax
840018bc:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
840018c2:	eb 41                	jmp    84001905 <_fwalk_reent+0x5c>
840018c4:	8b 5e 08             	mov    0x8(%esi),%ebx
840018c7:	8b 7e 04             	mov    0x4(%esi),%edi
840018ca:	eb 30                	jmp    840018fc <_fwalk_reent+0x53>
840018cc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840018d0:	66 85 c0             	test   %ax,%ax
840018d3:	74 24                	je     840018f9 <_fwalk_reent+0x50>
840018d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840018d9:	66 83 f8 01          	cmp    $0x1,%ax
840018dd:	74 1a                	je     840018f9 <_fwalk_reent+0x50>
840018df:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840018e3:	66 83 f8 ff          	cmp    $0xffff,%ax
840018e7:	74 10                	je     840018f9 <_fwalk_reent+0x50>
840018e9:	83 ec 08             	sub    $0x8,%esp
840018ec:	53                   	push   %ebx
840018ed:	ff 75 08             	pushl  0x8(%ebp)
840018f0:	ff 55 0c             	call   *0xc(%ebp)
840018f3:	83 c4 10             	add    $0x10,%esp
840018f6:	09 45 e4             	or     %eax,-0x1c(%ebp)
840018f9:	83 c3 68             	add    $0x68,%ebx
840018fc:	83 ef 01             	sub    $0x1,%edi
840018ff:	85 ff                	test   %edi,%edi
84001901:	79 c9                	jns    840018cc <_fwalk_reent+0x23>
84001903:	8b 36                	mov    (%esi),%esi
84001905:	85 f6                	test   %esi,%esi
84001907:	75 bb                	jne    840018c4 <_fwalk_reent+0x1b>
84001909:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400190c:	8d 65 f4             	lea    -0xc(%ebp),%esp
8400190f:	5b                   	pop    %ebx
84001910:	5e                   	pop    %esi
84001911:	5f                   	pop    %edi
84001912:	5d                   	pop    %ebp
84001913:	c3                   	ret    

84001914 <_getchar_r>:
84001914:	55                   	push   %ebp
84001915:	89 e5                	mov    %esp,%ebp
84001917:	83 ec 08             	sub    $0x8,%esp
8400191a:	8b 45 08             	mov    0x8(%ebp),%eax
8400191d:	8b 40 04             	mov    0x4(%eax),%eax
84001920:	83 ec 08             	sub    $0x8,%esp
84001923:	50                   	push   %eax
84001924:	ff 75 08             	pushl  0x8(%ebp)
84001927:	e8 c2 12 00 00       	call   84002bee <_getc_r>
8400192c:	83 c4 10             	add    $0x10,%esp
8400192f:	c9                   	leave  
84001930:	c3                   	ret    

84001931 <getchar>:
84001931:	55                   	push   %ebp
84001932:	89 e5                	mov    %esp,%ebp
84001934:	83 ec 18             	sub    $0x18,%esp
84001937:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
8400193c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400193f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001942:	8b 40 04             	mov    0x4(%eax),%eax
84001945:	83 ec 08             	sub    $0x8,%esp
84001948:	50                   	push   %eax
84001949:	ff 75 f4             	pushl  -0xc(%ebp)
8400194c:	e8 9d 12 00 00       	call   84002bee <_getc_r>
84001951:	83 c4 10             	add    $0x10,%esp
84001954:	c9                   	leave  
84001955:	c3                   	ret    

84001956 <malloc>:
84001956:	55                   	push   %ebp
84001957:	89 e5                	mov    %esp,%ebp
84001959:	83 ec 08             	sub    $0x8,%esp
8400195c:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84001961:	83 ec 08             	sub    $0x8,%esp
84001964:	ff 75 08             	pushl  0x8(%ebp)
84001967:	50                   	push   %eax
84001968:	e8 b5 02 00 00       	call   84001c22 <_malloc_r>
8400196d:	83 c4 10             	add    $0x10,%esp
84001970:	c9                   	leave  
84001971:	c3                   	ret    

84001972 <free>:
84001972:	55                   	push   %ebp
84001973:	89 e5                	mov    %esp,%ebp
84001975:	83 ec 08             	sub    $0x8,%esp
84001978:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
8400197d:	83 ec 08             	sub    $0x8,%esp
84001980:	ff 75 08             	pushl  0x8(%ebp)
84001983:	50                   	push   %eax
84001984:	e8 7c f9 ff ff       	call   84001305 <_free_r>
84001989:	83 c4 10             	add    $0x10,%esp
8400198c:	90                   	nop
8400198d:	c9                   	leave  
8400198e:	c3                   	ret    

8400198f <malloc_extend_top>:
8400198f:	55                   	push   %ebp
84001990:	89 e5                	mov    %esp,%ebp
84001992:	83 ec 38             	sub    $0x38,%esp
84001995:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400199c:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840019a1:	8b 40 08             	mov    0x8(%eax),%eax
840019a4:	89 45 e0             	mov    %eax,-0x20(%ebp)
840019a7:	8b 45 e0             	mov    -0x20(%ebp),%eax
840019aa:	8b 40 04             	mov    0x4(%eax),%eax
840019ad:	83 e0 fc             	and    $0xfffffffc,%eax
840019b0:	89 45 dc             	mov    %eax,-0x24(%ebp)
840019b3:	8b 55 e0             	mov    -0x20(%ebp),%edx
840019b6:	8b 45 dc             	mov    -0x24(%ebp),%eax
840019b9:	01 d0                	add    %edx,%eax
840019bb:	89 45 d8             	mov    %eax,-0x28(%ebp)
840019be:	8b 15 a0 63 00 84    	mov    0x840063a0,%edx
840019c4:	8b 45 0c             	mov    0xc(%ebp),%eax
840019c7:	01 d0                	add    %edx,%eax
840019c9:	83 c0 10             	add    $0x10,%eax
840019cc:	89 45 e8             	mov    %eax,-0x18(%ebp)
840019cf:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
840019d6:	a1 ec 61 00 84       	mov    0x840061ec,%eax
840019db:	83 f8 ff             	cmp    $0xffffffff,%eax
840019de:	74 15                	je     840019f5 <malloc_extend_top+0x66>
840019e0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
840019e3:	8b 45 e8             	mov    -0x18(%ebp),%eax
840019e6:	01 d0                	add    %edx,%eax
840019e8:	8d 50 ff             	lea    -0x1(%eax),%edx
840019eb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
840019ee:	f7 d8                	neg    %eax
840019f0:	21 d0                	and    %edx,%eax
840019f2:	89 45 e8             	mov    %eax,-0x18(%ebp)
840019f5:	8b 45 e8             	mov    -0x18(%ebp),%eax
840019f8:	83 ec 08             	sub    $0x8,%esp
840019fb:	50                   	push   %eax
840019fc:	ff 75 08             	pushl  0x8(%ebp)
840019ff:	e8 c7 0b 00 00       	call   840025cb <_sbrk_r>
84001a04:	83 c4 10             	add    $0x10,%esp
84001a07:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001a0a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84001a0e:	0f 84 0b 02 00 00    	je     84001c1f <malloc_extend_top+0x290>
84001a14:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a17:	3b 45 d8             	cmp    -0x28(%ebp),%eax
84001a1a:	73 0e                	jae    84001a2a <malloc_extend_top+0x9b>
84001a1c:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001a21:	39 45 e0             	cmp    %eax,-0x20(%ebp)
84001a24:	0f 85 f5 01 00 00    	jne    84001c1f <malloc_extend_top+0x290>
84001a2a:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001a2f:	89 c2                	mov    %eax,%edx
84001a31:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001a34:	01 d0                	add    %edx,%eax
84001a36:	a3 c0 63 00 84       	mov    %eax,0x840063c0
84001a3b:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a3e:	3b 45 d8             	cmp    -0x28(%ebp),%eax
84001a41:	75 30                	jne    84001a73 <malloc_extend_top+0xe4>
84001a43:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001a46:	8d 50 ff             	lea    -0x1(%eax),%edx
84001a49:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001a4c:	21 d0                	and    %edx,%eax
84001a4e:	85 c0                	test   %eax,%eax
84001a50:	75 21                	jne    84001a73 <malloc_extend_top+0xe4>
84001a52:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001a55:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001a58:	01 d0                	add    %edx,%eax
84001a5a:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001a5d:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001a62:	8b 40 08             	mov    0x8(%eax),%eax
84001a65:	8b 55 d0             	mov    -0x30(%ebp),%edx
84001a68:	83 ca 01             	or     $0x1,%edx
84001a6b:	89 50 04             	mov    %edx,0x4(%eax)
84001a6e:	e9 76 01 00 00       	jmp    84001be9 <malloc_extend_top+0x25a>
84001a73:	a1 ec 61 00 84       	mov    0x840061ec,%eax
84001a78:	83 f8 ff             	cmp    $0xffffffff,%eax
84001a7b:	75 0a                	jne    84001a87 <malloc_extend_top+0xf8>
84001a7d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a80:	a3 ec 61 00 84       	mov    %eax,0x840061ec
84001a85:	eb 13                	jmp    84001a9a <malloc_extend_top+0x10b>
84001a87:	8b 15 c0 63 00 84    	mov    0x840063c0,%edx
84001a8d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a90:	2b 45 d8             	sub    -0x28(%ebp),%eax
84001a93:	01 d0                	add    %edx,%eax
84001a95:	a3 c0 63 00 84       	mov    %eax,0x840063c0
84001a9a:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001a9d:	83 c0 08             	add    $0x8,%eax
84001aa0:	83 e0 07             	and    $0x7,%eax
84001aa3:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001aa6:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
84001aaa:	74 13                	je     84001abf <malloc_extend_top+0x130>
84001aac:	b8 08 00 00 00       	mov    $0x8,%eax
84001ab1:	2b 45 cc             	sub    -0x34(%ebp),%eax
84001ab4:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001ab7:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001aba:	01 45 f4             	add    %eax,-0xc(%ebp)
84001abd:	eb 07                	jmp    84001ac6 <malloc_extend_top+0x137>
84001abf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84001ac6:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001ac9:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001acc:	01 d0                	add    %edx,%eax
84001ace:	89 c2                	mov    %eax,%edx
84001ad0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001ad3:	83 e8 01             	sub    $0x1,%eax
84001ad6:	21 c2                	and    %eax,%edx
84001ad8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001adb:	29 d0                	sub    %edx,%eax
84001add:	01 45 f0             	add    %eax,-0x10(%ebp)
84001ae0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001ae3:	83 e8 01             	sub    $0x1,%eax
84001ae6:	21 45 f0             	and    %eax,-0x10(%ebp)
84001ae9:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001aec:	83 ec 08             	sub    $0x8,%esp
84001aef:	50                   	push   %eax
84001af0:	ff 75 08             	pushl  0x8(%ebp)
84001af3:	e8 d3 0a 00 00       	call   840025cb <_sbrk_r>
84001af8:	83 c4 10             	add    $0x10,%esp
84001afb:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001afe:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
84001b02:	75 28                	jne    84001b2c <malloc_extend_top+0x19d>
84001b04:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84001b0b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
84001b12:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001b15:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001b18:	01 d0                	add    %edx,%eax
84001b1a:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001b1d:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
84001b21:	74 09                	je     84001b2c <malloc_extend_top+0x19d>
84001b23:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001b26:	83 e8 08             	sub    $0x8,%eax
84001b29:	01 45 ec             	add    %eax,-0x14(%ebp)
84001b2c:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001b31:	89 c2                	mov    %eax,%edx
84001b33:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001b36:	01 d0                	add    %edx,%eax
84001b38:	a3 c0 63 00 84       	mov    %eax,0x840063c0
84001b3d:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84001b42:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001b45:	89 42 08             	mov    %eax,0x8(%edx)
84001b48:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001b4b:	2b 45 f4             	sub    -0xc(%ebp),%eax
84001b4e:	89 c2                	mov    %eax,%edx
84001b50:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001b53:	01 d0                	add    %edx,%eax
84001b55:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001b58:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001b5d:	8b 40 08             	mov    0x8(%eax),%eax
84001b60:	8b 55 d0             	mov    -0x30(%ebp),%edx
84001b63:	83 ca 01             	or     $0x1,%edx
84001b66:	89 50 04             	mov    %edx,0x4(%eax)
84001b69:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001b6e:	39 45 e0             	cmp    %eax,-0x20(%ebp)
84001b71:	74 76                	je     84001be9 <malloc_extend_top+0x25a>
84001b73:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
84001b77:	77 14                	ja     84001b8d <malloc_extend_top+0x1fe>
84001b79:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001b7e:	8b 40 08             	mov    0x8(%eax),%eax
84001b81:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
84001b88:	e9 93 00 00 00       	jmp    84001c20 <malloc_extend_top+0x291>
84001b8d:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001b90:	83 e8 0c             	sub    $0xc,%eax
84001b93:	83 e0 f8             	and    $0xfffffff8,%eax
84001b96:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001b99:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001b9c:	8b 40 04             	mov    0x4(%eax),%eax
84001b9f:	83 e0 01             	and    $0x1,%eax
84001ba2:	0b 45 dc             	or     -0x24(%ebp),%eax
84001ba5:	89 c2                	mov    %eax,%edx
84001ba7:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001baa:	89 50 04             	mov    %edx,0x4(%eax)
84001bad:	8b 55 e0             	mov    -0x20(%ebp),%edx
84001bb0:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001bb3:	01 d0                	add    %edx,%eax
84001bb5:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
84001bbc:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001bbf:	8d 50 04             	lea    0x4(%eax),%edx
84001bc2:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bc5:	01 d0                	add    %edx,%eax
84001bc7:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
84001bce:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
84001bd2:	76 15                	jbe    84001be9 <malloc_extend_top+0x25a>
84001bd4:	8b 45 e0             	mov    -0x20(%ebp),%eax
84001bd7:	83 c0 08             	add    $0x8,%eax
84001bda:	83 ec 08             	sub    $0x8,%esp
84001bdd:	50                   	push   %eax
84001bde:	ff 75 08             	pushl  0x8(%ebp)
84001be1:	e8 1f f7 ff ff       	call   84001305 <_free_r>
84001be6:	83 c4 10             	add    $0x10,%esp
84001be9:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001bee:	89 c2                	mov    %eax,%edx
84001bf0:	a1 a4 63 00 84       	mov    0x840063a4,%eax
84001bf5:	39 c2                	cmp    %eax,%edx
84001bf7:	76 0a                	jbe    84001c03 <malloc_extend_top+0x274>
84001bf9:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001bfe:	a3 a4 63 00 84       	mov    %eax,0x840063a4
84001c03:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001c08:	89 c2                	mov    %eax,%edx
84001c0a:	a1 a8 63 00 84       	mov    0x840063a8,%eax
84001c0f:	39 c2                	cmp    %eax,%edx
84001c11:	76 0d                	jbe    84001c20 <malloc_extend_top+0x291>
84001c13:	a1 c0 63 00 84       	mov    0x840063c0,%eax
84001c18:	a3 a8 63 00 84       	mov    %eax,0x840063a8
84001c1d:	eb 01                	jmp    84001c20 <malloc_extend_top+0x291>
84001c1f:	90                   	nop
84001c20:	c9                   	leave  
84001c21:	c3                   	ret    

84001c22 <_malloc_r>:
84001c22:	55                   	push   %ebp
84001c23:	89 e5                	mov    %esp,%ebp
84001c25:	53                   	push   %ebx
84001c26:	83 ec 44             	sub    $0x44,%esp
84001c29:	8b 45 0c             	mov    0xc(%ebp),%eax
84001c2c:	83 c0 0b             	add    $0xb,%eax
84001c2f:	83 f8 16             	cmp    $0x16,%eax
84001c32:	76 0b                	jbe    84001c3f <_malloc_r+0x1d>
84001c34:	8b 45 0c             	mov    0xc(%ebp),%eax
84001c37:	83 c0 0b             	add    $0xb,%eax
84001c3a:	83 e0 f8             	and    $0xfffffff8,%eax
84001c3d:	eb 05                	jmp    84001c44 <_malloc_r+0x22>
84001c3f:	b8 10 00 00 00       	mov    $0x10,%eax
84001c44:	89 45 d0             	mov    %eax,-0x30(%ebp)
84001c47:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c4a:	85 c0                	test   %eax,%eax
84001c4c:	78 08                	js     84001c56 <_malloc_r+0x34>
84001c4e:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c51:	3b 45 0c             	cmp    0xc(%ebp),%eax
84001c54:	73 13                	jae    84001c69 <_malloc_r+0x47>
84001c56:	8b 45 08             	mov    0x8(%ebp),%eax
84001c59:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
84001c5f:	b8 00 00 00 00       	mov    $0x0,%eax
84001c64:	e9 d6 07 00 00       	jmp    8400243f <_malloc_r+0x81d>
84001c69:	83 ec 0c             	sub    $0xc,%esp
84001c6c:	ff 75 08             	pushl  0x8(%ebp)
84001c6f:	e8 58 08 00 00       	call   840024cc <__malloc_lock>
84001c74:	83 c4 10             	add    $0x10,%esp
84001c77:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
84001c7e:	0f 87 b0 00 00 00    	ja     84001d34 <_malloc_r+0x112>
84001c84:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001c87:	c1 e8 03             	shr    $0x3,%eax
84001c8a:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001c8d:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001c90:	83 c0 01             	add    $0x1,%eax
84001c93:	01 c0                	add    %eax,%eax
84001c95:	c1 e0 02             	shl    $0x2,%eax
84001c98:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84001c9d:	83 e8 08             	sub    $0x8,%eax
84001ca0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84001ca3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001ca6:	8b 40 0c             	mov    0xc(%eax),%eax
84001ca9:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001cac:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001caf:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
84001cb2:	75 0d                	jne    84001cc1 <_malloc_r+0x9f>
84001cb4:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
84001cb8:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84001cbb:	8b 40 0c             	mov    0xc(%eax),%eax
84001cbe:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001cc1:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cc4:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
84001cc7:	74 62                	je     84001d2b <_malloc_r+0x109>
84001cc9:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ccc:	8b 40 04             	mov    0x4(%eax),%eax
84001ccf:	83 e0 fc             	and    $0xfffffffc,%eax
84001cd2:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001cd5:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001cd8:	8b 40 0c             	mov    0xc(%eax),%eax
84001cdb:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001cde:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ce1:	8b 40 08             	mov    0x8(%eax),%eax
84001ce4:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001ce7:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001cea:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001ced:	89 50 0c             	mov    %edx,0xc(%eax)
84001cf0:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001cf3:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001cf6:	89 50 08             	mov    %edx,0x8(%eax)
84001cf9:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001cfc:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001cff:	01 d0                	add    %edx,%eax
84001d01:	8b 50 04             	mov    0x4(%eax),%edx
84001d04:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001d07:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001d0a:	01 c8                	add    %ecx,%eax
84001d0c:	83 ca 01             	or     $0x1,%edx
84001d0f:	89 50 04             	mov    %edx,0x4(%eax)
84001d12:	83 ec 0c             	sub    $0xc,%esp
84001d15:	ff 75 08             	pushl  0x8(%ebp)
84001d18:	e8 b5 07 00 00       	call   840024d2 <__malloc_unlock>
84001d1d:	83 c4 10             	add    $0x10,%esp
84001d20:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001d23:	83 c0 08             	add    $0x8,%eax
84001d26:	e9 14 07 00 00       	jmp    8400243f <_malloc_r+0x81d>
84001d2b:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
84001d2f:	e9 46 01 00 00       	jmp    84001e7a <_malloc_r+0x258>
84001d34:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d37:	c1 e8 09             	shr    $0x9,%eax
84001d3a:	85 c0                	test   %eax,%eax
84001d3c:	75 08                	jne    84001d46 <_malloc_r+0x124>
84001d3e:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d41:	c1 e8 03             	shr    $0x3,%eax
84001d44:	eb 77                	jmp    84001dbd <_malloc_r+0x19b>
84001d46:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d49:	c1 e8 09             	shr    $0x9,%eax
84001d4c:	83 f8 04             	cmp    $0x4,%eax
84001d4f:	77 0b                	ja     84001d5c <_malloc_r+0x13a>
84001d51:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d54:	c1 e8 06             	shr    $0x6,%eax
84001d57:	83 c0 38             	add    $0x38,%eax
84001d5a:	eb 61                	jmp    84001dbd <_malloc_r+0x19b>
84001d5c:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d5f:	c1 e8 09             	shr    $0x9,%eax
84001d62:	83 f8 14             	cmp    $0x14,%eax
84001d65:	77 0b                	ja     84001d72 <_malloc_r+0x150>
84001d67:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d6a:	c1 e8 09             	shr    $0x9,%eax
84001d6d:	83 c0 5b             	add    $0x5b,%eax
84001d70:	eb 4b                	jmp    84001dbd <_malloc_r+0x19b>
84001d72:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d75:	c1 e8 09             	shr    $0x9,%eax
84001d78:	83 f8 54             	cmp    $0x54,%eax
84001d7b:	77 0b                	ja     84001d88 <_malloc_r+0x166>
84001d7d:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d80:	c1 e8 0c             	shr    $0xc,%eax
84001d83:	83 c0 6e             	add    $0x6e,%eax
84001d86:	eb 35                	jmp    84001dbd <_malloc_r+0x19b>
84001d88:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d8b:	c1 e8 09             	shr    $0x9,%eax
84001d8e:	3d 54 01 00 00       	cmp    $0x154,%eax
84001d93:	77 0b                	ja     84001da0 <_malloc_r+0x17e>
84001d95:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001d98:	c1 e8 0f             	shr    $0xf,%eax
84001d9b:	83 c0 77             	add    $0x77,%eax
84001d9e:	eb 1d                	jmp    84001dbd <_malloc_r+0x19b>
84001da0:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001da3:	c1 e8 09             	shr    $0x9,%eax
84001da6:	3d 54 05 00 00       	cmp    $0x554,%eax
84001dab:	77 0b                	ja     84001db8 <_malloc_r+0x196>
84001dad:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001db0:	c1 e8 12             	shr    $0x12,%eax
84001db3:	83 c0 7c             	add    $0x7c,%eax
84001db6:	eb 05                	jmp    84001dbd <_malloc_r+0x19b>
84001db8:	b8 7e 00 00 00       	mov    $0x7e,%eax
84001dbd:	89 45 f0             	mov    %eax,-0x10(%ebp)
84001dc0:	8b 45 f0             	mov    -0x10(%ebp),%eax
84001dc3:	83 c0 01             	add    $0x1,%eax
84001dc6:	01 c0                	add    %eax,%eax
84001dc8:	c1 e0 02             	shl    $0x2,%eax
84001dcb:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84001dd0:	83 e8 08             	sub    $0x8,%eax
84001dd3:	89 45 ec             	mov    %eax,-0x14(%ebp)
84001dd6:	8b 45 ec             	mov    -0x14(%ebp),%eax
84001dd9:	8b 40 0c             	mov    0xc(%eax),%eax
84001ddc:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001ddf:	e9 86 00 00 00       	jmp    84001e6a <_malloc_r+0x248>
84001de4:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001de7:	8b 40 04             	mov    0x4(%eax),%eax
84001dea:	83 e0 fc             	and    $0xfffffffc,%eax
84001ded:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001df0:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001df3:	2b 45 d0             	sub    -0x30(%ebp),%eax
84001df6:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001df9:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
84001dfd:	7e 06                	jle    84001e05 <_malloc_r+0x1e3>
84001dff:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
84001e03:	eb 71                	jmp    84001e76 <_malloc_r+0x254>
84001e05:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84001e09:	78 56                	js     84001e61 <_malloc_r+0x23f>
84001e0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e0e:	8b 40 0c             	mov    0xc(%eax),%eax
84001e11:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001e14:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e17:	8b 40 08             	mov    0x8(%eax),%eax
84001e1a:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001e1d:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001e20:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001e23:	89 50 0c             	mov    %edx,0xc(%eax)
84001e26:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001e29:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001e2c:	89 50 08             	mov    %edx,0x8(%eax)
84001e2f:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001e32:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e35:	01 d0                	add    %edx,%eax
84001e37:	8b 50 04             	mov    0x4(%eax),%edx
84001e3a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001e3d:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001e40:	01 c8                	add    %ecx,%eax
84001e42:	83 ca 01             	or     $0x1,%edx
84001e45:	89 50 04             	mov    %edx,0x4(%eax)
84001e48:	83 ec 0c             	sub    $0xc,%esp
84001e4b:	ff 75 08             	pushl  0x8(%ebp)
84001e4e:	e8 7f 06 00 00       	call   840024d2 <__malloc_unlock>
84001e53:	83 c4 10             	add    $0x10,%esp
84001e56:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e59:	83 c0 08             	add    $0x8,%eax
84001e5c:	e9 de 05 00 00       	jmp    8400243f <_malloc_r+0x81d>
84001e61:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e64:	8b 40 0c             	mov    0xc(%eax),%eax
84001e67:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001e6a:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e6d:	3b 45 ec             	cmp    -0x14(%ebp),%eax
84001e70:	0f 85 6e ff ff ff    	jne    84001de4 <_malloc_r+0x1c2>
84001e76:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84001e7a:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84001e7f:	8b 40 08             	mov    0x8(%eax),%eax
84001e82:	89 45 f4             	mov    %eax,-0xc(%ebp)
84001e85:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84001e8a:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84001e8d:	0f 84 9c 02 00 00    	je     8400212f <_malloc_r+0x50d>
84001e93:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001e96:	8b 40 04             	mov    0x4(%eax),%eax
84001e99:	83 e0 fc             	and    $0xfffffffc,%eax
84001e9c:	89 45 cc             	mov    %eax,-0x34(%ebp)
84001e9f:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001ea2:	2b 45 d0             	sub    -0x30(%ebp),%eax
84001ea5:	89 45 e8             	mov    %eax,-0x18(%ebp)
84001ea8:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
84001eac:	7e 7a                	jle    84001f28 <_malloc_r+0x306>
84001eae:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001eb1:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001eb4:	01 d0                	add    %edx,%eax
84001eb6:	89 45 c4             	mov    %eax,-0x3c(%ebp)
84001eb9:	8b 45 d0             	mov    -0x30(%ebp),%eax
84001ebc:	83 c8 01             	or     $0x1,%eax
84001ebf:	89 c2                	mov    %eax,%edx
84001ec1:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001ec4:	89 50 04             	mov    %edx,0x4(%eax)
84001ec7:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84001ecc:	8b 55 c4             	mov    -0x3c(%ebp),%edx
84001ecf:	89 50 0c             	mov    %edx,0xc(%eax)
84001ed2:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001ed7:	8b 40 0c             	mov    0xc(%eax),%eax
84001eda:	89 42 08             	mov    %eax,0x8(%edx)
84001edd:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001ee2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001ee5:	89 50 0c             	mov    %edx,0xc(%eax)
84001ee8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001eeb:	8b 50 0c             	mov    0xc(%eax),%edx
84001eee:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001ef1:	89 50 08             	mov    %edx,0x8(%eax)
84001ef4:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001ef7:	83 c8 01             	or     $0x1,%eax
84001efa:	89 c2                	mov    %eax,%edx
84001efc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001eff:	89 50 04             	mov    %edx,0x4(%eax)
84001f02:	8b 55 e8             	mov    -0x18(%ebp),%edx
84001f05:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84001f08:	01 c2                	add    %eax,%edx
84001f0a:	8b 45 e8             	mov    -0x18(%ebp),%eax
84001f0d:	89 02                	mov    %eax,(%edx)
84001f0f:	83 ec 0c             	sub    $0xc,%esp
84001f12:	ff 75 08             	pushl  0x8(%ebp)
84001f15:	e8 b8 05 00 00       	call   840024d2 <__malloc_unlock>
84001f1a:	83 c4 10             	add    $0x10,%esp
84001f1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001f20:	83 c0 08             	add    $0x8,%eax
84001f23:	e9 17 05 00 00       	jmp    8400243f <_malloc_r+0x81d>
84001f28:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84001f2d:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001f32:	89 50 0c             	mov    %edx,0xc(%eax)
84001f35:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84001f3a:	8b 40 0c             	mov    0xc(%eax),%eax
84001f3d:	89 42 08             	mov    %eax,0x8(%edx)
84001f40:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84001f44:	78 32                	js     84001f78 <_malloc_r+0x356>
84001f46:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001f49:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f4c:	01 d0                	add    %edx,%eax
84001f4e:	8b 50 04             	mov    0x4(%eax),%edx
84001f51:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84001f54:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f57:	01 c8                	add    %ecx,%eax
84001f59:	83 ca 01             	or     $0x1,%edx
84001f5c:	89 50 04             	mov    %edx,0x4(%eax)
84001f5f:	83 ec 0c             	sub    $0xc,%esp
84001f62:	ff 75 08             	pushl  0x8(%ebp)
84001f65:	e8 68 05 00 00       	call   840024d2 <__malloc_unlock>
84001f6a:	83 c4 10             	add    $0x10,%esp
84001f6d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001f70:	83 c0 08             	add    $0x8,%eax
84001f73:	e9 c7 04 00 00       	jmp    8400243f <_malloc_r+0x81d>
84001f78:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
84001f7f:	77 7f                	ja     84002000 <_malloc_r+0x3de>
84001f81:	8b 45 cc             	mov    -0x34(%ebp),%eax
84001f84:	c1 e8 03             	shr    $0x3,%eax
84001f87:	89 45 c8             	mov    %eax,-0x38(%ebp)
84001f8a:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84001f8f:	8b 58 04             	mov    0x4(%eax),%ebx
84001f92:	8b 45 c8             	mov    -0x38(%ebp),%eax
84001f95:	8d 50 03             	lea    0x3(%eax),%edx
84001f98:	85 c0                	test   %eax,%eax
84001f9a:	0f 48 c2             	cmovs  %edx,%eax
84001f9d:	c1 f8 02             	sar    $0x2,%eax
84001fa0:	ba 01 00 00 00       	mov    $0x1,%edx
84001fa5:	89 c1                	mov    %eax,%ecx
84001fa7:	d3 e2                	shl    %cl,%edx
84001fa9:	89 d0                	mov    %edx,%eax
84001fab:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84001fb0:	09 d8                	or     %ebx,%eax
84001fb2:	89 42 04             	mov    %eax,0x4(%edx)
84001fb5:	8b 45 c8             	mov    -0x38(%ebp),%eax
84001fb8:	83 c0 01             	add    $0x1,%eax
84001fbb:	01 c0                	add    %eax,%eax
84001fbd:	c1 e0 02             	shl    $0x2,%eax
84001fc0:	05 e0 5d 00 84       	add    $0x84005de0,%eax
84001fc5:	83 e8 08             	sub    $0x8,%eax
84001fc8:	89 45 d8             	mov    %eax,-0x28(%ebp)
84001fcb:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001fce:	8b 40 08             	mov    0x8(%eax),%eax
84001fd1:	89 45 dc             	mov    %eax,-0x24(%ebp)
84001fd4:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001fd7:	8b 55 d8             	mov    -0x28(%ebp),%edx
84001fda:	89 50 0c             	mov    %edx,0xc(%eax)
84001fdd:	8b 45 f4             	mov    -0xc(%ebp),%eax
84001fe0:	8b 55 dc             	mov    -0x24(%ebp),%edx
84001fe3:	89 50 08             	mov    %edx,0x8(%eax)
84001fe6:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001fe9:	8b 55 f4             	mov    -0xc(%ebp),%edx
84001fec:	89 50 08             	mov    %edx,0x8(%eax)
84001fef:	8b 45 d8             	mov    -0x28(%ebp),%eax
84001ff2:	8b 50 08             	mov    0x8(%eax),%edx
84001ff5:	8b 45 dc             	mov    -0x24(%ebp),%eax
84001ff8:	89 50 0c             	mov    %edx,0xc(%eax)
84001ffb:	e9 2f 01 00 00       	jmp    8400212f <_malloc_r+0x50d>
84002000:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002003:	c1 e8 09             	shr    $0x9,%eax
84002006:	85 c0                	test   %eax,%eax
84002008:	75 08                	jne    84002012 <_malloc_r+0x3f0>
8400200a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400200d:	c1 e8 03             	shr    $0x3,%eax
84002010:	eb 77                	jmp    84002089 <_malloc_r+0x467>
84002012:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002015:	c1 e8 09             	shr    $0x9,%eax
84002018:	83 f8 04             	cmp    $0x4,%eax
8400201b:	77 0b                	ja     84002028 <_malloc_r+0x406>
8400201d:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002020:	c1 e8 06             	shr    $0x6,%eax
84002023:	83 c0 38             	add    $0x38,%eax
84002026:	eb 61                	jmp    84002089 <_malloc_r+0x467>
84002028:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400202b:	c1 e8 09             	shr    $0x9,%eax
8400202e:	83 f8 14             	cmp    $0x14,%eax
84002031:	77 0b                	ja     8400203e <_malloc_r+0x41c>
84002033:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002036:	c1 e8 09             	shr    $0x9,%eax
84002039:	83 c0 5b             	add    $0x5b,%eax
8400203c:	eb 4b                	jmp    84002089 <_malloc_r+0x467>
8400203e:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002041:	c1 e8 09             	shr    $0x9,%eax
84002044:	83 f8 54             	cmp    $0x54,%eax
84002047:	77 0b                	ja     84002054 <_malloc_r+0x432>
84002049:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400204c:	c1 e8 0c             	shr    $0xc,%eax
8400204f:	83 c0 6e             	add    $0x6e,%eax
84002052:	eb 35                	jmp    84002089 <_malloc_r+0x467>
84002054:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002057:	c1 e8 09             	shr    $0x9,%eax
8400205a:	3d 54 01 00 00       	cmp    $0x154,%eax
8400205f:	77 0b                	ja     8400206c <_malloc_r+0x44a>
84002061:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002064:	c1 e8 0f             	shr    $0xf,%eax
84002067:	83 c0 77             	add    $0x77,%eax
8400206a:	eb 1d                	jmp    84002089 <_malloc_r+0x467>
8400206c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400206f:	c1 e8 09             	shr    $0x9,%eax
84002072:	3d 54 05 00 00       	cmp    $0x554,%eax
84002077:	77 0b                	ja     84002084 <_malloc_r+0x462>
84002079:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400207c:	c1 e8 12             	shr    $0x12,%eax
8400207f:	83 c0 7c             	add    $0x7c,%eax
84002082:	eb 05                	jmp    84002089 <_malloc_r+0x467>
84002084:	b8 7e 00 00 00       	mov    $0x7e,%eax
84002089:	89 45 c8             	mov    %eax,-0x38(%ebp)
8400208c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8400208f:	83 c0 01             	add    $0x1,%eax
84002092:	01 c0                	add    %eax,%eax
84002094:	c1 e0 02             	shl    $0x2,%eax
84002097:	05 e0 5d 00 84       	add    $0x84005de0,%eax
8400209c:	83 e8 08             	sub    $0x8,%eax
8400209f:	89 45 d8             	mov    %eax,-0x28(%ebp)
840020a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
840020a5:	8b 40 08             	mov    0x8(%eax),%eax
840020a8:	89 45 dc             	mov    %eax,-0x24(%ebp)
840020ab:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020ae:	3b 45 d8             	cmp    -0x28(%ebp),%eax
840020b1:	75 36                	jne    840020e9 <_malloc_r+0x4c7>
840020b3:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840020b8:	8b 58 04             	mov    0x4(%eax),%ebx
840020bb:	8b 45 c8             	mov    -0x38(%ebp),%eax
840020be:	8d 50 03             	lea    0x3(%eax),%edx
840020c1:	85 c0                	test   %eax,%eax
840020c3:	0f 48 c2             	cmovs  %edx,%eax
840020c6:	c1 f8 02             	sar    $0x2,%eax
840020c9:	ba 01 00 00 00       	mov    $0x1,%edx
840020ce:	89 c1                	mov    %eax,%ecx
840020d0:	d3 e2                	shl    %cl,%edx
840020d2:	89 d0                	mov    %edx,%eax
840020d4:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
840020d9:	09 d8                	or     %ebx,%eax
840020db:	89 42 04             	mov    %eax,0x4(%edx)
840020de:	eb 28                	jmp    84002108 <_malloc_r+0x4e6>
840020e0:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020e3:	8b 40 08             	mov    0x8(%eax),%eax
840020e6:	89 45 dc             	mov    %eax,-0x24(%ebp)
840020e9:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020ec:	3b 45 d8             	cmp    -0x28(%ebp),%eax
840020ef:	74 0e                	je     840020ff <_malloc_r+0x4dd>
840020f1:	8b 45 dc             	mov    -0x24(%ebp),%eax
840020f4:	8b 40 04             	mov    0x4(%eax),%eax
840020f7:	83 e0 fc             	and    $0xfffffffc,%eax
840020fa:	39 45 cc             	cmp    %eax,-0x34(%ebp)
840020fd:	72 e1                	jb     840020e0 <_malloc_r+0x4be>
840020ff:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002102:	8b 40 0c             	mov    0xc(%eax),%eax
84002105:	89 45 d8             	mov    %eax,-0x28(%ebp)
84002108:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400210b:	8b 55 d8             	mov    -0x28(%ebp),%edx
8400210e:	89 50 0c             	mov    %edx,0xc(%eax)
84002111:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002114:	8b 55 dc             	mov    -0x24(%ebp),%edx
84002117:	89 50 08             	mov    %edx,0x8(%eax)
8400211a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8400211d:	8b 55 f4             	mov    -0xc(%ebp),%edx
84002120:	89 50 08             	mov    %edx,0x8(%eax)
84002123:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002126:	8b 50 08             	mov    0x8(%eax),%edx
84002129:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400212c:	89 50 0c             	mov    %edx,0xc(%eax)
8400212f:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002132:	8d 50 03             	lea    0x3(%eax),%edx
84002135:	85 c0                	test   %eax,%eax
84002137:	0f 48 c2             	cmovs  %edx,%eax
8400213a:	c1 f8 02             	sar    $0x2,%eax
8400213d:	ba 01 00 00 00       	mov    $0x1,%edx
84002142:	89 c1                	mov    %eax,%ecx
84002144:	d3 e2                	shl    %cl,%edx
84002146:	89 d0                	mov    %edx,%eax
84002148:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8400214b:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002150:	8b 40 04             	mov    0x4(%eax),%eax
84002153:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
84002156:	0f 87 13 02 00 00    	ja     8400236f <_malloc_r+0x74d>
8400215c:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002161:	8b 40 04             	mov    0x4(%eax),%eax
84002164:	23 45 e4             	and    -0x1c(%ebp),%eax
84002167:	85 c0                	test   %eax,%eax
84002169:	75 27                	jne    84002192 <_malloc_r+0x570>
8400216b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400216e:	83 e0 fc             	and    $0xfffffffc,%eax
84002171:	83 c0 04             	add    $0x4,%eax
84002174:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002177:	d1 65 e4             	shll   -0x1c(%ebp)
8400217a:	eb 07                	jmp    84002183 <_malloc_r+0x561>
8400217c:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
84002180:	d1 65 e4             	shll   -0x1c(%ebp)
84002183:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002188:	8b 40 04             	mov    0x4(%eax),%eax
8400218b:	23 45 e4             	and    -0x1c(%ebp),%eax
8400218e:	85 c0                	test   %eax,%eax
84002190:	74 ea                	je     8400217c <_malloc_r+0x55a>
84002192:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002195:	89 45 e0             	mov    %eax,-0x20(%ebp)
84002198:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400219b:	83 c0 01             	add    $0x1,%eax
8400219e:	01 c0                	add    %eax,%eax
840021a0:	c1 e0 02             	shl    $0x2,%eax
840021a3:	05 e0 5d 00 84       	add    $0x84005de0,%eax
840021a8:	83 e8 08             	sub    $0x8,%eax
840021ab:	89 45 ec             	mov    %eax,-0x14(%ebp)
840021ae:	8b 45 ec             	mov    -0x14(%ebp),%eax
840021b1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
840021b4:	8b 45 ec             	mov    -0x14(%ebp),%eax
840021b7:	8b 40 0c             	mov    0xc(%eax),%eax
840021ba:	89 45 f4             	mov    %eax,-0xc(%ebp)
840021bd:	e9 22 01 00 00       	jmp    840022e4 <_malloc_r+0x6c2>
840021c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840021c5:	8b 40 04             	mov    0x4(%eax),%eax
840021c8:	83 e0 fc             	and    $0xfffffffc,%eax
840021cb:	89 45 cc             	mov    %eax,-0x34(%ebp)
840021ce:	8b 45 cc             	mov    -0x34(%ebp),%eax
840021d1:	2b 45 d0             	sub    -0x30(%ebp),%eax
840021d4:	89 45 e8             	mov    %eax,-0x18(%ebp)
840021d7:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840021db:	0f 8e 9e 00 00 00    	jle    8400227f <_malloc_r+0x65d>
840021e1:	8b 55 f4             	mov    -0xc(%ebp),%edx
840021e4:	8b 45 d0             	mov    -0x30(%ebp),%eax
840021e7:	01 d0                	add    %edx,%eax
840021e9:	89 45 c4             	mov    %eax,-0x3c(%ebp)
840021ec:	8b 45 d0             	mov    -0x30(%ebp),%eax
840021ef:	83 c8 01             	or     $0x1,%eax
840021f2:	89 c2                	mov    %eax,%edx
840021f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840021f7:	89 50 04             	mov    %edx,0x4(%eax)
840021fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
840021fd:	8b 40 0c             	mov    0xc(%eax),%eax
84002200:	89 45 d8             	mov    %eax,-0x28(%ebp)
84002203:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002206:	8b 40 08             	mov    0x8(%eax),%eax
84002209:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400220c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400220f:	8b 55 d8             	mov    -0x28(%ebp),%edx
84002212:	89 50 0c             	mov    %edx,0xc(%eax)
84002215:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002218:	8b 55 dc             	mov    -0x24(%ebp),%edx
8400221b:	89 50 08             	mov    %edx,0x8(%eax)
8400221e:	b8 e8 5d 00 84       	mov    $0x84005de8,%eax
84002223:	8b 55 c4             	mov    -0x3c(%ebp),%edx
84002226:	89 50 0c             	mov    %edx,0xc(%eax)
84002229:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
8400222e:	8b 40 0c             	mov    0xc(%eax),%eax
84002231:	89 42 08             	mov    %eax,0x8(%edx)
84002234:	ba e8 5d 00 84       	mov    $0x84005de8,%edx
84002239:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400223c:	89 50 0c             	mov    %edx,0xc(%eax)
8400223f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002242:	8b 50 0c             	mov    0xc(%eax),%edx
84002245:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002248:	89 50 08             	mov    %edx,0x8(%eax)
8400224b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400224e:	83 c8 01             	or     $0x1,%eax
84002251:	89 c2                	mov    %eax,%edx
84002253:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84002256:	89 50 04             	mov    %edx,0x4(%eax)
84002259:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400225c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400225f:	01 c2                	add    %eax,%edx
84002261:	8b 45 e8             	mov    -0x18(%ebp),%eax
84002264:	89 02                	mov    %eax,(%edx)
84002266:	83 ec 0c             	sub    $0xc,%esp
84002269:	ff 75 08             	pushl  0x8(%ebp)
8400226c:	e8 61 02 00 00       	call   840024d2 <__malloc_unlock>
84002271:	83 c4 10             	add    $0x10,%esp
84002274:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002277:	83 c0 08             	add    $0x8,%eax
8400227a:	e9 c0 01 00 00       	jmp    8400243f <_malloc_r+0x81d>
8400227f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
84002283:	78 56                	js     840022db <_malloc_r+0x6b9>
84002285:	8b 55 f4             	mov    -0xc(%ebp),%edx
84002288:	8b 45 cc             	mov    -0x34(%ebp),%eax
8400228b:	01 d0                	add    %edx,%eax
8400228d:	8b 50 04             	mov    0x4(%eax),%edx
84002290:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84002293:	8b 45 cc             	mov    -0x34(%ebp),%eax
84002296:	01 c8                	add    %ecx,%eax
84002298:	83 ca 01             	or     $0x1,%edx
8400229b:	89 50 04             	mov    %edx,0x4(%eax)
8400229e:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022a1:	8b 40 0c             	mov    0xc(%eax),%eax
840022a4:	89 45 d8             	mov    %eax,-0x28(%ebp)
840022a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022aa:	8b 40 08             	mov    0x8(%eax),%eax
840022ad:	89 45 dc             	mov    %eax,-0x24(%ebp)
840022b0:	8b 45 dc             	mov    -0x24(%ebp),%eax
840022b3:	8b 55 d8             	mov    -0x28(%ebp),%edx
840022b6:	89 50 0c             	mov    %edx,0xc(%eax)
840022b9:	8b 45 d8             	mov    -0x28(%ebp),%eax
840022bc:	8b 55 dc             	mov    -0x24(%ebp),%edx
840022bf:	89 50 08             	mov    %edx,0x8(%eax)
840022c2:	83 ec 0c             	sub    $0xc,%esp
840022c5:	ff 75 08             	pushl  0x8(%ebp)
840022c8:	e8 05 02 00 00       	call   840024d2 <__malloc_unlock>
840022cd:	83 c4 10             	add    $0x10,%esp
840022d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022d3:	83 c0 08             	add    $0x8,%eax
840022d6:	e9 64 01 00 00       	jmp    8400243f <_malloc_r+0x81d>
840022db:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022de:	8b 40 0c             	mov    0xc(%eax),%eax
840022e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
840022e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840022e7:	3b 45 ec             	cmp    -0x14(%ebp),%eax
840022ea:	0f 85 d2 fe ff ff    	jne    840021c2 <_malloc_r+0x5a0>
840022f0:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
840022f4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
840022f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
840022fb:	83 e0 03             	and    $0x3,%eax
840022fe:	85 c0                	test   %eax,%eax
84002300:	0f 85 ae fe ff ff    	jne    840021b4 <_malloc_r+0x592>
84002306:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002309:	83 e0 03             	and    $0x3,%eax
8400230c:	85 c0                	test   %eax,%eax
8400230e:	75 19                	jne    84002329 <_malloc_r+0x707>
84002310:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002315:	8b 48 04             	mov    0x4(%eax),%ecx
84002318:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400231b:	f7 d0                	not    %eax
8400231d:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84002322:	21 c8                	and    %ecx,%eax
84002324:	89 42 04             	mov    %eax,0x4(%edx)
84002327:	eb 13                	jmp    8400233c <_malloc_r+0x71a>
84002329:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
8400232d:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
84002331:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84002334:	8b 40 08             	mov    0x8(%eax),%eax
84002337:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
8400233a:	74 ca                	je     84002306 <_malloc_r+0x6e4>
8400233c:	d1 65 e4             	shll   -0x1c(%ebp)
8400233f:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002344:	8b 40 04             	mov    0x4(%eax),%eax
84002347:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8400234a:	77 23                	ja     8400236f <_malloc_r+0x74d>
8400234c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84002350:	74 1d                	je     8400236f <_malloc_r+0x74d>
84002352:	eb 07                	jmp    8400235b <_malloc_r+0x739>
84002354:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
84002358:	d1 65 e4             	shll   -0x1c(%ebp)
8400235b:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002360:	8b 40 04             	mov    0x4(%eax),%eax
84002363:	23 45 e4             	and    -0x1c(%ebp),%eax
84002366:	85 c0                	test   %eax,%eax
84002368:	74 ea                	je     84002354 <_malloc_r+0x732>
8400236a:	e9 23 fe ff ff       	jmp    84002192 <_malloc_r+0x570>
8400236f:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002374:	8b 40 08             	mov    0x8(%eax),%eax
84002377:	8b 40 04             	mov    0x4(%eax),%eax
8400237a:	83 e0 fc             	and    $0xfffffffc,%eax
8400237d:	2b 45 d0             	sub    -0x30(%ebp),%eax
84002380:	89 45 e8             	mov    %eax,-0x18(%ebp)
84002383:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002388:	8b 40 08             	mov    0x8(%eax),%eax
8400238b:	8b 40 04             	mov    0x4(%eax),%eax
8400238e:	83 e0 fc             	and    $0xfffffffc,%eax
84002391:	39 45 d0             	cmp    %eax,-0x30(%ebp)
84002394:	77 06                	ja     8400239c <_malloc_r+0x77a>
84002396:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8400239a:	7f 53                	jg     840023ef <_malloc_r+0x7cd>
8400239c:	83 ec 08             	sub    $0x8,%esp
8400239f:	ff 75 d0             	pushl  -0x30(%ebp)
840023a2:	ff 75 08             	pushl  0x8(%ebp)
840023a5:	e8 e5 f5 ff ff       	call   8400198f <malloc_extend_top>
840023aa:	83 c4 10             	add    $0x10,%esp
840023ad:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840023b2:	8b 40 08             	mov    0x8(%eax),%eax
840023b5:	8b 40 04             	mov    0x4(%eax),%eax
840023b8:	83 e0 fc             	and    $0xfffffffc,%eax
840023bb:	2b 45 d0             	sub    -0x30(%ebp),%eax
840023be:	89 45 e8             	mov    %eax,-0x18(%ebp)
840023c1:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840023c6:	8b 40 08             	mov    0x8(%eax),%eax
840023c9:	8b 40 04             	mov    0x4(%eax),%eax
840023cc:	83 e0 fc             	and    $0xfffffffc,%eax
840023cf:	39 45 d0             	cmp    %eax,-0x30(%ebp)
840023d2:	77 06                	ja     840023da <_malloc_r+0x7b8>
840023d4:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
840023d8:	7f 15                	jg     840023ef <_malloc_r+0x7cd>
840023da:	83 ec 0c             	sub    $0xc,%esp
840023dd:	ff 75 08             	pushl  0x8(%ebp)
840023e0:	e8 ed 00 00 00       	call   840024d2 <__malloc_unlock>
840023e5:	83 c4 10             	add    $0x10,%esp
840023e8:	b8 00 00 00 00       	mov    $0x0,%eax
840023ed:	eb 50                	jmp    8400243f <_malloc_r+0x81d>
840023ef:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840023f4:	8b 40 08             	mov    0x8(%eax),%eax
840023f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
840023fa:	8b 45 d0             	mov    -0x30(%ebp),%eax
840023fd:	83 c8 01             	or     $0x1,%eax
84002400:	89 c2                	mov    %eax,%edx
84002402:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002405:	89 50 04             	mov    %edx,0x4(%eax)
84002408:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
8400240d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84002410:	8b 45 d0             	mov    -0x30(%ebp),%eax
84002413:	01 c8                	add    %ecx,%eax
84002415:	89 42 08             	mov    %eax,0x8(%edx)
84002418:	8b 45 e8             	mov    -0x18(%ebp),%eax
8400241b:	83 c8 01             	or     $0x1,%eax
8400241e:	89 c2                	mov    %eax,%edx
84002420:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84002425:	8b 40 08             	mov    0x8(%eax),%eax
84002428:	89 50 04             	mov    %edx,0x4(%eax)
8400242b:	83 ec 0c             	sub    $0xc,%esp
8400242e:	ff 75 08             	pushl  0x8(%ebp)
84002431:	e8 9c 00 00 00       	call   840024d2 <__malloc_unlock>
84002436:	83 c4 10             	add    $0x10,%esp
84002439:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400243c:	83 c0 08             	add    $0x8,%eax
8400243f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002442:	c9                   	leave  
84002443:	c3                   	ret    

84002444 <memset>:
84002444:	55                   	push   %ebp
84002445:	89 e5                	mov    %esp,%ebp
84002447:	57                   	push   %edi
84002448:	8b 7d 08             	mov    0x8(%ebp),%edi
8400244b:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
8400244f:	8b 4d 10             	mov    0x10(%ebp),%ecx
84002452:	fc                   	cld    
84002453:	83 f9 10             	cmp    $0x10,%ecx
84002456:	76 69                	jbe    840024c1 <memset+0x7d>
84002458:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400245e:	74 4c                	je     840024ac <memset+0x68>
84002460:	88 07                	mov    %al,(%edi)
84002462:	47                   	inc    %edi
84002463:	49                   	dec    %ecx
84002464:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400246a:	74 40                	je     840024ac <memset+0x68>
8400246c:	88 07                	mov    %al,(%edi)
8400246e:	47                   	inc    %edi
8400246f:	49                   	dec    %ecx
84002470:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002476:	74 34                	je     840024ac <memset+0x68>
84002478:	88 07                	mov    %al,(%edi)
8400247a:	47                   	inc    %edi
8400247b:	49                   	dec    %ecx
8400247c:	f7 c7 07 00 00 00    	test   $0x7,%edi
84002482:	74 28                	je     840024ac <memset+0x68>
84002484:	88 07                	mov    %al,(%edi)
84002486:	47                   	inc    %edi
84002487:	49                   	dec    %ecx
84002488:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400248e:	74 1c                	je     840024ac <memset+0x68>
84002490:	88 07                	mov    %al,(%edi)
84002492:	47                   	inc    %edi
84002493:	49                   	dec    %ecx
84002494:	f7 c7 07 00 00 00    	test   $0x7,%edi
8400249a:	74 10                	je     840024ac <memset+0x68>
8400249c:	88 07                	mov    %al,(%edi)
8400249e:	47                   	inc    %edi
8400249f:	49                   	dec    %ecx
840024a0:	f7 c7 07 00 00 00    	test   $0x7,%edi
840024a6:	74 04                	je     840024ac <memset+0x68>
840024a8:	88 07                	mov    %al,(%edi)
840024aa:	47                   	inc    %edi
840024ab:	49                   	dec    %ecx
840024ac:	88 c4                	mov    %al,%ah
840024ae:	89 c2                	mov    %eax,%edx
840024b0:	c1 e2 10             	shl    $0x10,%edx
840024b3:	09 d0                	or     %edx,%eax
840024b5:	89 ca                	mov    %ecx,%edx
840024b7:	c1 e9 02             	shr    $0x2,%ecx
840024ba:	83 e2 03             	and    $0x3,%edx
840024bd:	f3 ab                	rep stos %eax,%es:(%edi)
840024bf:	89 d1                	mov    %edx,%ecx
840024c1:	f3 aa                	rep stos %al,%es:(%edi)
840024c3:	8b 45 08             	mov    0x8(%ebp),%eax
840024c6:	8d 65 fc             	lea    -0x4(%ebp),%esp
840024c9:	5f                   	pop    %edi
840024ca:	c9                   	leave  
840024cb:	c3                   	ret    

840024cc <__malloc_lock>:
840024cc:	55                   	push   %ebp
840024cd:	89 e5                	mov    %esp,%ebp
840024cf:	90                   	nop
840024d0:	5d                   	pop    %ebp
840024d1:	c3                   	ret    

840024d2 <__malloc_unlock>:
840024d2:	55                   	push   %ebp
840024d3:	89 e5                	mov    %esp,%ebp
840024d5:	90                   	nop
840024d6:	5d                   	pop    %ebp
840024d7:	c3                   	ret    

840024d8 <_iprintf_r>:
840024d8:	55                   	push   %ebp
840024d9:	89 e5                	mov    %esp,%ebp
840024db:	83 ec 18             	sub    $0x18,%esp
840024de:	8d 45 10             	lea    0x10(%ebp),%eax
840024e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
840024e4:	8b 55 f0             	mov    -0x10(%ebp),%edx
840024e7:	8b 45 08             	mov    0x8(%ebp),%eax
840024ea:	8b 40 08             	mov    0x8(%eax),%eax
840024ed:	52                   	push   %edx
840024ee:	ff 75 0c             	pushl  0xc(%ebp)
840024f1:	50                   	push   %eax
840024f2:	ff 75 08             	pushl  0x8(%ebp)
840024f5:	e8 9f 0b 00 00       	call   84003099 <_vfiprintf_r>
840024fa:	83 c4 10             	add    $0x10,%esp
840024fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002500:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002503:	c9                   	leave  
84002504:	c3                   	ret    

84002505 <iprintf>:
84002505:	55                   	push   %ebp
84002506:	89 e5                	mov    %esp,%ebp
84002508:	83 ec 18             	sub    $0x18,%esp
8400250b:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002510:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002513:	8d 45 0c             	lea    0xc(%ebp),%eax
84002516:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002519:	8b 55 ec             	mov    -0x14(%ebp),%edx
8400251c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400251f:	8b 40 08             	mov    0x8(%eax),%eax
84002522:	52                   	push   %edx
84002523:	ff 75 08             	pushl  0x8(%ebp)
84002526:	50                   	push   %eax
84002527:	ff 75 f4             	pushl  -0xc(%ebp)
8400252a:	e8 6a 0b 00 00       	call   84003099 <_vfiprintf_r>
8400252f:	83 c4 10             	add    $0x10,%esp
84002532:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002535:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002538:	c9                   	leave  
84002539:	c3                   	ret    

8400253a <srand>:
8400253a:	55                   	push   %ebp
8400253b:	89 e5                	mov    %esp,%ebp
8400253d:	83 ec 10             	sub    $0x10,%esp
84002540:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002545:	89 45 fc             	mov    %eax,-0x4(%ebp)
84002548:	8b 45 08             	mov    0x8(%ebp),%eax
8400254b:	ba 00 00 00 00       	mov    $0x0,%edx
84002550:	8b 4d fc             	mov    -0x4(%ebp),%ecx
84002553:	89 81 a4 00 00 00    	mov    %eax,0xa4(%ecx)
84002559:	89 91 a8 00 00 00    	mov    %edx,0xa8(%ecx)
8400255f:	90                   	nop
84002560:	c9                   	leave  
84002561:	c3                   	ret    

84002562 <rand>:
84002562:	55                   	push   %ebp
84002563:	89 e5                	mov    %esp,%ebp
84002565:	53                   	push   %ebx
84002566:	83 ec 14             	sub    $0x14,%esp
84002569:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
8400256e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002571:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002574:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
8400257a:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
84002580:	69 da 2d 7f 95 4c    	imul   $0x4c957f2d,%edx,%ebx
84002586:	69 c8 2d f4 51 58    	imul   $0x5851f42d,%eax,%ecx
8400258c:	01 d9                	add    %ebx,%ecx
8400258e:	bb 2d 7f 95 4c       	mov    $0x4c957f2d,%ebx
84002593:	f7 e3                	mul    %ebx
84002595:	01 d1                	add    %edx,%ecx
84002597:	89 ca                	mov    %ecx,%edx
84002599:	83 c0 01             	add    $0x1,%eax
8400259c:	83 d2 00             	adc    $0x0,%edx
8400259f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
840025a2:	89 81 a4 00 00 00    	mov    %eax,0xa4(%ecx)
840025a8:	89 91 a8 00 00 00    	mov    %edx,0xa8(%ecx)
840025ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
840025b1:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx
840025b7:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax
840025bd:	89 d0                	mov    %edx,%eax
840025bf:	31 d2                	xor    %edx,%edx
840025c1:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
840025c6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840025c9:	c9                   	leave  
840025ca:	c3                   	ret    

840025cb <_sbrk_r>:
840025cb:	55                   	push   %ebp
840025cc:	89 e5                	mov    %esp,%ebp
840025ce:	83 ec 18             	sub    $0x18,%esp
840025d1:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
840025d8:	00 00 00 
840025db:	83 ec 0c             	sub    $0xc,%esp
840025de:	ff 75 0c             	pushl  0xc(%ebp)
840025e1:	e8 e0 dc ff ff       	call   840002c6 <sbrk>
840025e6:	83 c4 10             	add    $0x10,%esp
840025e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
840025ec:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
840025f0:	75 14                	jne    84002606 <_sbrk_r+0x3b>
840025f2:	a1 f0 63 00 84       	mov    0x840063f0,%eax
840025f7:	85 c0                	test   %eax,%eax
840025f9:	74 0b                	je     84002606 <_sbrk_r+0x3b>
840025fb:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
84002601:	8b 45 08             	mov    0x8(%ebp),%eax
84002604:	89 10                	mov    %edx,(%eax)
84002606:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002609:	c9                   	leave  
8400260a:	c3                   	ret    

8400260b <setvbuf>:
8400260b:	55                   	push   %ebp
8400260c:	89 e5                	mov    %esp,%ebp
8400260e:	57                   	push   %edi
8400260f:	56                   	push   %esi
84002610:	53                   	push   %ebx
84002611:	83 ec 2c             	sub    $0x2c,%esp
84002614:	8b 5d 08             	mov    0x8(%ebp),%ebx
84002617:	8b 7d 10             	mov    0x10(%ebp),%edi
8400261a:	8b 75 14             	mov    0x14(%ebp),%esi
8400261d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84002624:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002629:	89 45 e0             	mov    %eax,-0x20(%ebp)
8400262c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400262f:	89 45 dc             	mov    %eax,-0x24(%ebp)
84002632:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
84002636:	74 18                	je     84002650 <setvbuf+0x45>
84002638:	8b 45 dc             	mov    -0x24(%ebp),%eax
8400263b:	8b 40 38             	mov    0x38(%eax),%eax
8400263e:	85 c0                	test   %eax,%eax
84002640:	75 0e                	jne    84002650 <setvbuf+0x45>
84002642:	83 ec 0c             	sub    $0xc,%esp
84002645:	ff 75 dc             	pushl  -0x24(%ebp)
84002648:	e8 ab eb ff ff       	call   840011f8 <__sinit>
8400264d:	83 c4 10             	add    $0x10,%esp
84002650:	83 ff 02             	cmp    $0x2,%edi
84002653:	74 19                	je     8400266e <setvbuf+0x63>
84002655:	85 ff                	test   %edi,%edi
84002657:	74 05                	je     8400265e <setvbuf+0x53>
84002659:	83 ff 01             	cmp    $0x1,%edi
8400265c:	75 06                	jne    84002664 <setvbuf+0x59>
8400265e:	89 f0                	mov    %esi,%eax
84002660:	85 c0                	test   %eax,%eax
84002662:	79 0a                	jns    8400266e <setvbuf+0x63>
84002664:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84002669:	e9 a1 01 00 00       	jmp    8400280f <setvbuf+0x204>
8400266e:	83 ec 08             	sub    $0x8,%esp
84002671:	53                   	push   %ebx
84002672:	ff 75 e0             	pushl  -0x20(%ebp)
84002675:	e8 f8 e7 ff ff       	call   84000e72 <_fflush_r>
8400267a:	83 c4 10             	add    $0x10,%esp
8400267d:	8b 43 30             	mov    0x30(%ebx),%eax
84002680:	85 c0                	test   %eax,%eax
84002682:	74 23                	je     840026a7 <setvbuf+0x9c>
84002684:	8b 53 30             	mov    0x30(%ebx),%edx
84002687:	8d 43 40             	lea    0x40(%ebx),%eax
8400268a:	39 c2                	cmp    %eax,%edx
8400268c:	74 12                	je     840026a0 <setvbuf+0x95>
8400268e:	8b 43 30             	mov    0x30(%ebx),%eax
84002691:	83 ec 08             	sub    $0x8,%esp
84002694:	50                   	push   %eax
84002695:	ff 75 e0             	pushl  -0x20(%ebp)
84002698:	e8 68 ec ff ff       	call   84001305 <_free_r>
8400269d:	83 c4 10             	add    $0x10,%esp
840026a0:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
840026a7:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
840026ae:	8b 43 18             	mov    0x18(%ebx),%eax
840026b1:	89 43 04             	mov    %eax,0x4(%ebx)
840026b4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840026b8:	98                   	cwtl   
840026b9:	25 80 00 00 00       	and    $0x80,%eax
840026be:	85 c0                	test   %eax,%eax
840026c0:	74 12                	je     840026d4 <setvbuf+0xc9>
840026c2:	8b 43 10             	mov    0x10(%ebx),%eax
840026c5:	83 ec 08             	sub    $0x8,%esp
840026c8:	50                   	push   %eax
840026c9:	ff 75 e0             	pushl  -0x20(%ebp)
840026cc:	e8 34 ec ff ff       	call   84001305 <_free_r>
840026d1:	83 c4 10             	add    $0x10,%esp
840026d4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840026d8:	66 25 5c f3          	and    $0xf35c,%ax
840026dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840026e0:	83 ff 02             	cmp    $0x2,%edi
840026e3:	74 6f                	je     84002754 <setvbuf+0x149>
840026e5:	8d 45 d4             	lea    -0x2c(%ebp),%eax
840026e8:	50                   	push   %eax
840026e9:	8d 45 d8             	lea    -0x28(%ebp),%eax
840026ec:	50                   	push   %eax
840026ed:	53                   	push   %ebx
840026ee:	ff 75 e0             	pushl  -0x20(%ebp)
840026f1:	e8 01 07 00 00       	call   84002df7 <__swhatbuf_r>
840026f6:	83 c4 10             	add    $0x10,%esp
840026f9:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
840026fd:	09 d0                	or     %edx,%eax
840026ff:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002703:	85 f6                	test   %esi,%esi
84002705:	75 0a                	jne    84002711 <setvbuf+0x106>
84002707:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
8400270e:	8b 75 d8             	mov    -0x28(%ebp),%esi
84002711:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84002715:	75 73                	jne    8400278a <setvbuf+0x17f>
84002717:	83 ec 0c             	sub    $0xc,%esp
8400271a:	56                   	push   %esi
8400271b:	e8 36 f2 ff ff       	call   84001956 <malloc>
84002720:	83 c4 10             	add    $0x10,%esp
84002723:	89 45 0c             	mov    %eax,0xc(%ebp)
84002726:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400272a:	75 20                	jne    8400274c <setvbuf+0x141>
8400272c:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
84002733:	8b 45 d8             	mov    -0x28(%ebp),%eax
84002736:	39 c6                	cmp    %eax,%esi
84002738:	74 12                	je     8400274c <setvbuf+0x141>
8400273a:	8b 75 d8             	mov    -0x28(%ebp),%esi
8400273d:	83 ec 0c             	sub    $0xc,%esp
84002740:	56                   	push   %esi
84002741:	e8 10 f2 ff ff       	call   84001956 <malloc>
84002746:	83 c4 10             	add    $0x10,%esp
84002749:	89 45 0c             	mov    %eax,0xc(%ebp)
8400274c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84002750:	75 2e                	jne    84002780 <setvbuf+0x175>
84002752:	eb 01                	jmp    84002755 <setvbuf+0x14a>
84002754:	90                   	nop
84002755:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002759:	83 c8 02             	or     $0x2,%eax
8400275c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002760:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84002767:	8d 43 43             	lea    0x43(%ebx),%eax
8400276a:	89 03                	mov    %eax,(%ebx)
8400276c:	8b 03                	mov    (%ebx),%eax
8400276e:	89 43 10             	mov    %eax,0x10(%ebx)
84002771:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002778:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8400277b:	e9 8f 00 00 00       	jmp    8400280f <setvbuf+0x204>
84002780:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002784:	0c 80                	or     $0x80,%al
84002786:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400278a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400278d:	8b 40 38             	mov    0x38(%eax),%eax
84002790:	85 c0                	test   %eax,%eax
84002792:	75 0e                	jne    840027a2 <setvbuf+0x197>
84002794:	83 ec 0c             	sub    $0xc,%esp
84002797:	ff 75 e0             	pushl  -0x20(%ebp)
8400279a:	e8 59 ea ff ff       	call   840011f8 <__sinit>
8400279f:	83 c4 10             	add    $0x10,%esp
840027a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
840027a5:	39 c6                	cmp    %eax,%esi
840027a7:	74 0b                	je     840027b4 <setvbuf+0x1a9>
840027a9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027ad:	80 cc 08             	or     $0x8,%ah
840027b0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840027b4:	83 ff 01             	cmp    $0x1,%edi
840027b7:	75 0b                	jne    840027c4 <setvbuf+0x1b9>
840027b9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027bd:	83 c8 01             	or     $0x1,%eax
840027c0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840027c4:	8b 45 0c             	mov    0xc(%ebp),%eax
840027c7:	89 03                	mov    %eax,(%ebx)
840027c9:	8b 03                	mov    (%ebx),%eax
840027cb:	89 43 10             	mov    %eax,0x10(%ebx)
840027ce:	89 f0                	mov    %esi,%eax
840027d0:	89 43 14             	mov    %eax,0x14(%ebx)
840027d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027d7:	98                   	cwtl   
840027d8:	83 e0 08             	and    $0x8,%eax
840027db:	85 c0                	test   %eax,%eax
840027dd:	74 24                	je     84002803 <setvbuf+0x1f8>
840027df:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840027e3:	98                   	cwtl   
840027e4:	83 e0 01             	and    $0x1,%eax
840027e7:	85 c0                	test   %eax,%eax
840027e9:	74 11                	je     840027fc <setvbuf+0x1f1>
840027eb:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
840027f2:	8b 43 14             	mov    0x14(%ebx),%eax
840027f5:	f7 d8                	neg    %eax
840027f7:	89 43 18             	mov    %eax,0x18(%ebx)
840027fa:	eb 0e                	jmp    8400280a <setvbuf+0x1ff>
840027fc:	89 f0                	mov    %esi,%eax
840027fe:	89 43 08             	mov    %eax,0x8(%ebx)
84002801:	eb 07                	jmp    8400280a <setvbuf+0x1ff>
84002803:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
8400280a:	b8 00 00 00 00       	mov    $0x0,%eax
8400280f:	8d 65 f4             	lea    -0xc(%ebp),%esp
84002812:	5b                   	pop    %ebx
84002813:	5e                   	pop    %esi
84002814:	5f                   	pop    %edi
84002815:	5d                   	pop    %ebp
84002816:	c3                   	ret    

84002817 <__sread>:
84002817:	55                   	push   %ebp
84002818:	89 e5                	mov    %esp,%ebp
8400281a:	56                   	push   %esi
8400281b:	53                   	push   %ebx
8400281c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400281f:	8b 55 14             	mov    0x14(%ebp),%edx
84002822:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002826:	98                   	cwtl   
84002827:	52                   	push   %edx
84002828:	ff 75 10             	pushl  0x10(%ebp)
8400282b:	50                   	push   %eax
8400282c:	ff 75 08             	pushl  0x8(%ebp)
8400282f:	e8 a5 11 00 00       	call   840039d9 <_read_r>
84002834:	83 c4 10             	add    $0x10,%esp
84002837:	89 c6                	mov    %eax,%esi
84002839:	85 f6                	test   %esi,%esi
8400283b:	78 0a                	js     84002847 <__sread+0x30>
8400283d:	8b 43 50             	mov    0x50(%ebx),%eax
84002840:	01 f0                	add    %esi,%eax
84002842:	89 43 50             	mov    %eax,0x50(%ebx)
84002845:	eb 0b                	jmp    84002852 <__sread+0x3b>
84002847:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400284b:	80 e4 ef             	and    $0xef,%ah
8400284e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002852:	89 f0                	mov    %esi,%eax
84002854:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002857:	5b                   	pop    %ebx
84002858:	5e                   	pop    %esi
84002859:	5d                   	pop    %ebp
8400285a:	c3                   	ret    

8400285b <__seofread>:
8400285b:	55                   	push   %ebp
8400285c:	89 e5                	mov    %esp,%ebp
8400285e:	b8 00 00 00 00       	mov    $0x0,%eax
84002863:	5d                   	pop    %ebp
84002864:	c3                   	ret    

84002865 <__swrite>:
84002865:	55                   	push   %ebp
84002866:	89 e5                	mov    %esp,%ebp
84002868:	53                   	push   %ebx
84002869:	83 ec 14             	sub    $0x14,%esp
8400286c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400286f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002873:	98                   	cwtl   
84002874:	25 00 01 00 00       	and    $0x100,%eax
84002879:	85 c0                	test   %eax,%eax
8400287b:	74 15                	je     84002892 <__swrite+0x2d>
8400287d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002881:	98                   	cwtl   
84002882:	6a 02                	push   $0x2
84002884:	6a 00                	push   $0x0
84002886:	50                   	push   %eax
84002887:	ff 75 08             	pushl  0x8(%ebp)
8400288a:	e8 35 04 00 00       	call   84002cc4 <_lseek_r>
8400288f:	83 c4 10             	add    $0x10,%esp
84002892:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002896:	80 e4 ef             	and    $0xef,%ah
84002899:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400289d:	8b 55 14             	mov    0x14(%ebp),%edx
840028a0:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840028a4:	98                   	cwtl   
840028a5:	52                   	push   %edx
840028a6:	ff 75 10             	pushl  0x10(%ebp)
840028a9:	50                   	push   %eax
840028aa:	ff 75 08             	pushl  0x8(%ebp)
840028ad:	e8 7d 00 00 00       	call   8400292f <_write_r>
840028b2:	83 c4 10             	add    $0x10,%esp
840028b5:	89 45 f4             	mov    %eax,-0xc(%ebp)
840028b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
840028bb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840028be:	c9                   	leave  
840028bf:	c3                   	ret    

840028c0 <__sseek>:
840028c0:	55                   	push   %ebp
840028c1:	89 e5                	mov    %esp,%ebp
840028c3:	56                   	push   %esi
840028c4:	53                   	push   %ebx
840028c5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
840028c8:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
840028cc:	98                   	cwtl   
840028cd:	ff 75 14             	pushl  0x14(%ebp)
840028d0:	ff 75 10             	pushl  0x10(%ebp)
840028d3:	50                   	push   %eax
840028d4:	ff 75 08             	pushl  0x8(%ebp)
840028d7:	e8 e8 03 00 00       	call   84002cc4 <_lseek_r>
840028dc:	83 c4 10             	add    $0x10,%esp
840028df:	89 c6                	mov    %eax,%esi
840028e1:	83 fe ff             	cmp    $0xffffffff,%esi
840028e4:	75 0d                	jne    840028f3 <__sseek+0x33>
840028e6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840028ea:	80 e4 ef             	and    $0xef,%ah
840028ed:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840028f1:	eb 0e                	jmp    84002901 <__sseek+0x41>
840028f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840028f7:	80 cc 10             	or     $0x10,%ah
840028fa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840028fe:	89 73 50             	mov    %esi,0x50(%ebx)
84002901:	89 f0                	mov    %esi,%eax
84002903:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002906:	5b                   	pop    %ebx
84002907:	5e                   	pop    %esi
84002908:	5d                   	pop    %ebp
84002909:	c3                   	ret    

8400290a <__sclose>:
8400290a:	55                   	push   %ebp
8400290b:	89 e5                	mov    %esp,%ebp
8400290d:	83 ec 18             	sub    $0x18,%esp
84002910:	8b 45 0c             	mov    0xc(%ebp),%eax
84002913:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002916:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002919:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8400291d:	98                   	cwtl   
8400291e:	83 ec 08             	sub    $0x8,%esp
84002921:	50                   	push   %eax
84002922:	ff 75 08             	pushl  0x8(%ebp)
84002925:	e8 60 01 00 00       	call   84002a8a <_close_r>
8400292a:	83 c4 10             	add    $0x10,%esp
8400292d:	c9                   	leave  
8400292e:	c3                   	ret    

8400292f <_write_r>:
8400292f:	55                   	push   %ebp
84002930:	89 e5                	mov    %esp,%ebp
84002932:	83 ec 18             	sub    $0x18,%esp
84002935:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
8400293c:	00 00 00 
8400293f:	83 ec 04             	sub    $0x4,%esp
84002942:	ff 75 14             	pushl  0x14(%ebp)
84002945:	ff 75 10             	pushl  0x10(%ebp)
84002948:	ff 75 0c             	pushl  0xc(%ebp)
8400294b:	e8 b3 d8 ff ff       	call   84000203 <write>
84002950:	83 c4 10             	add    $0x10,%esp
84002953:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002956:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8400295a:	75 14                	jne    84002970 <_write_r+0x41>
8400295c:	a1 f0 63 00 84       	mov    0x840063f0,%eax
84002961:	85 c0                	test   %eax,%eax
84002963:	74 0b                	je     84002970 <_write_r+0x41>
84002965:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
8400296b:	8b 45 08             	mov    0x8(%ebp),%eax
8400296e:	89 10                	mov    %edx,(%eax)
84002970:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002973:	c9                   	leave  
84002974:	c3                   	ret    

84002975 <__call_exitprocs>:
84002975:	55                   	push   %ebp
84002976:	89 e5                	mov    %esp,%ebp
84002978:	57                   	push   %edi
84002979:	56                   	push   %esi
8400297a:	53                   	push   %ebx
8400297b:	83 ec 1c             	sub    $0x1c,%esp
8400297e:	a1 18 56 00 84       	mov    0x84005618,%eax
84002983:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
84002989:	a1 18 56 00 84       	mov    0x84005618,%eax
8400298e:	05 48 01 00 00       	add    $0x148,%eax
84002993:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84002996:	90                   	nop
84002997:	85 db                	test   %ebx,%ebx
84002999:	0f 84 e1 00 00 00    	je     84002a80 <__call_exitprocs+0x10b>
8400299f:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
840029a5:	8b 43 04             	mov    0x4(%ebx),%eax
840029a8:	8d 70 ff             	lea    -0x1(%eax),%esi
840029ab:	e9 c6 00 00 00       	jmp    84002a76 <__call_exitprocs+0x101>
840029b0:	b8 01 00 00 00       	mov    $0x1,%eax
840029b5:	89 f1                	mov    %esi,%ecx
840029b7:	d3 e0                	shl    %cl,%eax
840029b9:	89 45 e0             	mov    %eax,-0x20(%ebp)
840029bc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
840029c0:	74 17                	je     840029d9 <__call_exitprocs+0x64>
840029c2:	85 ff                	test   %edi,%edi
840029c4:	0f 84 a5 00 00 00    	je     84002a6f <__call_exitprocs+0xfa>
840029ca:	8d 46 20             	lea    0x20(%esi),%eax
840029cd:	8b 04 87             	mov    (%edi,%eax,4),%eax
840029d0:	39 45 0c             	cmp    %eax,0xc(%ebp)
840029d3:	0f 85 96 00 00 00    	jne    84002a6f <__call_exitprocs+0xfa>
840029d9:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
840029dd:	89 45 dc             	mov    %eax,-0x24(%ebp)
840029e0:	8b 43 04             	mov    0x4(%ebx),%eax
840029e3:	83 e8 01             	sub    $0x1,%eax
840029e6:	39 c6                	cmp    %eax,%esi
840029e8:	75 0b                	jne    840029f5 <__call_exitprocs+0x80>
840029ea:	8b 43 04             	mov    0x4(%ebx),%eax
840029ed:	83 e8 01             	sub    $0x1,%eax
840029f0:	89 43 04             	mov    %eax,0x4(%ebx)
840029f3:	eb 08                	jmp    840029fd <__call_exitprocs+0x88>
840029f5:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
840029fc:	00 
840029fd:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
84002a01:	74 6f                	je     84002a72 <__call_exitprocs+0xfd>
84002a03:	8b 43 04             	mov    0x4(%ebx),%eax
84002a06:	89 45 d8             	mov    %eax,-0x28(%ebp)
84002a09:	85 ff                	test   %edi,%edi
84002a0b:	74 0f                	je     84002a1c <__call_exitprocs+0xa7>
84002a0d:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
84002a13:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002a16:	21 d0                	and    %edx,%eax
84002a18:	85 c0                	test   %eax,%eax
84002a1a:	75 07                	jne    84002a23 <__call_exitprocs+0xae>
84002a1c:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a1f:	ff d0                	call   *%eax
84002a21:	eb 32                	jmp    84002a55 <__call_exitprocs+0xe0>
84002a23:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
84002a29:	8b 45 e0             	mov    -0x20(%ebp),%eax
84002a2c:	21 d0                	and    %edx,%eax
84002a2e:	85 c0                	test   %eax,%eax
84002a30:	75 14                	jne    84002a46 <__call_exitprocs+0xd1>
84002a32:	8b 04 b7             	mov    (%edi,%esi,4),%eax
84002a35:	83 ec 08             	sub    $0x8,%esp
84002a38:	50                   	push   %eax
84002a39:	ff 75 08             	pushl  0x8(%ebp)
84002a3c:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a3f:	ff d0                	call   *%eax
84002a41:	83 c4 10             	add    $0x10,%esp
84002a44:	eb 0f                	jmp    84002a55 <__call_exitprocs+0xe0>
84002a46:	8b 04 b7             	mov    (%edi,%esi,4),%eax
84002a49:	83 ec 0c             	sub    $0xc,%esp
84002a4c:	50                   	push   %eax
84002a4d:	8b 45 dc             	mov    -0x24(%ebp),%eax
84002a50:	ff d0                	call   *%eax
84002a52:	83 c4 10             	add    $0x10,%esp
84002a55:	8b 43 04             	mov    0x4(%ebx),%eax
84002a58:	39 45 d8             	cmp    %eax,-0x28(%ebp)
84002a5b:	0f 85 1d ff ff ff    	jne    8400297e <__call_exitprocs+0x9>
84002a61:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84002a64:	8b 00                	mov    (%eax),%eax
84002a66:	39 c3                	cmp    %eax,%ebx
84002a68:	74 09                	je     84002a73 <__call_exitprocs+0xfe>
84002a6a:	e9 0f ff ff ff       	jmp    8400297e <__call_exitprocs+0x9>
84002a6f:	90                   	nop
84002a70:	eb 01                	jmp    84002a73 <__call_exitprocs+0xfe>
84002a72:	90                   	nop
84002a73:	83 ee 01             	sub    $0x1,%esi
84002a76:	85 f6                	test   %esi,%esi
84002a78:	0f 89 32 ff ff ff    	jns    840029b0 <__call_exitprocs+0x3b>
84002a7e:	eb 01                	jmp    84002a81 <__call_exitprocs+0x10c>
84002a80:	90                   	nop
84002a81:	90                   	nop
84002a82:	8d 65 f4             	lea    -0xc(%ebp),%esp
84002a85:	5b                   	pop    %ebx
84002a86:	5e                   	pop    %esi
84002a87:	5f                   	pop    %edi
84002a88:	5d                   	pop    %ebp
84002a89:	c3                   	ret    

84002a8a <_close_r>:
84002a8a:	55                   	push   %ebp
84002a8b:	89 e5                	mov    %esp,%ebp
84002a8d:	83 ec 18             	sub    $0x18,%esp
84002a90:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
84002a97:	00 00 00 
84002a9a:	83 ec 0c             	sub    $0xc,%esp
84002a9d:	ff 75 0c             	pushl  0xc(%ebp)
84002aa0:	e8 8b d7 ff ff       	call   84000230 <close>
84002aa5:	83 c4 10             	add    $0x10,%esp
84002aa8:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002aab:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002aaf:	75 14                	jne    84002ac5 <_close_r+0x3b>
84002ab1:	a1 f0 63 00 84       	mov    0x840063f0,%eax
84002ab6:	85 c0                	test   %eax,%eax
84002ab8:	74 0b                	je     84002ac5 <_close_r+0x3b>
84002aba:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
84002ac0:	8b 45 08             	mov    0x8(%ebp),%eax
84002ac3:	89 10                	mov    %edx,(%eax)
84002ac5:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ac8:	c9                   	leave  
84002ac9:	c3                   	ret    

84002aca <_fclose_r>:
84002aca:	55                   	push   %ebp
84002acb:	89 e5                	mov    %esp,%ebp
84002acd:	53                   	push   %ebx
84002ace:	83 ec 14             	sub    $0x14,%esp
84002ad1:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002ad4:	85 db                	test   %ebx,%ebx
84002ad6:	75 0a                	jne    84002ae2 <_fclose_r+0x18>
84002ad8:	b8 00 00 00 00       	mov    $0x0,%eax
84002add:	e9 ea 00 00 00       	jmp    84002bcc <_fclose_r+0x102>
84002ae2:	8b 45 08             	mov    0x8(%ebp),%eax
84002ae5:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002ae8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84002aec:	74 18                	je     84002b06 <_fclose_r+0x3c>
84002aee:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002af1:	8b 40 38             	mov    0x38(%eax),%eax
84002af4:	85 c0                	test   %eax,%eax
84002af6:	75 0e                	jne    84002b06 <_fclose_r+0x3c>
84002af8:	83 ec 0c             	sub    $0xc,%esp
84002afb:	ff 75 f0             	pushl  -0x10(%ebp)
84002afe:	e8 f5 e6 ff ff       	call   840011f8 <__sinit>
84002b03:	83 c4 10             	add    $0x10,%esp
84002b06:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002b0a:	66 85 c0             	test   %ax,%ax
84002b0d:	75 0a                	jne    84002b19 <_fclose_r+0x4f>
84002b0f:	b8 00 00 00 00       	mov    $0x0,%eax
84002b14:	e9 b3 00 00 00       	jmp    84002bcc <_fclose_r+0x102>
84002b19:	83 ec 08             	sub    $0x8,%esp
84002b1c:	53                   	push   %ebx
84002b1d:	ff 75 08             	pushl  0x8(%ebp)
84002b20:	e8 27 e1 ff ff       	call   84000c4c <__sflush_r>
84002b25:	83 c4 10             	add    $0x10,%esp
84002b28:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002b2b:	8b 43 2c             	mov    0x2c(%ebx),%eax
84002b2e:	85 c0                	test   %eax,%eax
84002b30:	74 1d                	je     84002b4f <_fclose_r+0x85>
84002b32:	8b 43 2c             	mov    0x2c(%ebx),%eax
84002b35:	8b 53 1c             	mov    0x1c(%ebx),%edx
84002b38:	83 ec 08             	sub    $0x8,%esp
84002b3b:	52                   	push   %edx
84002b3c:	ff 75 08             	pushl  0x8(%ebp)
84002b3f:	ff d0                	call   *%eax
84002b41:	83 c4 10             	add    $0x10,%esp
84002b44:	85 c0                	test   %eax,%eax
84002b46:	79 07                	jns    84002b4f <_fclose_r+0x85>
84002b48:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
84002b4f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002b53:	98                   	cwtl   
84002b54:	25 80 00 00 00       	and    $0x80,%eax
84002b59:	85 c0                	test   %eax,%eax
84002b5b:	74 12                	je     84002b6f <_fclose_r+0xa5>
84002b5d:	8b 43 10             	mov    0x10(%ebx),%eax
84002b60:	83 ec 08             	sub    $0x8,%esp
84002b63:	50                   	push   %eax
84002b64:	ff 75 08             	pushl  0x8(%ebp)
84002b67:	e8 99 e7 ff ff       	call   84001305 <_free_r>
84002b6c:	83 c4 10             	add    $0x10,%esp
84002b6f:	8b 43 30             	mov    0x30(%ebx),%eax
84002b72:	85 c0                	test   %eax,%eax
84002b74:	74 23                	je     84002b99 <_fclose_r+0xcf>
84002b76:	8b 53 30             	mov    0x30(%ebx),%edx
84002b79:	8d 43 40             	lea    0x40(%ebx),%eax
84002b7c:	39 c2                	cmp    %eax,%edx
84002b7e:	74 12                	je     84002b92 <_fclose_r+0xc8>
84002b80:	8b 43 30             	mov    0x30(%ebx),%eax
84002b83:	83 ec 08             	sub    $0x8,%esp
84002b86:	50                   	push   %eax
84002b87:	ff 75 08             	pushl  0x8(%ebp)
84002b8a:	e8 76 e7 ff ff       	call   84001305 <_free_r>
84002b8f:	83 c4 10             	add    $0x10,%esp
84002b92:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84002b99:	8b 43 44             	mov    0x44(%ebx),%eax
84002b9c:	85 c0                	test   %eax,%eax
84002b9e:	74 19                	je     84002bb9 <_fclose_r+0xef>
84002ba0:	8b 43 44             	mov    0x44(%ebx),%eax
84002ba3:	83 ec 08             	sub    $0x8,%esp
84002ba6:	50                   	push   %eax
84002ba7:	ff 75 08             	pushl  0x8(%ebp)
84002baa:	e8 56 e7 ff ff       	call   84001305 <_free_r>
84002baf:	83 c4 10             	add    $0x10,%esp
84002bb2:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
84002bb9:	e8 d3 e6 ff ff       	call   84001291 <__sfp_lock_acquire>
84002bbe:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
84002bc4:	e8 ce e6 ff ff       	call   84001297 <__sfp_lock_release>
84002bc9:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002bcc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002bcf:	c9                   	leave  
84002bd0:	c3                   	ret    

84002bd1 <fclose>:
84002bd1:	55                   	push   %ebp
84002bd2:	89 e5                	mov    %esp,%ebp
84002bd4:	83 ec 08             	sub    $0x8,%esp
84002bd7:	8b 55 08             	mov    0x8(%ebp),%edx
84002bda:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002bdf:	83 ec 08             	sub    $0x8,%esp
84002be2:	52                   	push   %edx
84002be3:	50                   	push   %eax
84002be4:	e8 e1 fe ff ff       	call   84002aca <_fclose_r>
84002be9:	83 c4 10             	add    $0x10,%esp
84002bec:	c9                   	leave  
84002bed:	c3                   	ret    

84002bee <_getc_r>:
84002bee:	55                   	push   %ebp
84002bef:	89 e5                	mov    %esp,%ebp
84002bf1:	53                   	push   %ebx
84002bf2:	83 ec 14             	sub    $0x14,%esp
84002bf5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002bf8:	8b 45 08             	mov    0x8(%ebp),%eax
84002bfb:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002bfe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84002c02:	74 18                	je     84002c1c <_getc_r+0x2e>
84002c04:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002c07:	8b 40 38             	mov    0x38(%eax),%eax
84002c0a:	85 c0                	test   %eax,%eax
84002c0c:	75 0e                	jne    84002c1c <_getc_r+0x2e>
84002c0e:	83 ec 0c             	sub    $0xc,%esp
84002c11:	ff 75 f4             	pushl  -0xc(%ebp)
84002c14:	e8 df e5 ff ff       	call   840011f8 <__sinit>
84002c19:	83 c4 10             	add    $0x10,%esp
84002c1c:	8b 43 04             	mov    0x4(%ebx),%eax
84002c1f:	83 e8 01             	sub    $0x1,%eax
84002c22:	89 43 04             	mov    %eax,0x4(%ebx)
84002c25:	8b 43 04             	mov    0x4(%ebx),%eax
84002c28:	85 c0                	test   %eax,%eax
84002c2a:	79 11                	jns    84002c3d <_getc_r+0x4f>
84002c2c:	83 ec 08             	sub    $0x8,%esp
84002c2f:	53                   	push   %ebx
84002c30:	ff 75 08             	pushl  0x8(%ebp)
84002c33:	e8 7e 0f 00 00       	call   84003bb6 <__srget_r>
84002c38:	83 c4 10             	add    $0x10,%esp
84002c3b:	eb 0d                	jmp    84002c4a <_getc_r+0x5c>
84002c3d:	8b 03                	mov    (%ebx),%eax
84002c3f:	8d 50 01             	lea    0x1(%eax),%edx
84002c42:	89 13                	mov    %edx,(%ebx)
84002c44:	0f b6 00             	movzbl (%eax),%eax
84002c47:	0f b6 c0             	movzbl %al,%eax
84002c4a:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002c4d:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002c50:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002c53:	c9                   	leave  
84002c54:	c3                   	ret    

84002c55 <getc>:
84002c55:	55                   	push   %ebp
84002c56:	89 e5                	mov    %esp,%ebp
84002c58:	53                   	push   %ebx
84002c59:	83 ec 14             	sub    $0x14,%esp
84002c5c:	8b 5d 08             	mov    0x8(%ebp),%ebx
84002c5f:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84002c64:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002c67:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002c6a:	89 45 f0             	mov    %eax,-0x10(%ebp)
84002c6d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84002c71:	74 18                	je     84002c8b <getc+0x36>
84002c73:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002c76:	8b 40 38             	mov    0x38(%eax),%eax
84002c79:	85 c0                	test   %eax,%eax
84002c7b:	75 0e                	jne    84002c8b <getc+0x36>
84002c7d:	83 ec 0c             	sub    $0xc,%esp
84002c80:	ff 75 f0             	pushl  -0x10(%ebp)
84002c83:	e8 70 e5 ff ff       	call   840011f8 <__sinit>
84002c88:	83 c4 10             	add    $0x10,%esp
84002c8b:	8b 43 04             	mov    0x4(%ebx),%eax
84002c8e:	83 e8 01             	sub    $0x1,%eax
84002c91:	89 43 04             	mov    %eax,0x4(%ebx)
84002c94:	8b 43 04             	mov    0x4(%ebx),%eax
84002c97:	85 c0                	test   %eax,%eax
84002c99:	79 11                	jns    84002cac <getc+0x57>
84002c9b:	83 ec 08             	sub    $0x8,%esp
84002c9e:	53                   	push   %ebx
84002c9f:	ff 75 f4             	pushl  -0xc(%ebp)
84002ca2:	e8 0f 0f 00 00       	call   84003bb6 <__srget_r>
84002ca7:	83 c4 10             	add    $0x10,%esp
84002caa:	eb 0d                	jmp    84002cb9 <getc+0x64>
84002cac:	8b 03                	mov    (%ebx),%eax
84002cae:	8d 50 01             	lea    0x1(%eax),%edx
84002cb1:	89 13                	mov    %edx,(%ebx)
84002cb3:	0f b6 00             	movzbl (%eax),%eax
84002cb6:	0f b6 c0             	movzbl %al,%eax
84002cb9:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002cbc:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002cbf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84002cc2:	c9                   	leave  
84002cc3:	c3                   	ret    

84002cc4 <_lseek_r>:
84002cc4:	55                   	push   %ebp
84002cc5:	89 e5                	mov    %esp,%ebp
84002cc7:	83 ec 18             	sub    $0x18,%esp
84002cca:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
84002cd1:	00 00 00 
84002cd4:	83 ec 04             	sub    $0x4,%esp
84002cd7:	ff 75 14             	pushl  0x14(%ebp)
84002cda:	ff 75 10             	pushl  0x10(%ebp)
84002cdd:	ff 75 0c             	pushl  0xc(%ebp)
84002ce0:	e8 6c d5 ff ff       	call   84000251 <lseek>
84002ce5:	83 c4 10             	add    $0x10,%esp
84002ce8:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002ceb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84002cef:	75 14                	jne    84002d05 <_lseek_r+0x41>
84002cf1:	a1 f0 63 00 84       	mov    0x840063f0,%eax
84002cf6:	85 c0                	test   %eax,%eax
84002cf8:	74 0b                	je     84002d05 <_lseek_r+0x41>
84002cfa:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
84002d00:	8b 45 08             	mov    0x8(%ebp),%eax
84002d03:	89 10                	mov    %edx,(%eax)
84002d05:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002d08:	c9                   	leave  
84002d09:	c3                   	ret    

84002d0a <__smakebuf_r>:
84002d0a:	55                   	push   %ebp
84002d0b:	89 e5                	mov    %esp,%ebp
84002d0d:	56                   	push   %esi
84002d0e:	53                   	push   %ebx
84002d0f:	83 ec 10             	sub    $0x10,%esp
84002d12:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84002d15:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d19:	98                   	cwtl   
84002d1a:	83 e0 02             	and    $0x2,%eax
84002d1d:	85 c0                	test   %eax,%eax
84002d1f:	74 16                	je     84002d37 <__smakebuf_r+0x2d>
84002d21:	8d 43 43             	lea    0x43(%ebx),%eax
84002d24:	89 03                	mov    %eax,(%ebx)
84002d26:	8b 03                	mov    (%ebx),%eax
84002d28:	89 43 10             	mov    %eax,0x10(%ebx)
84002d2b:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002d32:	e9 b9 00 00 00       	jmp    84002df0 <__smakebuf_r+0xe6>
84002d37:	8d 45 ec             	lea    -0x14(%ebp),%eax
84002d3a:	50                   	push   %eax
84002d3b:	8d 45 f0             	lea    -0x10(%ebp),%eax
84002d3e:	50                   	push   %eax
84002d3f:	53                   	push   %ebx
84002d40:	ff 75 08             	pushl  0x8(%ebp)
84002d43:	e8 af 00 00 00       	call   84002df7 <__swhatbuf_r>
84002d48:	83 c4 10             	add    $0x10,%esp
84002d4b:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002d4e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002d51:	83 ec 08             	sub    $0x8,%esp
84002d54:	50                   	push   %eax
84002d55:	ff 75 08             	pushl  0x8(%ebp)
84002d58:	e8 c5 ee ff ff       	call   84001c22 <_malloc_r>
84002d5d:	83 c4 10             	add    $0x10,%esp
84002d60:	89 c6                	mov    %eax,%esi
84002d62:	85 f6                	test   %esi,%esi
84002d64:	75 2f                	jne    84002d95 <__smakebuf_r+0x8b>
84002d66:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d6a:	98                   	cwtl   
84002d6b:	25 00 02 00 00       	and    $0x200,%eax
84002d70:	85 c0                	test   %eax,%eax
84002d72:	75 7c                	jne    84002df0 <__smakebuf_r+0xe6>
84002d74:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002d78:	83 e0 fc             	and    $0xfffffffc,%eax
84002d7b:	83 c8 02             	or     $0x2,%eax
84002d7e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002d82:	8d 43 43             	lea    0x43(%ebx),%eax
84002d85:	89 03                	mov    %eax,(%ebx)
84002d87:	8b 03                	mov    (%ebx),%eax
84002d89:	89 43 10             	mov    %eax,0x10(%ebx)
84002d8c:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
84002d93:	eb 5b                	jmp    84002df0 <__smakebuf_r+0xe6>
84002d95:	8b 45 08             	mov    0x8(%ebp),%eax
84002d98:	c7 40 3c bd 11 00 84 	movl   $0x840011bd,0x3c(%eax)
84002d9f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002da3:	0c 80                	or     $0x80,%al
84002da5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002da9:	89 33                	mov    %esi,(%ebx)
84002dab:	8b 03                	mov    (%ebx),%eax
84002dad:	89 43 10             	mov    %eax,0x10(%ebx)
84002db0:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002db3:	89 43 14             	mov    %eax,0x14(%ebx)
84002db6:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002db9:	85 c0                	test   %eax,%eax
84002dbb:	74 26                	je     84002de3 <__smakebuf_r+0xd9>
84002dbd:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
84002dc1:	98                   	cwtl   
84002dc2:	83 ec 08             	sub    $0x8,%esp
84002dc5:	50                   	push   %eax
84002dc6:	ff 75 08             	pushl  0x8(%ebp)
84002dc9:	e8 8c 17 00 00       	call   8400455a <_isatty_r>
84002dce:	83 c4 10             	add    $0x10,%esp
84002dd1:	85 c0                	test   %eax,%eax
84002dd3:	74 0e                	je     84002de3 <__smakebuf_r+0xd9>
84002dd5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84002dd9:	83 e0 fc             	and    $0xfffffffc,%eax
84002ddc:	83 c8 01             	or     $0x1,%eax
84002ddf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002de3:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
84002de7:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002dea:	09 d0                	or     %edx,%eax
84002dec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84002df0:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002df3:	5b                   	pop    %ebx
84002df4:	5e                   	pop    %esi
84002df5:	5d                   	pop    %ebp
84002df6:	c3                   	ret    

84002df7 <__swhatbuf_r>:
84002df7:	55                   	push   %ebp
84002df8:	89 e5                	mov    %esp,%ebp
84002dfa:	83 ec 58             	sub    $0x58,%esp
84002dfd:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
84002e04:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e07:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002e0b:	66 85 c0             	test   %ax,%ax
84002e0e:	78 1f                	js     84002e2f <__swhatbuf_r+0x38>
84002e10:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e13:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
84002e17:	98                   	cwtl   
84002e18:	83 ec 04             	sub    $0x4,%esp
84002e1b:	8d 55 ac             	lea    -0x54(%ebp),%edx
84002e1e:	52                   	push   %edx
84002e1f:	50                   	push   %eax
84002e20:	ff 75 08             	pushl  0x8(%ebp)
84002e23:	e8 51 12 00 00       	call   84004079 <_fstat_r>
84002e28:	83 c4 10             	add    $0x10,%esp
84002e2b:	85 c0                	test   %eax,%eax
84002e2d:	79 35                	jns    84002e64 <__swhatbuf_r+0x6d>
84002e2f:	8b 45 14             	mov    0x14(%ebp),%eax
84002e32:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84002e38:	8b 45 0c             	mov    0xc(%ebp),%eax
84002e3b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84002e3f:	98                   	cwtl   
84002e40:	25 80 00 00 00       	and    $0x80,%eax
84002e45:	85 c0                	test   %eax,%eax
84002e47:	74 0b                	je     84002e54 <__swhatbuf_r+0x5d>
84002e49:	8b 45 10             	mov    0x10(%ebp),%eax
84002e4c:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
84002e52:	eb 09                	jmp    84002e5d <__swhatbuf_r+0x66>
84002e54:	8b 45 10             	mov    0x10(%ebp),%eax
84002e57:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
84002e5d:	b8 00 00 00 00       	mov    $0x0,%eax
84002e62:	eb 24                	jmp    84002e88 <__swhatbuf_r+0x91>
84002e64:	8b 45 b0             	mov    -0x50(%ebp),%eax
84002e67:	25 00 f0 00 00       	and    $0xf000,%eax
84002e6c:	3d 00 20 00 00       	cmp    $0x2000,%eax
84002e71:	0f 94 c0             	sete   %al
84002e74:	0f b6 d0             	movzbl %al,%edx
84002e77:	8b 45 14             	mov    0x14(%ebp),%eax
84002e7a:	89 10                	mov    %edx,(%eax)
84002e7c:	8b 45 10             	mov    0x10(%ebp),%eax
84002e7f:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
84002e85:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002e88:	c9                   	leave  
84002e89:	c3                   	ret    

84002e8a <__sprint_r>:
84002e8a:	55                   	push   %ebp
84002e8b:	89 e5                	mov    %esp,%ebp
84002e8d:	56                   	push   %esi
84002e8e:	53                   	push   %ebx
84002e8f:	83 ec 10             	sub    $0x10,%esp
84002e92:	8b 5d 10             	mov    0x10(%ebp),%ebx
84002e95:	be 00 00 00 00       	mov    $0x0,%esi
84002e9a:	8b 43 08             	mov    0x8(%ebx),%eax
84002e9d:	85 c0                	test   %eax,%eax
84002e9f:	75 11                	jne    84002eb2 <__sprint_r+0x28>
84002ea1:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84002ea8:	b8 00 00 00 00       	mov    $0x0,%eax
84002ead:	e9 ad 00 00 00       	jmp    84002f5f <__sprint_r+0xd5>
84002eb2:	8b 45 0c             	mov    0xc(%ebp),%eax
84002eb5:	8b 40 64             	mov    0x64(%eax),%eax
84002eb8:	25 00 20 00 00       	and    $0x2000,%eax
84002ebd:	85 c0                	test   %eax,%eax
84002ebf:	74 7a                	je     84002f3b <__sprint_r+0xb1>
84002ec1:	8b 03                	mov    (%ebx),%eax
84002ec3:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002ec6:	eb 6a                	jmp    84002f32 <__sprint_r+0xa8>
84002ec8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ecb:	8b 00                	mov    (%eax),%eax
84002ecd:	89 45 ec             	mov    %eax,-0x14(%ebp)
84002ed0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ed3:	8b 40 04             	mov    0x4(%eax),%eax
84002ed6:	c1 e8 02             	shr    $0x2,%eax
84002ed9:	89 45 e8             	mov    %eax,-0x18(%ebp)
84002edc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
84002ee3:	eb 33                	jmp    84002f18 <__sprint_r+0x8e>
84002ee5:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002ee8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
84002eef:	8b 45 ec             	mov    -0x14(%ebp),%eax
84002ef2:	01 d0                	add    %edx,%eax
84002ef4:	8b 00                	mov    (%eax),%eax
84002ef6:	83 ec 04             	sub    $0x4,%esp
84002ef9:	ff 75 0c             	pushl  0xc(%ebp)
84002efc:	50                   	push   %eax
84002efd:	ff 75 08             	pushl  0x8(%ebp)
84002f00:	e8 d5 10 00 00       	call   84003fda <_fputwc_r>
84002f05:	83 c4 10             	add    $0x10,%esp
84002f08:	83 f8 ff             	cmp    $0xffffffff,%eax
84002f0b:	75 07                	jne    84002f14 <__sprint_r+0x8a>
84002f0d:	be ff ff ff ff       	mov    $0xffffffff,%esi
84002f12:	eb 3b                	jmp    84002f4f <__sprint_r+0xc5>
84002f14:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84002f18:	8b 45 f0             	mov    -0x10(%ebp),%eax
84002f1b:	3b 45 e8             	cmp    -0x18(%ebp),%eax
84002f1e:	7c c5                	jl     84002ee5 <__sprint_r+0x5b>
84002f20:	8b 43 08             	mov    0x8(%ebx),%eax
84002f23:	8b 55 e8             	mov    -0x18(%ebp),%edx
84002f26:	c1 e2 02             	shl    $0x2,%edx
84002f29:	29 d0                	sub    %edx,%eax
84002f2b:	89 43 08             	mov    %eax,0x8(%ebx)
84002f2e:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
84002f32:	8b 43 08             	mov    0x8(%ebx),%eax
84002f35:	85 c0                	test   %eax,%eax
84002f37:	75 8f                	jne    84002ec8 <__sprint_r+0x3e>
84002f39:	eb 14                	jmp    84002f4f <__sprint_r+0xc5>
84002f3b:	83 ec 04             	sub    $0x4,%esp
84002f3e:	53                   	push   %ebx
84002f3f:	ff 75 0c             	pushl  0xc(%ebp)
84002f42:	ff 75 08             	pushl  0x8(%ebp)
84002f45:	e8 72 11 00 00       	call   840040bc <__sfvwrite_r>
84002f4a:	83 c4 10             	add    $0x10,%esp
84002f4d:	89 c6                	mov    %eax,%esi
84002f4f:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84002f56:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84002f5d:	89 f0                	mov    %esi,%eax
84002f5f:	8d 65 f8             	lea    -0x8(%ebp),%esp
84002f62:	5b                   	pop    %ebx
84002f63:	5e                   	pop    %esi
84002f64:	5d                   	pop    %ebp
84002f65:	c3                   	ret    

84002f66 <__sfputc_r>:
84002f66:	55                   	push   %ebp
84002f67:	89 e5                	mov    %esp,%ebp
84002f69:	83 ec 08             	sub    $0x8,%esp
84002f6c:	8b 45 10             	mov    0x10(%ebp),%eax
84002f6f:	8b 40 08             	mov    0x8(%eax),%eax
84002f72:	8d 50 ff             	lea    -0x1(%eax),%edx
84002f75:	8b 45 10             	mov    0x10(%ebp),%eax
84002f78:	89 50 08             	mov    %edx,0x8(%eax)
84002f7b:	8b 45 10             	mov    0x10(%ebp),%eax
84002f7e:	8b 40 08             	mov    0x8(%eax),%eax
84002f81:	85 c0                	test   %eax,%eax
84002f83:	79 17                	jns    84002f9c <__sfputc_r+0x36>
84002f85:	8b 45 10             	mov    0x10(%ebp),%eax
84002f88:	8b 50 08             	mov    0x8(%eax),%edx
84002f8b:	8b 45 10             	mov    0x10(%ebp),%eax
84002f8e:	8b 40 18             	mov    0x18(%eax),%eax
84002f91:	39 c2                	cmp    %eax,%edx
84002f93:	7c 21                	jl     84002fb6 <__sfputc_r+0x50>
84002f95:	8b 45 0c             	mov    0xc(%ebp),%eax
84002f98:	3c 0a                	cmp    $0xa,%al
84002f9a:	74 1a                	je     84002fb6 <__sfputc_r+0x50>
84002f9c:	8b 45 10             	mov    0x10(%ebp),%eax
84002f9f:	8b 00                	mov    (%eax),%eax
84002fa1:	8d 48 01             	lea    0x1(%eax),%ecx
84002fa4:	8b 55 10             	mov    0x10(%ebp),%edx
84002fa7:	89 0a                	mov    %ecx,(%edx)
84002fa9:	8b 55 0c             	mov    0xc(%ebp),%edx
84002fac:	88 10                	mov    %dl,(%eax)
84002fae:	0f b6 00             	movzbl (%eax),%eax
84002fb1:	0f b6 c0             	movzbl %al,%eax
84002fb4:	eb 14                	jmp    84002fca <__sfputc_r+0x64>
84002fb6:	83 ec 04             	sub    $0x4,%esp
84002fb9:	ff 75 10             	pushl  0x10(%ebp)
84002fbc:	ff 75 0c             	pushl  0xc(%ebp)
84002fbf:	ff 75 08             	pushl  0x8(%ebp)
84002fc2:	e8 6f 0c 00 00       	call   84003c36 <__swbuf_r>
84002fc7:	83 c4 10             	add    $0x10,%esp
84002fca:	c9                   	leave  
84002fcb:	c3                   	ret    

84002fcc <__sfputs_r>:
84002fcc:	55                   	push   %ebp
84002fcd:	89 e5                	mov    %esp,%ebp
84002fcf:	53                   	push   %ebx
84002fd0:	83 ec 14             	sub    $0x14,%esp
84002fd3:	8b 45 0c             	mov    0xc(%ebp),%eax
84002fd6:	8b 40 64             	mov    0x64(%eax),%eax
84002fd9:	25 00 20 00 00       	and    $0x2000,%eax
84002fde:	85 c0                	test   %eax,%eax
84002fe0:	74 4c                	je     8400302e <__sfputs_r+0x62>
84002fe2:	8b 45 10             	mov    0x10(%ebp),%eax
84002fe5:	89 45 f4             	mov    %eax,-0xc(%ebp)
84002fe8:	bb 00 00 00 00       	mov    $0x0,%ebx
84002fed:	eb 31                	jmp    84003020 <__sfputs_r+0x54>
84002fef:	89 d8                	mov    %ebx,%eax
84002ff1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
84002ff8:	8b 45 f4             	mov    -0xc(%ebp),%eax
84002ffb:	01 d0                	add    %edx,%eax
84002ffd:	8b 00                	mov    (%eax),%eax
84002fff:	83 ec 04             	sub    $0x4,%esp
84003002:	ff 75 0c             	pushl  0xc(%ebp)
84003005:	50                   	push   %eax
84003006:	ff 75 08             	pushl  0x8(%ebp)
84003009:	e8 cc 0f 00 00       	call   84003fda <_fputwc_r>
8400300e:	83 c4 10             	add    $0x10,%esp
84003011:	83 f8 ff             	cmp    $0xffffffff,%eax
84003014:	75 07                	jne    8400301d <__sfputs_r+0x51>
84003016:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400301b:	eb 52                	jmp    8400306f <__sfputs_r+0xa3>
8400301d:	83 c3 01             	add    $0x1,%ebx
84003020:	8b 45 14             	mov    0x14(%ebp),%eax
84003023:	c1 e8 02             	shr    $0x2,%eax
84003026:	89 da                	mov    %ebx,%edx
84003028:	39 d0                	cmp    %edx,%eax
8400302a:	77 c3                	ja     84002fef <__sfputs_r+0x23>
8400302c:	eb 3c                	jmp    8400306a <__sfputs_r+0x9e>
8400302e:	bb 00 00 00 00       	mov    $0x0,%ebx
84003033:	eb 2e                	jmp    84003063 <__sfputs_r+0x97>
84003035:	89 da                	mov    %ebx,%edx
84003037:	8b 45 10             	mov    0x10(%ebp),%eax
8400303a:	01 d0                	add    %edx,%eax
8400303c:	0f b6 00             	movzbl (%eax),%eax
8400303f:	0f be c0             	movsbl %al,%eax
84003042:	83 ec 04             	sub    $0x4,%esp
84003045:	ff 75 0c             	pushl  0xc(%ebp)
84003048:	50                   	push   %eax
84003049:	ff 75 08             	pushl  0x8(%ebp)
8400304c:	e8 15 ff ff ff       	call   84002f66 <__sfputc_r>
84003051:	83 c4 10             	add    $0x10,%esp
84003054:	83 f8 ff             	cmp    $0xffffffff,%eax
84003057:	75 07                	jne    84003060 <__sfputs_r+0x94>
84003059:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400305e:	eb 0f                	jmp    8400306f <__sfputs_r+0xa3>
84003060:	83 c3 01             	add    $0x1,%ebx
84003063:	89 d8                	mov    %ebx,%eax
84003065:	39 45 14             	cmp    %eax,0x14(%ebp)
84003068:	77 cb                	ja     84003035 <__sfputs_r+0x69>
8400306a:	b8 00 00 00 00       	mov    $0x0,%eax
8400306f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003072:	c9                   	leave  
84003073:	c3                   	ret    

84003074 <vfiprintf>:
84003074:	55                   	push   %ebp
84003075:	89 e5                	mov    %esp,%ebp
84003077:	83 ec 18             	sub    $0x18,%esp
8400307a:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
8400307f:	ff 75 10             	pushl  0x10(%ebp)
84003082:	ff 75 0c             	pushl  0xc(%ebp)
84003085:	ff 75 08             	pushl  0x8(%ebp)
84003088:	50                   	push   %eax
84003089:	e8 0b 00 00 00       	call   84003099 <_vfiprintf_r>
8400308e:	83 c4 10             	add    $0x10,%esp
84003091:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003094:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003097:	c9                   	leave  
84003098:	c3                   	ret    

84003099 <_vfiprintf_r>:
84003099:	55                   	push   %ebp
8400309a:	89 e5                	mov    %esp,%ebp
8400309c:	57                   	push   %edi
8400309d:	56                   	push   %esi
8400309e:	53                   	push   %ebx
8400309f:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
840030a5:	c7 45 e4 cc 2f 00 84 	movl   $0x84002fcc,-0x1c(%ebp)
840030ac:	8b 45 08             	mov    0x8(%ebp),%eax
840030af:	89 45 e0             	mov    %eax,-0x20(%ebp)
840030b2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
840030b6:	74 18                	je     840030d0 <_vfiprintf_r+0x37>
840030b8:	8b 45 e0             	mov    -0x20(%ebp),%eax
840030bb:	8b 40 38             	mov    0x38(%eax),%eax
840030be:	85 c0                	test   %eax,%eax
840030c0:	75 0e                	jne    840030d0 <_vfiprintf_r+0x37>
840030c2:	83 ec 0c             	sub    $0xc,%esp
840030c5:	ff 75 e0             	pushl  -0x20(%ebp)
840030c8:	e8 2b e1 ff ff       	call   840011f8 <__sinit>
840030cd:	83 c4 10             	add    $0x10,%esp
840030d0:	8b 45 0c             	mov    0xc(%ebp),%eax
840030d3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840030d7:	98                   	cwtl   
840030d8:	83 e0 08             	and    $0x8,%eax
840030db:	85 c0                	test   %eax,%eax
840030dd:	74 0a                	je     840030e9 <_vfiprintf_r+0x50>
840030df:	8b 45 0c             	mov    0xc(%ebp),%eax
840030e2:	8b 40 10             	mov    0x10(%eax),%eax
840030e5:	85 c0                	test   %eax,%eax
840030e7:	75 1f                	jne    84003108 <_vfiprintf_r+0x6f>
840030e9:	83 ec 08             	sub    $0x8,%esp
840030ec:	ff 75 0c             	pushl  0xc(%ebp)
840030ef:	ff 75 08             	pushl  0x8(%ebp)
840030f2:	e8 72 0c 00 00       	call   84003d69 <__swsetup_r>
840030f7:	83 c4 10             	add    $0x10,%esp
840030fa:	85 c0                	test   %eax,%eax
840030fc:	74 0a                	je     84003108 <_vfiprintf_r+0x6f>
840030fe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003103:	e9 df 02 00 00       	jmp    840033e7 <_vfiprintf_r+0x34e>
84003108:	8b 5d 10             	mov    0x10(%ebp),%ebx
8400310b:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
84003112:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
84003116:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
8400311a:	8b 45 14             	mov    0x14(%ebp),%eax
8400311d:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
84003123:	89 de                	mov    %ebx,%esi
84003125:	eb 03                	jmp    8400312a <_vfiprintf_r+0x91>
84003127:	83 c3 01             	add    $0x1,%ebx
8400312a:	0f b6 03             	movzbl (%ebx),%eax
8400312d:	84 c0                	test   %al,%al
8400312f:	74 07                	je     84003138 <_vfiprintf_r+0x9f>
84003131:	0f b6 03             	movzbl (%ebx),%eax
84003134:	3c 25                	cmp    $0x25,%al
84003136:	75 ef                	jne    84003127 <_vfiprintf_r+0x8e>
84003138:	89 d8                	mov    %ebx,%eax
8400313a:	29 f0                	sub    %esi,%eax
8400313c:	85 c0                	test   %eax,%eax
8400313e:	74 2b                	je     8400316b <_vfiprintf_r+0xd2>
84003140:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
84003146:	50                   	push   %eax
84003147:	56                   	push   %esi
84003148:	ff 75 0c             	pushl  0xc(%ebp)
8400314b:	ff 75 08             	pushl  0x8(%ebp)
8400314e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84003151:	ff d0                	call   *%eax
84003153:	83 c4 10             	add    $0x10,%esp
84003156:	83 f8 ff             	cmp    $0xffffffff,%eax
84003159:	0f 84 68 02 00 00    	je     840033c7 <_vfiprintf_r+0x32e>
8400315f:	8b 45 94             	mov    -0x6c(%ebp),%eax
84003162:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
84003168:	89 45 94             	mov    %eax,-0x6c(%ebp)
8400316b:	0f b6 03             	movzbl (%ebx),%eax
8400316e:	84 c0                	test   %al,%al
84003170:	0f 84 54 02 00 00    	je     840033ca <_vfiprintf_r+0x331>
84003176:	83 c3 01             	add    $0x1,%ebx
84003179:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
84003180:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
84003187:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8400318e:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
84003195:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
84003199:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
840031a0:	c7 45 dc 1c 56 00 84 	movl   $0x8400561c,-0x24(%ebp)
840031a7:	eb 1b                	jmp    840031c4 <_vfiprintf_r+0x12b>
840031a9:	8b 55 80             	mov    -0x80(%ebp),%edx
840031ac:	89 f0                	mov    %esi,%eax
840031ae:	2b 45 dc             	sub    -0x24(%ebp),%eax
840031b1:	be 01 00 00 00       	mov    $0x1,%esi
840031b6:	89 c1                	mov    %eax,%ecx
840031b8:	d3 e6                	shl    %cl,%esi
840031ba:	89 f0                	mov    %esi,%eax
840031bc:	09 d0                	or     %edx,%eax
840031be:	89 45 80             	mov    %eax,-0x80(%ebp)
840031c1:	83 c3 01             	add    $0x1,%ebx
840031c4:	0f b6 03             	movzbl (%ebx),%eax
840031c7:	0f be c0             	movsbl %al,%eax
840031ca:	83 ec 04             	sub    $0x4,%esp
840031cd:	6a 05                	push   $0x5
840031cf:	50                   	push   %eax
840031d0:	ff 75 dc             	pushl  -0x24(%ebp)
840031d3:	e8 08 15 00 00       	call   840046e0 <memchr>
840031d8:	83 c4 10             	add    $0x10,%esp
840031db:	89 c6                	mov    %eax,%esi
840031dd:	85 f6                	test   %esi,%esi
840031df:	75 c8                	jne    840031a9 <_vfiprintf_r+0x110>
840031e1:	8b 45 80             	mov    -0x80(%ebp),%eax
840031e4:	83 e0 10             	and    $0x10,%eax
840031e7:	85 c0                	test   %eax,%eax
840031e9:	74 04                	je     840031ef <_vfiprintf_r+0x156>
840031eb:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
840031ef:	8b 45 80             	mov    -0x80(%ebp),%eax
840031f2:	83 e0 08             	and    $0x8,%eax
840031f5:	85 c0                	test   %eax,%eax
840031f7:	74 04                	je     840031fd <_vfiprintf_r+0x164>
840031f9:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
840031fd:	0f b6 03             	movzbl (%ebx),%eax
84003200:	3c 2a                	cmp    $0x2a,%al
84003202:	75 50                	jne    84003254 <_vfiprintf_r+0x1bb>
84003204:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8400320a:	8d 50 04             	lea    0x4(%eax),%edx
8400320d:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
84003213:	8b 00                	mov    (%eax),%eax
84003215:	89 45 8c             	mov    %eax,-0x74(%ebp)
84003218:	8b 45 8c             	mov    -0x74(%ebp),%eax
8400321b:	85 c0                	test   %eax,%eax
8400321d:	79 11                	jns    84003230 <_vfiprintf_r+0x197>
8400321f:	8b 45 8c             	mov    -0x74(%ebp),%eax
84003222:	f7 d8                	neg    %eax
84003224:	89 45 8c             	mov    %eax,-0x74(%ebp)
84003227:	8b 45 80             	mov    -0x80(%ebp),%eax
8400322a:	83 c8 02             	or     $0x2,%eax
8400322d:	89 45 80             	mov    %eax,-0x80(%ebp)
84003230:	83 c3 01             	add    $0x1,%ebx
84003233:	eb 2d                	jmp    84003262 <_vfiprintf_r+0x1c9>
84003235:	8b 55 8c             	mov    -0x74(%ebp),%edx
84003238:	89 d0                	mov    %edx,%eax
8400323a:	c1 e0 02             	shl    $0x2,%eax
8400323d:	01 d0                	add    %edx,%eax
8400323f:	01 c0                	add    %eax,%eax
84003241:	89 c2                	mov    %eax,%edx
84003243:	0f b6 03             	movzbl (%ebx),%eax
84003246:	0f be c0             	movsbl %al,%eax
84003249:	83 e8 30             	sub    $0x30,%eax
8400324c:	01 d0                	add    %edx,%eax
8400324e:	89 45 8c             	mov    %eax,-0x74(%ebp)
84003251:	83 c3 01             	add    $0x1,%ebx
84003254:	0f b6 03             	movzbl (%ebx),%eax
84003257:	0f be c0             	movsbl %al,%eax
8400325a:	83 e8 30             	sub    $0x30,%eax
8400325d:	83 f8 09             	cmp    $0x9,%eax
84003260:	76 d3                	jbe    84003235 <_vfiprintf_r+0x19c>
84003262:	0f b6 03             	movzbl (%ebx),%eax
84003265:	3c 2e                	cmp    $0x2e,%al
84003267:	75 67                	jne    840032d0 <_vfiprintf_r+0x237>
84003269:	83 c3 01             	add    $0x1,%ebx
8400326c:	0f b6 03             	movzbl (%ebx),%eax
8400326f:	3c 2a                	cmp    $0x2a,%al
84003271:	75 27                	jne    8400329a <_vfiprintf_r+0x201>
84003273:	83 c3 01             	add    $0x1,%ebx
84003276:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
8400327c:	8d 50 04             	lea    0x4(%eax),%edx
8400327f:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
84003285:	8b 00                	mov    (%eax),%eax
84003287:	89 45 84             	mov    %eax,-0x7c(%ebp)
8400328a:	8b 45 84             	mov    -0x7c(%ebp),%eax
8400328d:	85 c0                	test   %eax,%eax
8400328f:	79 3f                	jns    840032d0 <_vfiprintf_r+0x237>
84003291:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
84003298:	eb 36                	jmp    840032d0 <_vfiprintf_r+0x237>
8400329a:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
840032a1:	eb 1f                	jmp    840032c2 <_vfiprintf_r+0x229>
840032a3:	8b 55 84             	mov    -0x7c(%ebp),%edx
840032a6:	89 d0                	mov    %edx,%eax
840032a8:	c1 e0 02             	shl    $0x2,%eax
840032ab:	01 d0                	add    %edx,%eax
840032ad:	01 c0                	add    %eax,%eax
840032af:	89 c2                	mov    %eax,%edx
840032b1:	0f b6 03             	movzbl (%ebx),%eax
840032b4:	0f be c0             	movsbl %al,%eax
840032b7:	83 e8 30             	sub    $0x30,%eax
840032ba:	01 d0                	add    %edx,%eax
840032bc:	89 45 84             	mov    %eax,-0x7c(%ebp)
840032bf:	83 c3 01             	add    $0x1,%ebx
840032c2:	0f b6 03             	movzbl (%ebx),%eax
840032c5:	0f be c0             	movsbl %al,%eax
840032c8:	83 e8 30             	sub    $0x30,%eax
840032cb:	83 f8 09             	cmp    $0x9,%eax
840032ce:	76 d3                	jbe    840032a3 <_vfiprintf_r+0x20a>
840032d0:	c7 45 dc 22 56 00 84 	movl   $0x84005622,-0x24(%ebp)
840032d7:	0f b6 03             	movzbl (%ebx),%eax
840032da:	0f be c0             	movsbl %al,%eax
840032dd:	83 ec 04             	sub    $0x4,%esp
840032e0:	6a 03                	push   $0x3
840032e2:	50                   	push   %eax
840032e3:	ff 75 dc             	pushl  -0x24(%ebp)
840032e6:	e8 f5 13 00 00       	call   840046e0 <memchr>
840032eb:	83 c4 10             	add    $0x10,%esp
840032ee:	89 c6                	mov    %eax,%esi
840032f0:	85 f6                	test   %esi,%esi
840032f2:	74 1b                	je     8400330f <_vfiprintf_r+0x276>
840032f4:	8b 55 80             	mov    -0x80(%ebp),%edx
840032f7:	89 f0                	mov    %esi,%eax
840032f9:	2b 45 dc             	sub    -0x24(%ebp),%eax
840032fc:	be 40 00 00 00       	mov    $0x40,%esi
84003301:	89 c1                	mov    %eax,%ecx
84003303:	d3 e6                	shl    %cl,%esi
84003305:	89 f0                	mov    %esi,%eax
84003307:	09 d0                	or     %edx,%eax
84003309:	89 45 80             	mov    %eax,-0x80(%ebp)
8400330c:	83 c3 01             	add    $0x1,%ebx
8400330f:	89 d8                	mov    %ebx,%eax
84003311:	8d 58 01             	lea    0x1(%eax),%ebx
84003314:	0f b6 00             	movzbl (%eax),%eax
84003317:	88 45 98             	mov    %al,-0x68(%ebp)
8400331a:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
8400331e:	0f be c0             	movsbl %al,%eax
84003321:	83 ec 04             	sub    $0x4,%esp
84003324:	6a 06                	push   $0x6
84003326:	50                   	push   %eax
84003327:	68 26 56 00 84       	push   $0x84005626
8400332c:	e8 af 13 00 00       	call   840046e0 <memchr>
84003331:	83 c4 10             	add    $0x10,%esp
84003334:	89 c6                	mov    %eax,%esi
84003336:	85 f6                	test   %esi,%esi
84003338:	74 5a                	je     84003394 <_vfiprintf_r+0x2fb>
8400333a:	b8 00 00 00 00       	mov    $0x0,%eax
8400333f:	85 c0                	test   %eax,%eax
84003341:	75 2e                	jne    84003371 <_vfiprintf_r+0x2d8>
84003343:	8b 45 80             	mov    -0x80(%ebp),%eax
84003346:	25 00 01 00 00       	and    $0x100,%eax
8400334b:	85 c0                	test   %eax,%eax
8400334d:	74 11                	je     84003360 <_vfiprintf_r+0x2c7>
8400334f:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003355:	83 c0 0c             	add    $0xc,%eax
84003358:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8400335e:	eb 55                	jmp    840033b5 <_vfiprintf_r+0x31c>
84003360:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
84003366:	83 c0 08             	add    $0x8,%eax
84003369:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
8400336f:	eb 44                	jmp    840033b5 <_vfiprintf_r+0x31c>
84003371:	83 ec 0c             	sub    $0xc,%esp
84003374:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
8400337a:	50                   	push   %eax
8400337b:	ff 75 e4             	pushl  -0x1c(%ebp)
8400337e:	ff 75 0c             	pushl  0xc(%ebp)
84003381:	8d 45 80             	lea    -0x80(%ebp),%eax
84003384:	50                   	push   %eax
84003385:	ff 75 08             	pushl  0x8(%ebp)
84003388:	e8 73 cc ff 7b       	call   0 <_start-0x84000000>
8400338d:	83 c4 20             	add    $0x20,%esp
84003390:	89 c7                	mov    %eax,%edi
84003392:	eb 21                	jmp    840033b5 <_vfiprintf_r+0x31c>
84003394:	83 ec 0c             	sub    $0xc,%esp
84003397:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
8400339d:	50                   	push   %eax
8400339e:	ff 75 e4             	pushl  -0x1c(%ebp)
840033a1:	ff 75 0c             	pushl  0xc(%ebp)
840033a4:	8d 45 80             	lea    -0x80(%ebp),%eax
840033a7:	50                   	push   %eax
840033a8:	ff 75 08             	pushl  0x8(%ebp)
840033ab:	e8 da 01 00 00       	call   8400358a <_printf_i>
840033b0:	83 c4 20             	add    $0x20,%esp
840033b3:	89 c7                	mov    %eax,%edi
840033b5:	83 ff ff             	cmp    $0xffffffff,%edi
840033b8:	74 13                	je     840033cd <_vfiprintf_r+0x334>
840033ba:	8b 45 94             	mov    -0x6c(%ebp),%eax
840033bd:	01 f8                	add    %edi,%eax
840033bf:	89 45 94             	mov    %eax,-0x6c(%ebp)
840033c2:	e9 5c fd ff ff       	jmp    84003123 <_vfiprintf_r+0x8a>
840033c7:	90                   	nop
840033c8:	eb 04                	jmp    840033ce <_vfiprintf_r+0x335>
840033ca:	90                   	nop
840033cb:	eb 01                	jmp    840033ce <_vfiprintf_r+0x335>
840033cd:	90                   	nop
840033ce:	8b 45 0c             	mov    0xc(%ebp),%eax
840033d1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
840033d5:	98                   	cwtl   
840033d6:	83 e0 40             	and    $0x40,%eax
840033d9:	85 c0                	test   %eax,%eax
840033db:	75 05                	jne    840033e2 <_vfiprintf_r+0x349>
840033dd:	8b 45 94             	mov    -0x6c(%ebp),%eax
840033e0:	eb 05                	jmp    840033e7 <_vfiprintf_r+0x34e>
840033e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840033e7:	8d 65 f4             	lea    -0xc(%ebp),%esp
840033ea:	5b                   	pop    %ebx
840033eb:	5e                   	pop    %esi
840033ec:	5f                   	pop    %edi
840033ed:	5d                   	pop    %ebp
840033ee:	c3                   	ret    

840033ef <_printf_common>:
840033ef:	55                   	push   %ebp
840033f0:	89 e5                	mov    %esp,%ebp
840033f2:	83 ec 18             	sub    $0x18,%esp
840033f5:	8b 45 0c             	mov    0xc(%ebp),%eax
840033f8:	8b 50 10             	mov    0x10(%eax),%edx
840033fb:	8b 45 0c             	mov    0xc(%ebp),%eax
840033fe:	8b 40 08             	mov    0x8(%eax),%eax
84003401:	39 c2                	cmp    %eax,%edx
84003403:	0f 4c d0             	cmovl  %eax,%edx
84003406:	8b 45 10             	mov    0x10(%ebp),%eax
84003409:	89 10                	mov    %edx,(%eax)
8400340b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400340e:	0f b6 40 43          	movzbl 0x43(%eax),%eax
84003412:	84 c0                	test   %al,%al
84003414:	74 0d                	je     84003423 <_printf_common+0x34>
84003416:	8b 45 10             	mov    0x10(%ebp),%eax
84003419:	8b 00                	mov    (%eax),%eax
8400341b:	8d 50 01             	lea    0x1(%eax),%edx
8400341e:	8b 45 10             	mov    0x10(%ebp),%eax
84003421:	89 10                	mov    %edx,(%eax)
84003423:	8b 45 0c             	mov    0xc(%ebp),%eax
84003426:	8b 00                	mov    (%eax),%eax
84003428:	83 e0 20             	and    $0x20,%eax
8400342b:	85 c0                	test   %eax,%eax
8400342d:	74 0d                	je     8400343c <_printf_common+0x4d>
8400342f:	8b 45 10             	mov    0x10(%ebp),%eax
84003432:	8b 00                	mov    (%eax),%eax
84003434:	8d 50 02             	lea    0x2(%eax),%edx
84003437:	8b 45 10             	mov    0x10(%ebp),%eax
8400343a:	89 10                	mov    %edx,(%eax)
8400343c:	8b 45 0c             	mov    0xc(%ebp),%eax
8400343f:	8b 00                	mov    (%eax),%eax
84003441:	83 e0 06             	and    $0x6,%eax
84003444:	85 c0                	test   %eax,%eax
84003446:	75 41                	jne    84003489 <_printf_common+0x9a>
84003448:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8400344f:	eb 24                	jmp    84003475 <_printf_common+0x86>
84003451:	8b 45 0c             	mov    0xc(%ebp),%eax
84003454:	83 c0 19             	add    $0x19,%eax
84003457:	6a 01                	push   $0x1
84003459:	50                   	push   %eax
8400345a:	ff 75 14             	pushl  0x14(%ebp)
8400345d:	ff 75 08             	pushl  0x8(%ebp)
84003460:	8b 45 18             	mov    0x18(%ebp),%eax
84003463:	ff d0                	call   *%eax
84003465:	83 c4 10             	add    $0x10,%esp
84003468:	83 f8 ff             	cmp    $0xffffffff,%eax
8400346b:	0f 84 0b 01 00 00    	je     8400357c <_printf_common+0x18d>
84003471:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
84003475:	8b 45 0c             	mov    0xc(%ebp),%eax
84003478:	8b 50 0c             	mov    0xc(%eax),%edx
8400347b:	8b 45 10             	mov    0x10(%ebp),%eax
8400347e:	8b 08                	mov    (%eax),%ecx
84003480:	89 d0                	mov    %edx,%eax
84003482:	29 c8                	sub    %ecx,%eax
84003484:	39 45 f0             	cmp    %eax,-0x10(%ebp)
84003487:	7c c8                	jl     84003451 <_printf_common+0x62>
84003489:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003490:	8b 45 0c             	mov    0xc(%ebp),%eax
84003493:	0f b6 40 43          	movzbl 0x43(%eax),%eax
84003497:	84 c0                	test   %al,%al
84003499:	74 04                	je     8400349f <_printf_common+0xb0>
8400349b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
8400349f:	8b 45 0c             	mov    0xc(%ebp),%eax
840034a2:	8b 00                	mov    (%eax),%eax
840034a4:	83 e0 20             	and    $0x20,%eax
840034a7:	85 c0                	test   %eax,%eax
840034a9:	74 28                	je     840034d3 <_printf_common+0xe4>
840034ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034ae:	8d 50 01             	lea    0x1(%eax),%edx
840034b1:	89 55 f4             	mov    %edx,-0xc(%ebp)
840034b4:	8b 55 0c             	mov    0xc(%ebp),%edx
840034b7:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
840034bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034bf:	8d 50 01             	lea    0x1(%eax),%edx
840034c2:	89 55 f4             	mov    %edx,-0xc(%ebp)
840034c5:	8b 55 0c             	mov    0xc(%ebp),%edx
840034c8:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
840034cc:	8b 55 0c             	mov    0xc(%ebp),%edx
840034cf:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
840034d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
840034d6:	8b 55 0c             	mov    0xc(%ebp),%edx
840034d9:	83 c2 43             	add    $0x43,%edx
840034dc:	50                   	push   %eax
840034dd:	52                   	push   %edx
840034de:	ff 75 14             	pushl  0x14(%ebp)
840034e1:	ff 75 08             	pushl  0x8(%ebp)
840034e4:	8b 45 18             	mov    0x18(%ebp),%eax
840034e7:	ff d0                	call   *%eax
840034e9:	83 c4 10             	add    $0x10,%esp
840034ec:	83 f8 ff             	cmp    $0xffffffff,%eax
840034ef:	0f 84 8a 00 00 00    	je     8400357f <_printf_common+0x190>
840034f5:	8b 45 0c             	mov    0xc(%ebp),%eax
840034f8:	8b 50 0c             	mov    0xc(%eax),%edx
840034fb:	8b 45 10             	mov    0x10(%ebp),%eax
840034fe:	8b 08                	mov    (%eax),%ecx
84003500:	89 d0                	mov    %edx,%eax
84003502:	29 c8                	sub    %ecx,%eax
84003504:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003507:	8b 45 0c             	mov    0xc(%ebp),%eax
8400350a:	8b 00                	mov    (%eax),%eax
8400350c:	83 e0 06             	and    $0x6,%eax
8400350f:	83 f8 04             	cmp    $0x4,%eax
84003512:	75 06                	jne    8400351a <_printf_common+0x12b>
84003514:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003518:	79 07                	jns    84003521 <_printf_common+0x132>
8400351a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003521:	8b 45 0c             	mov    0xc(%ebp),%eax
84003524:	8b 50 08             	mov    0x8(%eax),%edx
84003527:	8b 45 0c             	mov    0xc(%ebp),%eax
8400352a:	8b 40 10             	mov    0x10(%eax),%eax
8400352d:	39 c2                	cmp    %eax,%edx
8400352f:	7e 13                	jle    84003544 <_printf_common+0x155>
84003531:	8b 45 0c             	mov    0xc(%ebp),%eax
84003534:	8b 50 08             	mov    0x8(%eax),%edx
84003537:	8b 45 0c             	mov    0xc(%ebp),%eax
8400353a:	8b 48 10             	mov    0x10(%eax),%ecx
8400353d:	89 d0                	mov    %edx,%eax
8400353f:	29 c8                	sub    %ecx,%eax
84003541:	01 45 f4             	add    %eax,-0xc(%ebp)
84003544:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
8400354b:	eb 20                	jmp    8400356d <_printf_common+0x17e>
8400354d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003550:	83 c0 1a             	add    $0x1a,%eax
84003553:	6a 01                	push   $0x1
84003555:	50                   	push   %eax
84003556:	ff 75 14             	pushl  0x14(%ebp)
84003559:	ff 75 08             	pushl  0x8(%ebp)
8400355c:	8b 45 18             	mov    0x18(%ebp),%eax
8400355f:	ff d0                	call   *%eax
84003561:	83 c4 10             	add    $0x10,%esp
84003564:	83 f8 ff             	cmp    $0xffffffff,%eax
84003567:	74 19                	je     84003582 <_printf_common+0x193>
84003569:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
8400356d:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003570:	3b 45 f4             	cmp    -0xc(%ebp),%eax
84003573:	7c d8                	jl     8400354d <_printf_common+0x15e>
84003575:	b8 00 00 00 00       	mov    $0x0,%eax
8400357a:	eb 0c                	jmp    84003588 <_printf_common+0x199>
8400357c:	90                   	nop
8400357d:	eb 04                	jmp    84003583 <_printf_common+0x194>
8400357f:	90                   	nop
84003580:	eb 01                	jmp    84003583 <_printf_common+0x194>
84003582:	90                   	nop
84003583:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003588:	c9                   	leave  
84003589:	c3                   	ret    

8400358a <_printf_i>:
8400358a:	55                   	push   %ebp
8400358b:	89 e5                	mov    %esp,%ebp
8400358d:	53                   	push   %ebx
8400358e:	83 ec 24             	sub    $0x24,%esp
84003591:	8b 45 0c             	mov    0xc(%ebp),%eax
84003594:	83 c0 1b             	add    $0x1b,%eax
84003597:	83 c0 28             	add    $0x28,%eax
8400359a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8400359d:	c7 45 e8 30 56 00 84 	movl   $0x84005630,-0x18(%ebp)
840035a4:	8b 45 0c             	mov    0xc(%ebp),%eax
840035a7:	0f b6 40 18          	movzbl 0x18(%eax),%eax
840035ab:	0f be c0             	movsbl %al,%eax
840035ae:	85 c0                	test   %eax,%eax
840035b0:	0f 84 00 03 00 00    	je     840038b6 <_printf_i+0x32c>
840035b6:	85 c0                	test   %eax,%eax
840035b8:	0f 88 52 03 00 00    	js     84003910 <_printf_i+0x386>
840035be:	83 f8 78             	cmp    $0x78,%eax
840035c1:	0f 8f 49 03 00 00    	jg     84003910 <_printf_i+0x386>
840035c7:	83 f8 58             	cmp    $0x58,%eax
840035ca:	0f 8c 40 03 00 00    	jl     84003910 <_printf_i+0x386>
840035d0:	83 e8 58             	sub    $0x58,%eax
840035d3:	83 f8 20             	cmp    $0x20,%eax
840035d6:	0f 87 34 03 00 00    	ja     84003910 <_printf_i+0x386>
840035dc:	8b 04 85 54 56 00 84 	mov    -0x7bffa9ac(,%eax,4),%eax
840035e3:	ff e0                	jmp    *%eax
840035e5:	8b 45 18             	mov    0x18(%ebp),%eax
840035e8:	8b 00                	mov    (%eax),%eax
840035ea:	8d 48 04             	lea    0x4(%eax),%ecx
840035ed:	8b 55 18             	mov    0x18(%ebp),%edx
840035f0:	89 0a                	mov    %ecx,(%edx)
840035f2:	8b 00                	mov    (%eax),%eax
840035f4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
840035f8:	89 c2                	mov    %eax,%edx
840035fa:	8b 45 ec             	mov    -0x14(%ebp),%eax
840035fd:	88 10                	mov    %dl,(%eax)
840035ff:	8b 45 0c             	mov    0xc(%ebp),%eax
84003602:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
84003609:	e9 1c 03 00 00       	jmp    8400392a <_printf_i+0x3a0>
8400360e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003611:	8b 00                	mov    (%eax),%eax
84003613:	25 80 00 00 00       	and    $0x80,%eax
84003618:	85 c0                	test   %eax,%eax
8400361a:	74 11                	je     8400362d <_printf_i+0xa3>
8400361c:	8b 45 18             	mov    0x18(%ebp),%eax
8400361f:	8b 00                	mov    (%eax),%eax
84003621:	8d 48 04             	lea    0x4(%eax),%ecx
84003624:	8b 55 18             	mov    0x18(%ebp),%edx
84003627:	89 0a                	mov    %ecx,(%edx)
84003629:	8b 00                	mov    (%eax),%eax
8400362b:	eb 2d                	jmp    8400365a <_printf_i+0xd0>
8400362d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003630:	8b 00                	mov    (%eax),%eax
84003632:	83 e0 40             	and    $0x40,%eax
84003635:	85 c0                	test   %eax,%eax
84003637:	74 12                	je     8400364b <_printf_i+0xc1>
84003639:	8b 45 18             	mov    0x18(%ebp),%eax
8400363c:	8b 00                	mov    (%eax),%eax
8400363e:	8d 48 04             	lea    0x4(%eax),%ecx
84003641:	8b 55 18             	mov    0x18(%ebp),%edx
84003644:	89 0a                	mov    %ecx,(%edx)
84003646:	8b 00                	mov    (%eax),%eax
84003648:	98                   	cwtl   
84003649:	eb 0f                	jmp    8400365a <_printf_i+0xd0>
8400364b:	8b 45 18             	mov    0x18(%ebp),%eax
8400364e:	8b 00                	mov    (%eax),%eax
84003650:	8d 48 04             	lea    0x4(%eax),%ecx
84003653:	8b 55 18             	mov    0x18(%ebp),%edx
84003656:	89 0a                	mov    %ecx,(%edx)
84003658:	8b 00                	mov    (%eax),%eax
8400365a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400365d:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003660:	85 c0                	test   %eax,%eax
84003662:	79 0a                	jns    8400366e <_printf_i+0xe4>
84003664:	f7 5d f4             	negl   -0xc(%ebp)
84003667:	8b 45 0c             	mov    0xc(%ebp),%eax
8400366a:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
8400366e:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
84003675:	e9 28 01 00 00       	jmp    840037a2 <_printf_i+0x218>
8400367a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400367d:	8b 00                	mov    (%eax),%eax
8400367f:	25 80 00 00 00       	and    $0x80,%eax
84003684:	85 c0                	test   %eax,%eax
84003686:	74 11                	je     84003699 <_printf_i+0x10f>
84003688:	8b 45 18             	mov    0x18(%ebp),%eax
8400368b:	8b 00                	mov    (%eax),%eax
8400368d:	8d 48 04             	lea    0x4(%eax),%ecx
84003690:	8b 55 18             	mov    0x18(%ebp),%edx
84003693:	89 0a                	mov    %ecx,(%edx)
84003695:	8b 00                	mov    (%eax),%eax
84003697:	eb 2f                	jmp    840036c8 <_printf_i+0x13e>
84003699:	8b 45 0c             	mov    0xc(%ebp),%eax
8400369c:	8b 00                	mov    (%eax),%eax
8400369e:	83 e0 40             	and    $0x40,%eax
840036a1:	85 c0                	test   %eax,%eax
840036a3:	74 14                	je     840036b9 <_printf_i+0x12f>
840036a5:	8b 45 18             	mov    0x18(%ebp),%eax
840036a8:	8b 00                	mov    (%eax),%eax
840036aa:	8d 48 04             	lea    0x4(%eax),%ecx
840036ad:	8b 55 18             	mov    0x18(%ebp),%edx
840036b0:	89 0a                	mov    %ecx,(%edx)
840036b2:	8b 00                	mov    (%eax),%eax
840036b4:	0f b7 c0             	movzwl %ax,%eax
840036b7:	eb 0f                	jmp    840036c8 <_printf_i+0x13e>
840036b9:	8b 45 18             	mov    0x18(%ebp),%eax
840036bc:	8b 00                	mov    (%eax),%eax
840036be:	8d 48 04             	lea    0x4(%eax),%ecx
840036c1:	8b 55 18             	mov    0x18(%ebp),%edx
840036c4:	89 0a                	mov    %ecx,(%edx)
840036c6:	8b 00                	mov    (%eax),%eax
840036c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
840036cb:	8b 45 0c             	mov    0xc(%ebp),%eax
840036ce:	0f b6 40 18          	movzbl 0x18(%eax),%eax
840036d2:	3c 6f                	cmp    $0x6f,%al
840036d4:	75 07                	jne    840036dd <_printf_i+0x153>
840036d6:	b8 08 00 00 00       	mov    $0x8,%eax
840036db:	eb 05                	jmp    840036e2 <_printf_i+0x158>
840036dd:	b8 0a 00 00 00       	mov    $0xa,%eax
840036e2:	89 45 f0             	mov    %eax,-0x10(%ebp)
840036e5:	e9 b1 00 00 00       	jmp    8400379b <_printf_i+0x211>
840036ea:	8b 45 0c             	mov    0xc(%ebp),%eax
840036ed:	c6 40 45 58          	movb   $0x58,0x45(%eax)
840036f1:	eb 1d                	jmp    84003710 <_printf_i+0x186>
840036f3:	8b 45 0c             	mov    0xc(%ebp),%eax
840036f6:	8b 00                	mov    (%eax),%eax
840036f8:	83 c8 20             	or     $0x20,%eax
840036fb:	89 c2                	mov    %eax,%edx
840036fd:	8b 45 0c             	mov    0xc(%ebp),%eax
84003700:	89 10                	mov    %edx,(%eax)
84003702:	8b 45 0c             	mov    0xc(%ebp),%eax
84003705:	c6 40 45 78          	movb   $0x78,0x45(%eax)
84003709:	c7 45 e8 41 56 00 84 	movl   $0x84005641,-0x18(%ebp)
84003710:	8b 45 0c             	mov    0xc(%ebp),%eax
84003713:	8b 00                	mov    (%eax),%eax
84003715:	25 80 00 00 00       	and    $0x80,%eax
8400371a:	85 c0                	test   %eax,%eax
8400371c:	74 11                	je     8400372f <_printf_i+0x1a5>
8400371e:	8b 45 18             	mov    0x18(%ebp),%eax
84003721:	8b 00                	mov    (%eax),%eax
84003723:	8d 48 04             	lea    0x4(%eax),%ecx
84003726:	8b 55 18             	mov    0x18(%ebp),%edx
84003729:	89 0a                	mov    %ecx,(%edx)
8400372b:	8b 00                	mov    (%eax),%eax
8400372d:	eb 2f                	jmp    8400375e <_printf_i+0x1d4>
8400372f:	8b 45 0c             	mov    0xc(%ebp),%eax
84003732:	8b 00                	mov    (%eax),%eax
84003734:	83 e0 40             	and    $0x40,%eax
84003737:	85 c0                	test   %eax,%eax
84003739:	74 14                	je     8400374f <_printf_i+0x1c5>
8400373b:	8b 45 18             	mov    0x18(%ebp),%eax
8400373e:	8b 00                	mov    (%eax),%eax
84003740:	8d 48 04             	lea    0x4(%eax),%ecx
84003743:	8b 55 18             	mov    0x18(%ebp),%edx
84003746:	89 0a                	mov    %ecx,(%edx)
84003748:	8b 00                	mov    (%eax),%eax
8400374a:	0f b7 c0             	movzwl %ax,%eax
8400374d:	eb 0f                	jmp    8400375e <_printf_i+0x1d4>
8400374f:	8b 45 18             	mov    0x18(%ebp),%eax
84003752:	8b 00                	mov    (%eax),%eax
84003754:	8d 48 04             	lea    0x4(%eax),%ecx
84003757:	8b 55 18             	mov    0x18(%ebp),%edx
8400375a:	89 0a                	mov    %ecx,(%edx)
8400375c:	8b 00                	mov    (%eax),%eax
8400375e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003761:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
84003768:	8b 45 0c             	mov    0xc(%ebp),%eax
8400376b:	8b 00                	mov    (%eax),%eax
8400376d:	83 e0 01             	and    $0x1,%eax
84003770:	85 c0                	test   %eax,%eax
84003772:	74 0f                	je     84003783 <_printf_i+0x1f9>
84003774:	8b 45 0c             	mov    0xc(%ebp),%eax
84003777:	8b 00                	mov    (%eax),%eax
84003779:	83 c8 20             	or     $0x20,%eax
8400377c:	89 c2                	mov    %eax,%edx
8400377e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003781:	89 10                	mov    %edx,(%eax)
84003783:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003787:	75 11                	jne    8400379a <_printf_i+0x210>
84003789:	8b 45 0c             	mov    0xc(%ebp),%eax
8400378c:	8b 00                	mov    (%eax),%eax
8400378e:	83 e0 df             	and    $0xffffffdf,%eax
84003791:	89 c2                	mov    %eax,%edx
84003793:	8b 45 0c             	mov    0xc(%ebp),%eax
84003796:	89 10                	mov    %edx,(%eax)
84003798:	eb 01                	jmp    8400379b <_printf_i+0x211>
8400379a:	90                   	nop
8400379b:	8b 45 0c             	mov    0xc(%ebp),%eax
8400379e:	c6 40 43 00          	movb   $0x0,0x43(%eax)
840037a2:	8b 45 0c             	mov    0xc(%ebp),%eax
840037a5:	8b 50 04             	mov    0x4(%eax),%edx
840037a8:	8b 45 0c             	mov    0xc(%ebp),%eax
840037ab:	89 50 08             	mov    %edx,0x8(%eax)
840037ae:	8b 45 0c             	mov    0xc(%ebp),%eax
840037b1:	8b 40 08             	mov    0x8(%eax),%eax
840037b4:	85 c0                	test   %eax,%eax
840037b6:	78 0f                	js     840037c7 <_printf_i+0x23d>
840037b8:	8b 45 0c             	mov    0xc(%ebp),%eax
840037bb:	8b 00                	mov    (%eax),%eax
840037bd:	83 e0 fb             	and    $0xfffffffb,%eax
840037c0:	89 c2                	mov    %eax,%edx
840037c2:	8b 45 0c             	mov    0xc(%ebp),%eax
840037c5:	89 10                	mov    %edx,(%eax)
840037c7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
840037cb:	75 0a                	jne    840037d7 <_printf_i+0x24d>
840037cd:	8b 45 0c             	mov    0xc(%ebp),%eax
840037d0:	8b 40 04             	mov    0x4(%eax),%eax
840037d3:	85 c0                	test   %eax,%eax
840037d5:	74 34                	je     8400380b <_printf_i+0x281>
840037d7:	8b 4d f0             	mov    -0x10(%ebp),%ecx
840037da:	8b 45 f4             	mov    -0xc(%ebp),%eax
840037dd:	ba 00 00 00 00       	mov    $0x0,%edx
840037e2:	f7 f1                	div    %ecx
840037e4:	8b 45 e8             	mov    -0x18(%ebp),%eax
840037e7:	01 d0                	add    %edx,%eax
840037e9:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
840037ed:	0f b6 10             	movzbl (%eax),%edx
840037f0:	8b 45 ec             	mov    -0x14(%ebp),%eax
840037f3:	88 10                	mov    %dl,(%eax)
840037f5:	8b 5d f0             	mov    -0x10(%ebp),%ebx
840037f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
840037fb:	ba 00 00 00 00       	mov    $0x0,%edx
84003800:	f7 f3                	div    %ebx
84003802:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003805:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003809:	75 cc                	jne    840037d7 <_printf_i+0x24d>
8400380b:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
8400380f:	75 26                	jne    84003837 <_printf_i+0x2ad>
84003811:	8b 45 0c             	mov    0xc(%ebp),%eax
84003814:	8b 00                	mov    (%eax),%eax
84003816:	83 e0 01             	and    $0x1,%eax
84003819:	85 c0                	test   %eax,%eax
8400381b:	74 1a                	je     84003837 <_printf_i+0x2ad>
8400381d:	8b 45 0c             	mov    0xc(%ebp),%eax
84003820:	8b 50 04             	mov    0x4(%eax),%edx
84003823:	8b 45 0c             	mov    0xc(%ebp),%eax
84003826:	8b 40 10             	mov    0x10(%eax),%eax
84003829:	39 c2                	cmp    %eax,%edx
8400382b:	7f 0a                	jg     84003837 <_printf_i+0x2ad>
8400382d:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
84003831:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003834:	c6 00 30             	movb   $0x30,(%eax)
84003837:	8b 45 0c             	mov    0xc(%ebp),%eax
8400383a:	83 c0 1b             	add    $0x1b,%eax
8400383d:	83 c0 28             	add    $0x28,%eax
84003840:	2b 45 ec             	sub    -0x14(%ebp),%eax
84003843:	89 c2                	mov    %eax,%edx
84003845:	8b 45 0c             	mov    0xc(%ebp),%eax
84003848:	89 50 10             	mov    %edx,0x10(%eax)
8400384b:	e9 e2 00 00 00       	jmp    84003932 <_printf_i+0x3a8>
84003850:	8b 45 0c             	mov    0xc(%ebp),%eax
84003853:	8b 00                	mov    (%eax),%eax
84003855:	25 80 00 00 00       	and    $0x80,%eax
8400385a:	85 c0                	test   %eax,%eax
8400385c:	74 19                	je     84003877 <_printf_i+0x2ed>
8400385e:	8b 45 18             	mov    0x18(%ebp),%eax
84003861:	8b 00                	mov    (%eax),%eax
84003863:	8d 48 04             	lea    0x4(%eax),%ecx
84003866:	8b 55 18             	mov    0x18(%ebp),%edx
84003869:	89 0a                	mov    %ecx,(%edx)
8400386b:	8b 00                	mov    (%eax),%eax
8400386d:	8b 55 0c             	mov    0xc(%ebp),%edx
84003870:	8b 52 14             	mov    0x14(%edx),%edx
84003873:	89 10                	mov    %edx,(%eax)
84003875:	eb 3f                	jmp    840038b6 <_printf_i+0x32c>
84003877:	8b 45 0c             	mov    0xc(%ebp),%eax
8400387a:	8b 00                	mov    (%eax),%eax
8400387c:	83 e0 40             	and    $0x40,%eax
8400387f:	85 c0                	test   %eax,%eax
84003881:	74 1c                	je     8400389f <_printf_i+0x315>
84003883:	8b 45 0c             	mov    0xc(%ebp),%eax
84003886:	8b 58 14             	mov    0x14(%eax),%ebx
84003889:	8b 45 18             	mov    0x18(%ebp),%eax
8400388c:	8b 00                	mov    (%eax),%eax
8400388e:	8d 48 04             	lea    0x4(%eax),%ecx
84003891:	8b 55 18             	mov    0x18(%ebp),%edx
84003894:	89 0a                	mov    %ecx,(%edx)
84003896:	8b 00                	mov    (%eax),%eax
84003898:	89 da                	mov    %ebx,%edx
8400389a:	66 89 10             	mov    %dx,(%eax)
8400389d:	eb 17                	jmp    840038b6 <_printf_i+0x32c>
8400389f:	8b 45 18             	mov    0x18(%ebp),%eax
840038a2:	8b 00                	mov    (%eax),%eax
840038a4:	8d 48 04             	lea    0x4(%eax),%ecx
840038a7:	8b 55 18             	mov    0x18(%ebp),%edx
840038aa:	89 0a                	mov    %ecx,(%edx)
840038ac:	8b 00                	mov    (%eax),%eax
840038ae:	8b 55 0c             	mov    0xc(%ebp),%edx
840038b1:	8b 52 14             	mov    0x14(%edx),%edx
840038b4:	89 10                	mov    %edx,(%eax)
840038b6:	8b 45 0c             	mov    0xc(%ebp),%eax
840038b9:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
840038c0:	eb 70                	jmp    84003932 <_printf_i+0x3a8>
840038c2:	8b 45 18             	mov    0x18(%ebp),%eax
840038c5:	8b 00                	mov    (%eax),%eax
840038c7:	8d 48 04             	lea    0x4(%eax),%ecx
840038ca:	8b 55 18             	mov    0x18(%ebp),%edx
840038cd:	89 0a                	mov    %ecx,(%edx)
840038cf:	8b 00                	mov    (%eax),%eax
840038d1:	89 45 ec             	mov    %eax,-0x14(%ebp)
840038d4:	8b 45 0c             	mov    0xc(%ebp),%eax
840038d7:	8b 40 04             	mov    0x4(%eax),%eax
840038da:	83 ec 04             	sub    $0x4,%esp
840038dd:	50                   	push   %eax
840038de:	6a 00                	push   $0x0
840038e0:	ff 75 ec             	pushl  -0x14(%ebp)
840038e3:	e8 f8 0d 00 00       	call   840046e0 <memchr>
840038e8:	83 c4 10             	add    $0x10,%esp
840038eb:	89 45 e0             	mov    %eax,-0x20(%ebp)
840038ee:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
840038f2:	74 0e                	je     84003902 <_printf_i+0x378>
840038f4:	8b 45 e0             	mov    -0x20(%ebp),%eax
840038f7:	2b 45 ec             	sub    -0x14(%ebp),%eax
840038fa:	89 c2                	mov    %eax,%edx
840038fc:	8b 45 0c             	mov    0xc(%ebp),%eax
840038ff:	89 50 04             	mov    %edx,0x4(%eax)
84003902:	8b 45 0c             	mov    0xc(%ebp),%eax
84003905:	8b 50 04             	mov    0x4(%eax),%edx
84003908:	8b 45 0c             	mov    0xc(%ebp),%eax
8400390b:	89 50 10             	mov    %edx,0x10(%eax)
8400390e:	eb 1a                	jmp    8400392a <_printf_i+0x3a0>
84003910:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
84003914:	8b 45 0c             	mov    0xc(%ebp),%eax
84003917:	0f b6 50 18          	movzbl 0x18(%eax),%edx
8400391b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8400391e:	88 10                	mov    %dl,(%eax)
84003920:	8b 45 0c             	mov    0xc(%ebp),%eax
84003923:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8400392a:	8b 45 0c             	mov    0xc(%ebp),%eax
8400392d:	c6 40 43 00          	movb   $0x0,0x43(%eax)
84003931:	90                   	nop
84003932:	83 ec 0c             	sub    $0xc,%esp
84003935:	ff 75 14             	pushl  0x14(%ebp)
84003938:	ff 75 10             	pushl  0x10(%ebp)
8400393b:	8d 45 d8             	lea    -0x28(%ebp),%eax
8400393e:	50                   	push   %eax
8400393f:	ff 75 0c             	pushl  0xc(%ebp)
84003942:	ff 75 08             	pushl  0x8(%ebp)
84003945:	e8 a5 fa ff ff       	call   840033ef <_printf_common>
8400394a:	83 c4 20             	add    $0x20,%esp
8400394d:	89 45 dc             	mov    %eax,-0x24(%ebp)
84003950:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
84003954:	74 72                	je     840039c8 <_printf_i+0x43e>
84003956:	8b 45 0c             	mov    0xc(%ebp),%eax
84003959:	8b 40 10             	mov    0x10(%eax),%eax
8400395c:	50                   	push   %eax
8400395d:	ff 75 ec             	pushl  -0x14(%ebp)
84003960:	ff 75 10             	pushl  0x10(%ebp)
84003963:	ff 75 08             	pushl  0x8(%ebp)
84003966:	8b 45 14             	mov    0x14(%ebp),%eax
84003969:	ff d0                	call   *%eax
8400396b:	83 c4 10             	add    $0x10,%esp
8400396e:	83 f8 ff             	cmp    $0xffffffff,%eax
84003971:	74 58                	je     840039cb <_printf_i+0x441>
84003973:	8b 45 0c             	mov    0xc(%ebp),%eax
84003976:	8b 00                	mov    (%eax),%eax
84003978:	83 e0 02             	and    $0x2,%eax
8400397b:	85 c0                	test   %eax,%eax
8400397d:	74 39                	je     840039b8 <_printf_i+0x42e>
8400397f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
84003986:	eb 20                	jmp    840039a8 <_printf_i+0x41e>
84003988:	8b 45 0c             	mov    0xc(%ebp),%eax
8400398b:	83 c0 19             	add    $0x19,%eax
8400398e:	6a 01                	push   $0x1
84003990:	50                   	push   %eax
84003991:	ff 75 10             	pushl  0x10(%ebp)
84003994:	ff 75 08             	pushl  0x8(%ebp)
84003997:	8b 45 14             	mov    0x14(%ebp),%eax
8400399a:	ff d0                	call   *%eax
8400399c:	83 c4 10             	add    $0x10,%esp
8400399f:	83 f8 ff             	cmp    $0xffffffff,%eax
840039a2:	74 2a                	je     840039ce <_printf_i+0x444>
840039a4:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
840039a8:	8b 45 0c             	mov    0xc(%ebp),%eax
840039ab:	8b 40 0c             	mov    0xc(%eax),%eax
840039ae:	8b 55 d8             	mov    -0x28(%ebp),%edx
840039b1:	29 d0                	sub    %edx,%eax
840039b3:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
840039b6:	7c d0                	jl     84003988 <_printf_i+0x3fe>
840039b8:	8b 45 0c             	mov    0xc(%ebp),%eax
840039bb:	8b 50 0c             	mov    0xc(%eax),%edx
840039be:	8b 45 d8             	mov    -0x28(%ebp),%eax
840039c1:	39 c2                	cmp    %eax,%edx
840039c3:	0f 4d c2             	cmovge %edx,%eax
840039c6:	eb 0c                	jmp    840039d4 <_printf_i+0x44a>
840039c8:	90                   	nop
840039c9:	eb 04                	jmp    840039cf <_printf_i+0x445>
840039cb:	90                   	nop
840039cc:	eb 01                	jmp    840039cf <_printf_i+0x445>
840039ce:	90                   	nop
840039cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840039d4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
840039d7:	c9                   	leave  
840039d8:	c3                   	ret    

840039d9 <_read_r>:
840039d9:	55                   	push   %ebp
840039da:	89 e5                	mov    %esp,%ebp
840039dc:	83 ec 18             	sub    $0x18,%esp
840039df:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
840039e6:	00 00 00 
840039e9:	83 ec 04             	sub    $0x4,%esp
840039ec:	ff 75 14             	pushl  0x14(%ebp)
840039ef:	ff 75 10             	pushl  0x10(%ebp)
840039f2:	ff 75 0c             	pushl  0xc(%ebp)
840039f5:	e8 dc c7 ff ff       	call   840001d6 <read>
840039fa:	83 c4 10             	add    $0x10,%esp
840039fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003a00:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84003a04:	75 14                	jne    84003a1a <_read_r+0x41>
84003a06:	a1 f0 63 00 84       	mov    0x840063f0,%eax
84003a0b:	85 c0                	test   %eax,%eax
84003a0d:	74 0b                	je     84003a1a <_read_r+0x41>
84003a0f:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
84003a15:	8b 45 08             	mov    0x8(%ebp),%eax
84003a18:	89 10                	mov    %edx,(%eax)
84003a1a:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003a1d:	c9                   	leave  
84003a1e:	c3                   	ret    

84003a1f <cleanup_glue>:
84003a1f:	55                   	push   %ebp
84003a20:	89 e5                	mov    %esp,%ebp
84003a22:	83 ec 08             	sub    $0x8,%esp
84003a25:	8b 45 0c             	mov    0xc(%ebp),%eax
84003a28:	8b 00                	mov    (%eax),%eax
84003a2a:	85 c0                	test   %eax,%eax
84003a2c:	74 14                	je     84003a42 <cleanup_glue+0x23>
84003a2e:	8b 45 0c             	mov    0xc(%ebp),%eax
84003a31:	8b 00                	mov    (%eax),%eax
84003a33:	83 ec 08             	sub    $0x8,%esp
84003a36:	50                   	push   %eax
84003a37:	ff 75 08             	pushl  0x8(%ebp)
84003a3a:	e8 e0 ff ff ff       	call   84003a1f <cleanup_glue>
84003a3f:	83 c4 10             	add    $0x10,%esp
84003a42:	83 ec 08             	sub    $0x8,%esp
84003a45:	ff 75 0c             	pushl  0xc(%ebp)
84003a48:	ff 75 08             	pushl  0x8(%ebp)
84003a4b:	e8 b5 d8 ff ff       	call   84001305 <_free_r>
84003a50:	83 c4 10             	add    $0x10,%esp
84003a53:	90                   	nop
84003a54:	c9                   	leave  
84003a55:	c3                   	ret    

84003a56 <_reclaim_reent>:
84003a56:	55                   	push   %ebp
84003a57:	89 e5                	mov    %esp,%ebp
84003a59:	83 ec 28             	sub    $0x28,%esp
84003a5c:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84003a61:	39 45 08             	cmp    %eax,0x8(%ebp)
84003a64:	0f 84 49 01 00 00    	je     84003bb3 <_reclaim_reent+0x15d>
84003a6a:	8b 45 08             	mov    0x8(%ebp),%eax
84003a6d:	8b 40 4c             	mov    0x4c(%eax),%eax
84003a70:	85 c0                	test   %eax,%eax
84003a72:	74 64                	je     84003ad8 <_reclaim_reent+0x82>
84003a74:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003a7b:	eb 3e                	jmp    84003abb <_reclaim_reent+0x65>
84003a7d:	8b 45 08             	mov    0x8(%ebp),%eax
84003a80:	8b 50 4c             	mov    0x4c(%eax),%edx
84003a83:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003a86:	c1 e0 02             	shl    $0x2,%eax
84003a89:	01 d0                	add    %edx,%eax
84003a8b:	8b 00                	mov    (%eax),%eax
84003a8d:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003a90:	eb 1f                	jmp    84003ab1 <_reclaim_reent+0x5b>
84003a92:	8b 45 f0             	mov    -0x10(%ebp),%eax
84003a95:	89 45 e8             	mov    %eax,-0x18(%ebp)
84003a98:	8b 45 f0             	mov    -0x10(%ebp),%eax
84003a9b:	8b 00                	mov    (%eax),%eax
84003a9d:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003aa0:	83 ec 08             	sub    $0x8,%esp
84003aa3:	ff 75 e8             	pushl  -0x18(%ebp)
84003aa6:	ff 75 08             	pushl  0x8(%ebp)
84003aa9:	e8 57 d8 ff ff       	call   84001305 <_free_r>
84003aae:	83 c4 10             	add    $0x10,%esp
84003ab1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84003ab5:	75 db                	jne    84003a92 <_reclaim_reent+0x3c>
84003ab7:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84003abb:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003abe:	83 f8 1f             	cmp    $0x1f,%eax
84003ac1:	76 ba                	jbe    84003a7d <_reclaim_reent+0x27>
84003ac3:	8b 45 08             	mov    0x8(%ebp),%eax
84003ac6:	8b 40 4c             	mov    0x4c(%eax),%eax
84003ac9:	83 ec 08             	sub    $0x8,%esp
84003acc:	50                   	push   %eax
84003acd:	ff 75 08             	pushl  0x8(%ebp)
84003ad0:	e8 30 d8 ff ff       	call   84001305 <_free_r>
84003ad5:	83 c4 10             	add    $0x10,%esp
84003ad8:	8b 45 08             	mov    0x8(%ebp),%eax
84003adb:	8b 40 40             	mov    0x40(%eax),%eax
84003ade:	85 c0                	test   %eax,%eax
84003ae0:	74 15                	je     84003af7 <_reclaim_reent+0xa1>
84003ae2:	8b 45 08             	mov    0x8(%ebp),%eax
84003ae5:	8b 40 40             	mov    0x40(%eax),%eax
84003ae8:	83 ec 08             	sub    $0x8,%esp
84003aeb:	50                   	push   %eax
84003aec:	ff 75 08             	pushl  0x8(%ebp)
84003aef:	e8 11 d8 ff ff       	call   84001305 <_free_r>
84003af4:	83 c4 10             	add    $0x10,%esp
84003af7:	8b 45 08             	mov    0x8(%ebp),%eax
84003afa:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b00:	85 c0                	test   %eax,%eax
84003b02:	74 50                	je     84003b54 <_reclaim_reent+0xfe>
84003b04:	8b 45 08             	mov    0x8(%ebp),%eax
84003b07:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b0d:	8b 55 08             	mov    0x8(%ebp),%edx
84003b10:	81 c2 4c 01 00 00    	add    $0x14c,%edx
84003b16:	39 d0                	cmp    %edx,%eax
84003b18:	74 3a                	je     84003b54 <_reclaim_reent+0xfe>
84003b1a:	8b 45 08             	mov    0x8(%ebp),%eax
84003b1d:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
84003b23:	89 45 ec             	mov    %eax,-0x14(%ebp)
84003b26:	eb 1f                	jmp    84003b47 <_reclaim_reent+0xf1>
84003b28:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003b2b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84003b2e:	8b 45 ec             	mov    -0x14(%ebp),%eax
84003b31:	8b 00                	mov    (%eax),%eax
84003b33:	89 45 ec             	mov    %eax,-0x14(%ebp)
84003b36:	83 ec 08             	sub    $0x8,%esp
84003b39:	ff 75 e4             	pushl  -0x1c(%ebp)
84003b3c:	ff 75 08             	pushl  0x8(%ebp)
84003b3f:	e8 c1 d7 ff ff       	call   84001305 <_free_r>
84003b44:	83 c4 10             	add    $0x10,%esp
84003b47:	8b 45 08             	mov    0x8(%ebp),%eax
84003b4a:	05 4c 01 00 00       	add    $0x14c,%eax
84003b4f:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84003b52:	75 d4                	jne    84003b28 <_reclaim_reent+0xd2>
84003b54:	8b 45 08             	mov    0x8(%ebp),%eax
84003b57:	8b 40 54             	mov    0x54(%eax),%eax
84003b5a:	85 c0                	test   %eax,%eax
84003b5c:	74 15                	je     84003b73 <_reclaim_reent+0x11d>
84003b5e:	8b 45 08             	mov    0x8(%ebp),%eax
84003b61:	8b 40 54             	mov    0x54(%eax),%eax
84003b64:	83 ec 08             	sub    $0x8,%esp
84003b67:	50                   	push   %eax
84003b68:	ff 75 08             	pushl  0x8(%ebp)
84003b6b:	e8 95 d7 ff ff       	call   84001305 <_free_r>
84003b70:	83 c4 10             	add    $0x10,%esp
84003b73:	8b 45 08             	mov    0x8(%ebp),%eax
84003b76:	8b 40 38             	mov    0x38(%eax),%eax
84003b79:	85 c0                	test   %eax,%eax
84003b7b:	74 36                	je     84003bb3 <_reclaim_reent+0x15d>
84003b7d:	8b 45 08             	mov    0x8(%ebp),%eax
84003b80:	8b 40 3c             	mov    0x3c(%eax),%eax
84003b83:	83 ec 0c             	sub    $0xc,%esp
84003b86:	ff 75 08             	pushl  0x8(%ebp)
84003b89:	ff d0                	call   *%eax
84003b8b:	83 c4 10             	add    $0x10,%esp
84003b8e:	8b 45 08             	mov    0x8(%ebp),%eax
84003b91:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
84003b97:	85 c0                	test   %eax,%eax
84003b99:	74 18                	je     84003bb3 <_reclaim_reent+0x15d>
84003b9b:	8b 45 08             	mov    0x8(%ebp),%eax
84003b9e:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
84003ba4:	83 ec 08             	sub    $0x8,%esp
84003ba7:	50                   	push   %eax
84003ba8:	ff 75 08             	pushl  0x8(%ebp)
84003bab:	e8 6f fe ff ff       	call   84003a1f <cleanup_glue>
84003bb0:	83 c4 10             	add    $0x10,%esp
84003bb3:	90                   	nop
84003bb4:	c9                   	leave  
84003bb5:	c3                   	ret    

84003bb6 <__srget_r>:
84003bb6:	55                   	push   %ebp
84003bb7:	89 e5                	mov    %esp,%ebp
84003bb9:	53                   	push   %ebx
84003bba:	83 ec 14             	sub    $0x14,%esp
84003bbd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84003bc0:	8b 45 08             	mov    0x8(%ebp),%eax
84003bc3:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003bc6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003bca:	74 18                	je     84003be4 <__srget_r+0x2e>
84003bcc:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003bcf:	8b 40 38             	mov    0x38(%eax),%eax
84003bd2:	85 c0                	test   %eax,%eax
84003bd4:	75 0e                	jne    84003be4 <__srget_r+0x2e>
84003bd6:	83 ec 0c             	sub    $0xc,%esp
84003bd9:	ff 75 f4             	pushl  -0xc(%ebp)
84003bdc:	e8 17 d6 ff ff       	call   840011f8 <__sinit>
84003be1:	83 c4 10             	add    $0x10,%esp
84003be4:	83 ec 08             	sub    $0x8,%esp
84003be7:	53                   	push   %ebx
84003be8:	ff 75 08             	pushl  0x8(%ebp)
84003beb:	e8 64 15 00 00       	call   84005154 <__srefill_r>
84003bf0:	83 c4 10             	add    $0x10,%esp
84003bf3:	85 c0                	test   %eax,%eax
84003bf5:	75 18                	jne    84003c0f <__srget_r+0x59>
84003bf7:	8b 43 04             	mov    0x4(%ebx),%eax
84003bfa:	83 e8 01             	sub    $0x1,%eax
84003bfd:	89 43 04             	mov    %eax,0x4(%ebx)
84003c00:	8b 03                	mov    (%ebx),%eax
84003c02:	8d 50 01             	lea    0x1(%eax),%edx
84003c05:	89 13                	mov    %edx,(%ebx)
84003c07:	0f b6 00             	movzbl (%eax),%eax
84003c0a:	0f b6 c0             	movzbl %al,%eax
84003c0d:	eb 05                	jmp    84003c14 <__srget_r+0x5e>
84003c0f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003c14:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003c17:	c9                   	leave  
84003c18:	c3                   	ret    

84003c19 <__srget>:
84003c19:	55                   	push   %ebp
84003c1a:	89 e5                	mov    %esp,%ebp
84003c1c:	83 ec 08             	sub    $0x8,%esp
84003c1f:	8b 55 08             	mov    0x8(%ebp),%edx
84003c22:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84003c27:	83 ec 08             	sub    $0x8,%esp
84003c2a:	52                   	push   %edx
84003c2b:	50                   	push   %eax
84003c2c:	e8 85 ff ff ff       	call   84003bb6 <__srget_r>
84003c31:	83 c4 10             	add    $0x10,%esp
84003c34:	c9                   	leave  
84003c35:	c3                   	ret    

84003c36 <__swbuf_r>:
84003c36:	55                   	push   %ebp
84003c37:	89 e5                	mov    %esp,%ebp
84003c39:	57                   	push   %edi
84003c3a:	56                   	push   %esi
84003c3b:	53                   	push   %ebx
84003c3c:	83 ec 1c             	sub    $0x1c,%esp
84003c3f:	8b 7d 0c             	mov    0xc(%ebp),%edi
84003c42:	8b 5d 10             	mov    0x10(%ebp),%ebx
84003c45:	8b 45 08             	mov    0x8(%ebp),%eax
84003c48:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84003c4b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84003c4f:	74 18                	je     84003c69 <__swbuf_r+0x33>
84003c51:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84003c54:	8b 40 38             	mov    0x38(%eax),%eax
84003c57:	85 c0                	test   %eax,%eax
84003c59:	75 0e                	jne    84003c69 <__swbuf_r+0x33>
84003c5b:	83 ec 0c             	sub    $0xc,%esp
84003c5e:	ff 75 e4             	pushl  -0x1c(%ebp)
84003c61:	e8 92 d5 ff ff       	call   840011f8 <__sinit>
84003c66:	83 c4 10             	add    $0x10,%esp
84003c69:	8b 43 18             	mov    0x18(%ebx),%eax
84003c6c:	89 43 08             	mov    %eax,0x8(%ebx)
84003c6f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003c73:	98                   	cwtl   
84003c74:	83 e0 08             	and    $0x8,%eax
84003c77:	85 c0                	test   %eax,%eax
84003c79:	74 07                	je     84003c82 <__swbuf_r+0x4c>
84003c7b:	8b 43 10             	mov    0x10(%ebx),%eax
84003c7e:	85 c0                	test   %eax,%eax
84003c80:	75 1d                	jne    84003c9f <__swbuf_r+0x69>
84003c82:	83 ec 08             	sub    $0x8,%esp
84003c85:	53                   	push   %ebx
84003c86:	ff 75 08             	pushl  0x8(%ebp)
84003c89:	e8 db 00 00 00       	call   84003d69 <__swsetup_r>
84003c8e:	83 c4 10             	add    $0x10,%esp
84003c91:	85 c0                	test   %eax,%eax
84003c93:	74 0a                	je     84003c9f <__swbuf_r+0x69>
84003c95:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003c9a:	e9 a1 00 00 00       	jmp    84003d40 <__swbuf_r+0x10a>
84003c9f:	89 f8                	mov    %edi,%eax
84003ca1:	0f b6 f8             	movzbl %al,%edi
84003ca4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003ca8:	98                   	cwtl   
84003ca9:	25 00 20 00 00       	and    $0x2000,%eax
84003cae:	85 c0                	test   %eax,%eax
84003cb0:	75 14                	jne    84003cc6 <__swbuf_r+0x90>
84003cb2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003cb6:	80 cc 20             	or     $0x20,%ah
84003cb9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003cbd:	8b 43 64             	mov    0x64(%ebx),%eax
84003cc0:	80 e4 df             	and    $0xdf,%ah
84003cc3:	89 43 64             	mov    %eax,0x64(%ebx)
84003cc6:	8b 03                	mov    (%ebx),%eax
84003cc8:	8b 53 10             	mov    0x10(%ebx),%edx
84003ccb:	29 d0                	sub    %edx,%eax
84003ccd:	89 c6                	mov    %eax,%esi
84003ccf:	8b 43 14             	mov    0x14(%ebx),%eax
84003cd2:	39 c6                	cmp    %eax,%esi
84003cd4:	7c 1f                	jl     84003cf5 <__swbuf_r+0xbf>
84003cd6:	83 ec 08             	sub    $0x8,%esp
84003cd9:	53                   	push   %ebx
84003cda:	ff 75 08             	pushl  0x8(%ebp)
84003cdd:	e8 90 d1 ff ff       	call   84000e72 <_fflush_r>
84003ce2:	83 c4 10             	add    $0x10,%esp
84003ce5:	85 c0                	test   %eax,%eax
84003ce7:	74 07                	je     84003cf0 <__swbuf_r+0xba>
84003ce9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003cee:	eb 50                	jmp    84003d40 <__swbuf_r+0x10a>
84003cf0:	be 00 00 00 00       	mov    $0x0,%esi
84003cf5:	8b 43 08             	mov    0x8(%ebx),%eax
84003cf8:	83 e8 01             	sub    $0x1,%eax
84003cfb:	89 43 08             	mov    %eax,0x8(%ebx)
84003cfe:	8b 03                	mov    (%ebx),%eax
84003d00:	8d 50 01             	lea    0x1(%eax),%edx
84003d03:	89 13                	mov    %edx,(%ebx)
84003d05:	89 fa                	mov    %edi,%edx
84003d07:	88 10                	mov    %dl,(%eax)
84003d09:	83 c6 01             	add    $0x1,%esi
84003d0c:	8b 43 14             	mov    0x14(%ebx),%eax
84003d0f:	39 c6                	cmp    %eax,%esi
84003d11:	74 11                	je     84003d24 <__swbuf_r+0xee>
84003d13:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003d17:	98                   	cwtl   
84003d18:	83 e0 01             	and    $0x1,%eax
84003d1b:	85 c0                	test   %eax,%eax
84003d1d:	74 1f                	je     84003d3e <__swbuf_r+0x108>
84003d1f:	83 ff 0a             	cmp    $0xa,%edi
84003d22:	75 1a                	jne    84003d3e <__swbuf_r+0x108>
84003d24:	83 ec 08             	sub    $0x8,%esp
84003d27:	53                   	push   %ebx
84003d28:	ff 75 08             	pushl  0x8(%ebp)
84003d2b:	e8 42 d1 ff ff       	call   84000e72 <_fflush_r>
84003d30:	83 c4 10             	add    $0x10,%esp
84003d33:	85 c0                	test   %eax,%eax
84003d35:	74 07                	je     84003d3e <__swbuf_r+0x108>
84003d37:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003d3c:	eb 02                	jmp    84003d40 <__swbuf_r+0x10a>
84003d3e:	89 f8                	mov    %edi,%eax
84003d40:	8d 65 f4             	lea    -0xc(%ebp),%esp
84003d43:	5b                   	pop    %ebx
84003d44:	5e                   	pop    %esi
84003d45:	5f                   	pop    %edi
84003d46:	5d                   	pop    %ebp
84003d47:	c3                   	ret    

84003d48 <__swbuf>:
84003d48:	55                   	push   %ebp
84003d49:	89 e5                	mov    %esp,%ebp
84003d4b:	83 ec 08             	sub    $0x8,%esp
84003d4e:	8b 55 08             	mov    0x8(%ebp),%edx
84003d51:	8b 4d 0c             	mov    0xc(%ebp),%ecx
84003d54:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84003d59:	83 ec 04             	sub    $0x4,%esp
84003d5c:	51                   	push   %ecx
84003d5d:	52                   	push   %edx
84003d5e:	50                   	push   %eax
84003d5f:	e8 d2 fe ff ff       	call   84003c36 <__swbuf_r>
84003d64:	83 c4 10             	add    $0x10,%esp
84003d67:	c9                   	leave  
84003d68:	c3                   	ret    

84003d69 <__swsetup_r>:
84003d69:	55                   	push   %ebp
84003d6a:	89 e5                	mov    %esp,%ebp
84003d6c:	53                   	push   %ebx
84003d6d:	83 ec 14             	sub    $0x14,%esp
84003d70:	8b 5d 0c             	mov    0xc(%ebp),%ebx
84003d73:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84003d78:	89 45 f4             	mov    %eax,-0xc(%ebp)
84003d7b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84003d7f:	74 18                	je     84003d99 <__swsetup_r+0x30>
84003d81:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003d84:	8b 40 38             	mov    0x38(%eax),%eax
84003d87:	85 c0                	test   %eax,%eax
84003d89:	75 0e                	jne    84003d99 <__swsetup_r+0x30>
84003d8b:	83 ec 0c             	sub    $0xc,%esp
84003d8e:	ff 75 f4             	pushl  -0xc(%ebp)
84003d91:	e8 62 d4 ff ff       	call   840011f8 <__sinit>
84003d96:	83 c4 10             	add    $0x10,%esp
84003d99:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003d9d:	98                   	cwtl   
84003d9e:	83 e0 08             	and    $0x8,%eax
84003da1:	85 c0                	test   %eax,%eax
84003da3:	0f 85 82 00 00 00    	jne    84003e2b <__swsetup_r+0xc2>
84003da9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003dad:	98                   	cwtl   
84003dae:	83 e0 10             	and    $0x10,%eax
84003db1:	85 c0                	test   %eax,%eax
84003db3:	75 1e                	jne    84003dd3 <__swsetup_r+0x6a>
84003db5:	8b 45 08             	mov    0x8(%ebp),%eax
84003db8:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
84003dbe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003dc2:	83 c8 40             	or     $0x40,%eax
84003dc5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003dc9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003dce:	e9 ec 00 00 00       	jmp    84003ebf <__swsetup_r+0x156>
84003dd3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003dd7:	98                   	cwtl   
84003dd8:	83 e0 04             	and    $0x4,%eax
84003ddb:	85 c0                	test   %eax,%eax
84003ddd:	74 41                	je     84003e20 <__swsetup_r+0xb7>
84003ddf:	8b 43 30             	mov    0x30(%ebx),%eax
84003de2:	85 c0                	test   %eax,%eax
84003de4:	74 23                	je     84003e09 <__swsetup_r+0xa0>
84003de6:	8b 53 30             	mov    0x30(%ebx),%edx
84003de9:	8d 43 40             	lea    0x40(%ebx),%eax
84003dec:	39 c2                	cmp    %eax,%edx
84003dee:	74 12                	je     84003e02 <__swsetup_r+0x99>
84003df0:	8b 43 30             	mov    0x30(%ebx),%eax
84003df3:	83 ec 08             	sub    $0x8,%esp
84003df6:	50                   	push   %eax
84003df7:	ff 75 08             	pushl  0x8(%ebp)
84003dfa:	e8 06 d5 ff ff       	call   84001305 <_free_r>
84003dff:	83 c4 10             	add    $0x10,%esp
84003e02:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84003e09:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e0d:	83 e0 db             	and    $0xffffffdb,%eax
84003e10:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003e14:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84003e1b:	8b 43 10             	mov    0x10(%ebx),%eax
84003e1e:	89 03                	mov    %eax,(%ebx)
84003e20:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e24:	83 c8 08             	or     $0x8,%eax
84003e27:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003e2b:	8b 43 10             	mov    0x10(%ebx),%eax
84003e2e:	85 c0                	test   %eax,%eax
84003e30:	75 2b                	jne    84003e5d <__swsetup_r+0xf4>
84003e32:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e36:	98                   	cwtl   
84003e37:	25 00 02 00 00       	and    $0x200,%eax
84003e3c:	85 c0                	test   %eax,%eax
84003e3e:	74 0e                	je     84003e4e <__swsetup_r+0xe5>
84003e40:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e44:	98                   	cwtl   
84003e45:	25 80 00 00 00       	and    $0x80,%eax
84003e4a:	85 c0                	test   %eax,%eax
84003e4c:	74 0f                	je     84003e5d <__swsetup_r+0xf4>
84003e4e:	83 ec 08             	sub    $0x8,%esp
84003e51:	53                   	push   %ebx
84003e52:	ff 75 08             	pushl  0x8(%ebp)
84003e55:	e8 b0 ee ff ff       	call   84002d0a <__smakebuf_r>
84003e5a:	83 c4 10             	add    $0x10,%esp
84003e5d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e61:	98                   	cwtl   
84003e62:	83 e0 01             	and    $0x1,%eax
84003e65:	85 c0                	test   %eax,%eax
84003e67:	74 11                	je     84003e7a <__swsetup_r+0x111>
84003e69:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84003e70:	8b 43 14             	mov    0x14(%ebx),%eax
84003e73:	f7 d8                	neg    %eax
84003e75:	89 43 18             	mov    %eax,0x18(%ebx)
84003e78:	eb 19                	jmp    84003e93 <__swsetup_r+0x12a>
84003e7a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e7e:	98                   	cwtl   
84003e7f:	83 e0 02             	and    $0x2,%eax
84003e82:	85 c0                	test   %eax,%eax
84003e84:	75 05                	jne    84003e8b <__swsetup_r+0x122>
84003e86:	8b 43 14             	mov    0x14(%ebx),%eax
84003e89:	eb 05                	jmp    84003e90 <__swsetup_r+0x127>
84003e8b:	b8 00 00 00 00       	mov    $0x0,%eax
84003e90:	89 43 08             	mov    %eax,0x8(%ebx)
84003e93:	8b 43 10             	mov    0x10(%ebx),%eax
84003e96:	85 c0                	test   %eax,%eax
84003e98:	75 20                	jne    84003eba <__swsetup_r+0x151>
84003e9a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003e9e:	98                   	cwtl   
84003e9f:	25 80 00 00 00       	and    $0x80,%eax
84003ea4:	85 c0                	test   %eax,%eax
84003ea6:	74 12                	je     84003eba <__swsetup_r+0x151>
84003ea8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84003eac:	83 c8 40             	or     $0x40,%eax
84003eaf:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84003eb3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003eb8:	eb 05                	jmp    84003ebf <__swsetup_r+0x156>
84003eba:	b8 00 00 00 00       	mov    $0x0,%eax
84003ebf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
84003ec2:	c9                   	leave  
84003ec3:	c3                   	ret    

84003ec4 <__sputc_r>:
84003ec4:	55                   	push   %ebp
84003ec5:	89 e5                	mov    %esp,%ebp
84003ec7:	83 ec 08             	sub    $0x8,%esp
84003eca:	8b 45 10             	mov    0x10(%ebp),%eax
84003ecd:	8b 40 08             	mov    0x8(%eax),%eax
84003ed0:	8d 50 ff             	lea    -0x1(%eax),%edx
84003ed3:	8b 45 10             	mov    0x10(%ebp),%eax
84003ed6:	89 50 08             	mov    %edx,0x8(%eax)
84003ed9:	8b 45 10             	mov    0x10(%ebp),%eax
84003edc:	8b 40 08             	mov    0x8(%eax),%eax
84003edf:	85 c0                	test   %eax,%eax
84003ee1:	79 17                	jns    84003efa <__sputc_r+0x36>
84003ee3:	8b 45 10             	mov    0x10(%ebp),%eax
84003ee6:	8b 50 08             	mov    0x8(%eax),%edx
84003ee9:	8b 45 10             	mov    0x10(%ebp),%eax
84003eec:	8b 40 18             	mov    0x18(%eax),%eax
84003eef:	39 c2                	cmp    %eax,%edx
84003ef1:	7c 21                	jl     84003f14 <__sputc_r+0x50>
84003ef3:	8b 45 0c             	mov    0xc(%ebp),%eax
84003ef6:	3c 0a                	cmp    $0xa,%al
84003ef8:	74 1a                	je     84003f14 <__sputc_r+0x50>
84003efa:	8b 45 10             	mov    0x10(%ebp),%eax
84003efd:	8b 00                	mov    (%eax),%eax
84003eff:	8d 48 01             	lea    0x1(%eax),%ecx
84003f02:	8b 55 10             	mov    0x10(%ebp),%edx
84003f05:	89 0a                	mov    %ecx,(%edx)
84003f07:	8b 55 0c             	mov    0xc(%ebp),%edx
84003f0a:	88 10                	mov    %dl,(%eax)
84003f0c:	0f b6 00             	movzbl (%eax),%eax
84003f0f:	0f b6 c0             	movzbl %al,%eax
84003f12:	eb 14                	jmp    84003f28 <__sputc_r+0x64>
84003f14:	83 ec 04             	sub    $0x4,%esp
84003f17:	ff 75 10             	pushl  0x10(%ebp)
84003f1a:	ff 75 0c             	pushl  0xc(%ebp)
84003f1d:	ff 75 08             	pushl  0x8(%ebp)
84003f20:	e8 11 fd ff ff       	call   84003c36 <__swbuf_r>
84003f25:	83 c4 10             	add    $0x10,%esp
84003f28:	c9                   	leave  
84003f29:	c3                   	ret    

84003f2a <__fputwc>:
84003f2a:	55                   	push   %ebp
84003f2b:	89 e5                	mov    %esp,%ebp
84003f2d:	83 ec 18             	sub    $0x18,%esp
84003f30:	e8 d8 06 00 00       	call   8400460d <__locale_mb_cur_max>
84003f35:	83 f8 01             	cmp    $0x1,%eax
84003f38:	75 1e                	jne    84003f58 <__fputwc+0x2e>
84003f3a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84003f3e:	7e 18                	jle    84003f58 <__fputwc+0x2e>
84003f40:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
84003f47:	7f 0f                	jg     84003f58 <__fputwc+0x2e>
84003f49:	8b 45 0c             	mov    0xc(%ebp),%eax
84003f4c:	88 45 ef             	mov    %al,-0x11(%ebp)
84003f4f:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
84003f56:	eb 3c                	jmp    84003f94 <__fputwc+0x6a>
84003f58:	8b 45 10             	mov    0x10(%ebp),%eax
84003f5b:	83 c0 5c             	add    $0x5c,%eax
84003f5e:	50                   	push   %eax
84003f5f:	ff 75 0c             	pushl  0xc(%ebp)
84003f62:	8d 45 ef             	lea    -0x11(%ebp),%eax
84003f65:	50                   	push   %eax
84003f66:	ff 75 08             	pushl  0x8(%ebp)
84003f69:	e8 a0 14 00 00       	call   8400540e <_wcrtomb_r>
84003f6e:	83 c4 10             	add    $0x10,%esp
84003f71:	89 45 f0             	mov    %eax,-0x10(%ebp)
84003f74:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
84003f78:	75 1a                	jne    84003f94 <__fputwc+0x6a>
84003f7a:	8b 45 10             	mov    0x10(%ebp),%eax
84003f7d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84003f81:	83 c8 40             	or     $0x40,%eax
84003f84:	89 c2                	mov    %eax,%edx
84003f86:	8b 45 10             	mov    0x10(%ebp),%eax
84003f89:	66 89 50 0c          	mov    %dx,0xc(%eax)
84003f8d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003f92:	eb 44                	jmp    84003fd8 <__fputwc+0xae>
84003f94:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84003f9b:	eb 30                	jmp    84003fcd <__fputwc+0xa3>
84003f9d:	8d 55 ef             	lea    -0x11(%ebp),%edx
84003fa0:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003fa3:	01 d0                	add    %edx,%eax
84003fa5:	0f b6 00             	movzbl (%eax),%eax
84003fa8:	0f b6 c0             	movzbl %al,%eax
84003fab:	83 ec 04             	sub    $0x4,%esp
84003fae:	ff 75 10             	pushl  0x10(%ebp)
84003fb1:	50                   	push   %eax
84003fb2:	ff 75 08             	pushl  0x8(%ebp)
84003fb5:	e8 0a ff ff ff       	call   84003ec4 <__sputc_r>
84003fba:	83 c4 10             	add    $0x10,%esp
84003fbd:	83 f8 ff             	cmp    $0xffffffff,%eax
84003fc0:	75 07                	jne    84003fc9 <__fputwc+0x9f>
84003fc2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84003fc7:	eb 0f                	jmp    84003fd8 <__fputwc+0xae>
84003fc9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
84003fcd:	8b 45 f4             	mov    -0xc(%ebp),%eax
84003fd0:	3b 45 f0             	cmp    -0x10(%ebp),%eax
84003fd3:	72 c8                	jb     84003f9d <__fputwc+0x73>
84003fd5:	8b 45 0c             	mov    0xc(%ebp),%eax
84003fd8:	c9                   	leave  
84003fd9:	c3                   	ret    

84003fda <_fputwc_r>:
84003fda:	55                   	push   %ebp
84003fdb:	89 e5                	mov    %esp,%ebp
84003fdd:	83 ec 18             	sub    $0x18,%esp
84003fe0:	8b 45 10             	mov    0x10(%ebp),%eax
84003fe3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84003fe7:	98                   	cwtl   
84003fe8:	25 00 20 00 00       	and    $0x2000,%eax
84003fed:	85 c0                	test   %eax,%eax
84003fef:	75 24                	jne    84004015 <_fputwc_r+0x3b>
84003ff1:	8b 45 10             	mov    0x10(%ebp),%eax
84003ff4:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84003ff8:	80 cc 20             	or     $0x20,%ah
84003ffb:	89 c2                	mov    %eax,%edx
84003ffd:	8b 45 10             	mov    0x10(%ebp),%eax
84004000:	66 89 50 0c          	mov    %dx,0xc(%eax)
84004004:	8b 45 10             	mov    0x10(%ebp),%eax
84004007:	8b 40 64             	mov    0x64(%eax),%eax
8400400a:	80 cc 20             	or     $0x20,%ah
8400400d:	89 c2                	mov    %eax,%edx
8400400f:	8b 45 10             	mov    0x10(%ebp),%eax
84004012:	89 50 64             	mov    %edx,0x64(%eax)
84004015:	83 ec 04             	sub    $0x4,%esp
84004018:	ff 75 10             	pushl  0x10(%ebp)
8400401b:	ff 75 0c             	pushl  0xc(%ebp)
8400401e:	ff 75 08             	pushl  0x8(%ebp)
84004021:	e8 04 ff ff ff       	call   84003f2a <__fputwc>
84004026:	83 c4 10             	add    $0x10,%esp
84004029:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400402c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400402f:	c9                   	leave  
84004030:	c3                   	ret    

84004031 <fputwc>:
84004031:	55                   	push   %ebp
84004032:	89 e5                	mov    %esp,%ebp
84004034:	83 ec 18             	sub    $0x18,%esp
84004037:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
8400403c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400403f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004042:	89 45 f0             	mov    %eax,-0x10(%ebp)
84004045:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
84004049:	74 18                	je     84004063 <fputwc+0x32>
8400404b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400404e:	8b 40 38             	mov    0x38(%eax),%eax
84004051:	85 c0                	test   %eax,%eax
84004053:	75 0e                	jne    84004063 <fputwc+0x32>
84004055:	83 ec 0c             	sub    $0xc,%esp
84004058:	ff 75 f0             	pushl  -0x10(%ebp)
8400405b:	e8 98 d1 ff ff       	call   840011f8 <__sinit>
84004060:	83 c4 10             	add    $0x10,%esp
84004063:	83 ec 04             	sub    $0x4,%esp
84004066:	ff 75 0c             	pushl  0xc(%ebp)
84004069:	ff 75 08             	pushl  0x8(%ebp)
8400406c:	ff 75 f4             	pushl  -0xc(%ebp)
8400406f:	e8 66 ff ff ff       	call   84003fda <_fputwc_r>
84004074:	83 c4 10             	add    $0x10,%esp
84004077:	c9                   	leave  
84004078:	c3                   	ret    

84004079 <_fstat_r>:
84004079:	55                   	push   %ebp
8400407a:	89 e5                	mov    %esp,%ebp
8400407c:	83 ec 18             	sub    $0x18,%esp
8400407f:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
84004086:	00 00 00 
84004089:	83 ec 08             	sub    $0x8,%esp
8400408c:	ff 75 10             	pushl  0x10(%ebp)
8400408f:	ff 75 0c             	pushl  0xc(%ebp)
84004092:	e8 e7 c1 ff ff       	call   8400027e <fstat>
84004097:	83 c4 10             	add    $0x10,%esp
8400409a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400409d:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
840040a1:	75 14                	jne    840040b7 <_fstat_r+0x3e>
840040a3:	a1 f0 63 00 84       	mov    0x840063f0,%eax
840040a8:	85 c0                	test   %eax,%eax
840040aa:	74 0b                	je     840040b7 <_fstat_r+0x3e>
840040ac:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
840040b2:	8b 45 08             	mov    0x8(%ebp),%eax
840040b5:	89 10                	mov    %edx,(%eax)
840040b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
840040ba:	c9                   	leave  
840040bb:	c3                   	ret    

840040bc <__sfvwrite_r>:
840040bc:	55                   	push   %ebp
840040bd:	89 e5                	mov    %esp,%ebp
840040bf:	57                   	push   %edi
840040c0:	56                   	push   %esi
840040c1:	53                   	push   %ebx
840040c2:	83 ec 3c             	sub    $0x3c,%esp
840040c5:	8b 5d 0c             	mov    0xc(%ebp),%ebx
840040c8:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
840040cf:	8b 45 10             	mov    0x10(%ebp),%eax
840040d2:	8b 78 08             	mov    0x8(%eax),%edi
840040d5:	85 ff                	test   %edi,%edi
840040d7:	75 0a                	jne    840040e3 <__sfvwrite_r+0x27>
840040d9:	b8 00 00 00 00       	mov    $0x0,%eax
840040de:	e9 6f 04 00 00       	jmp    84004552 <__sfvwrite_r+0x496>
840040e3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840040e7:	98                   	cwtl   
840040e8:	83 e0 08             	and    $0x8,%eax
840040eb:	85 c0                	test   %eax,%eax
840040ed:	74 07                	je     840040f6 <__sfvwrite_r+0x3a>
840040ef:	8b 43 10             	mov    0x10(%ebx),%eax
840040f2:	85 c0                	test   %eax,%eax
840040f4:	75 1d                	jne    84004113 <__sfvwrite_r+0x57>
840040f6:	83 ec 08             	sub    $0x8,%esp
840040f9:	53                   	push   %ebx
840040fa:	ff 75 08             	pushl  0x8(%ebp)
840040fd:	e8 67 fc ff ff       	call   84003d69 <__swsetup_r>
84004102:	83 c4 10             	add    $0x10,%esp
84004105:	85 c0                	test   %eax,%eax
84004107:	74 0a                	je     84004113 <__sfvwrite_r+0x57>
84004109:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400410e:	e9 3f 04 00 00       	jmp    84004552 <__sfvwrite_r+0x496>
84004113:	8b 45 10             	mov    0x10(%ebp),%eax
84004116:	8b 00                	mov    (%eax),%eax
84004118:	89 45 c0             	mov    %eax,-0x40(%ebp)
8400411b:	bf 00 00 00 00       	mov    $0x0,%edi
84004120:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004124:	98                   	cwtl   
84004125:	83 e0 02             	and    $0x2,%eax
84004128:	85 c0                	test   %eax,%eax
8400412a:	74 68                	je     84004194 <__sfvwrite_r+0xd8>
8400412c:	eb 11                	jmp    8400413f <__sfvwrite_r+0x83>
8400412e:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004131:	8b 08                	mov    (%eax),%ecx
84004133:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
84004136:	8b 78 04             	mov    0x4(%eax),%edi
84004139:	83 c0 08             	add    $0x8,%eax
8400413c:	89 45 c0             	mov    %eax,-0x40(%ebp)
8400413f:	85 ff                	test   %edi,%edi
84004141:	74 eb                	je     8400412e <__sfvwrite_r+0x72>
84004143:	8b 4b 24             	mov    0x24(%ebx),%ecx
84004146:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
8400414b:	39 c7                	cmp    %eax,%edi
8400414d:	0f 46 c7             	cmovbe %edi,%eax
84004150:	89 c2                	mov    %eax,%edx
84004152:	8b 43 1c             	mov    0x1c(%ebx),%eax
84004155:	52                   	push   %edx
84004156:	ff 75 c4             	pushl  -0x3c(%ebp)
84004159:	50                   	push   %eax
8400415a:	ff 75 08             	pushl  0x8(%ebp)
8400415d:	ff d1                	call   *%ecx
8400415f:	83 c4 10             	add    $0x10,%esp
84004162:	89 c6                	mov    %eax,%esi
84004164:	85 f6                	test   %esi,%esi
84004166:	0f 8e cf 03 00 00    	jle    8400453b <__sfvwrite_r+0x47f>
8400416c:	89 f0                	mov    %esi,%eax
8400416e:	01 45 c4             	add    %eax,-0x3c(%ebp)
84004171:	89 f0                	mov    %esi,%eax
84004173:	29 c7                	sub    %eax,%edi
84004175:	8b 45 10             	mov    0x10(%ebp),%eax
84004178:	8b 40 08             	mov    0x8(%eax),%eax
8400417b:	89 f2                	mov    %esi,%edx
8400417d:	29 d0                	sub    %edx,%eax
8400417f:	8b 4d 10             	mov    0x10(%ebp),%ecx
84004182:	89 41 08             	mov    %eax,0x8(%ecx)
84004185:	8b 45 10             	mov    0x10(%ebp),%eax
84004188:	8b 40 08             	mov    0x8(%eax),%eax
8400418b:	85 c0                	test   %eax,%eax
8400418d:	75 b0                	jne    8400413f <__sfvwrite_r+0x83>
8400418f:	e9 a0 03 00 00       	jmp    84004534 <__sfvwrite_r+0x478>
84004194:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004198:	98                   	cwtl   
84004199:	83 e0 01             	and    $0x1,%eax
8400419c:	85 c0                	test   %eax,%eax
8400419e:	0f 85 44 02 00 00    	jne    840043e8 <__sfvwrite_r+0x32c>
840041a4:	eb 11                	jmp    840041b7 <__sfvwrite_r+0xfb>
840041a6:	8b 45 c0             	mov    -0x40(%ebp),%eax
840041a9:	8b 08                	mov    (%eax),%ecx
840041ab:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
840041ae:	8b 78 04             	mov    0x4(%eax),%edi
840041b1:	83 c0 08             	add    $0x8,%eax
840041b4:	89 45 c0             	mov    %eax,-0x40(%ebp)
840041b7:	85 ff                	test   %edi,%edi
840041b9:	74 eb                	je     840041a6 <__sfvwrite_r+0xea>
840041bb:	8b 73 08             	mov    0x8(%ebx),%esi
840041be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041c2:	98                   	cwtl   
840041c3:	25 00 02 00 00       	and    $0x200,%eax
840041c8:	85 c0                	test   %eax,%eax
840041ca:	0f 84 4f 01 00 00    	je     8400431f <__sfvwrite_r+0x263>
840041d0:	89 f0                	mov    %esi,%eax
840041d2:	39 c7                	cmp    %eax,%edi
840041d4:	0f 82 12 01 00 00    	jb     840042ec <__sfvwrite_r+0x230>
840041da:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840041de:	98                   	cwtl   
840041df:	25 80 04 00 00       	and    $0x480,%eax
840041e4:	85 c0                	test   %eax,%eax
840041e6:	0f 84 00 01 00 00    	je     840042ec <__sfvwrite_r+0x230>
840041ec:	8b 03                	mov    (%ebx),%eax
840041ee:	8b 53 10             	mov    0x10(%ebx),%edx
840041f1:	29 d0                	sub    %edx,%eax
840041f3:	89 45 d0             	mov    %eax,-0x30(%ebp)
840041f6:	8b 53 14             	mov    0x14(%ebx),%edx
840041f9:	89 d0                	mov    %edx,%eax
840041fb:	01 c0                	add    %eax,%eax
840041fd:	01 d0                	add    %edx,%eax
840041ff:	89 c2                	mov    %eax,%edx
84004201:	c1 ea 1f             	shr    $0x1f,%edx
84004204:	01 d0                	add    %edx,%eax
84004206:	d1 f8                	sar    %eax
84004208:	89 45 d8             	mov    %eax,-0x28(%ebp)
8400420b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400420e:	01 f8                	add    %edi,%eax
84004210:	8d 50 01             	lea    0x1(%eax),%edx
84004213:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004216:	39 c2                	cmp    %eax,%edx
84004218:	76 0b                	jbe    84004225 <__sfvwrite_r+0x169>
8400421a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8400421d:	01 f8                	add    %edi,%eax
8400421f:	83 c0 01             	add    $0x1,%eax
84004222:	89 45 d8             	mov    %eax,-0x28(%ebp)
84004225:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004229:	98                   	cwtl   
8400422a:	25 00 04 00 00       	and    $0x400,%eax
8400422f:	85 c0                	test   %eax,%eax
84004231:	74 4f                	je     84004282 <__sfvwrite_r+0x1c6>
84004233:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004236:	83 ec 08             	sub    $0x8,%esp
84004239:	50                   	push   %eax
8400423a:	ff 75 08             	pushl  0x8(%ebp)
8400423d:	e8 e0 d9 ff ff       	call   84001c22 <_malloc_r>
84004242:	83 c4 10             	add    $0x10,%esp
84004245:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004248:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8400424c:	75 0e                	jne    8400425c <__sfvwrite_r+0x1a0>
8400424e:	8b 45 08             	mov    0x8(%ebp),%eax
84004251:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
84004257:	e9 e6 02 00 00       	jmp    84004542 <__sfvwrite_r+0x486>
8400425c:	8b 55 d0             	mov    -0x30(%ebp),%edx
8400425f:	8b 43 10             	mov    0x10(%ebx),%eax
84004262:	83 ec 04             	sub    $0x4,%esp
84004265:	52                   	push   %edx
84004266:	50                   	push   %eax
84004267:	ff 75 dc             	pushl  -0x24(%ebp)
8400426a:	e8 09 05 00 00       	call   84004778 <memcpy>
8400426f:	83 c4 10             	add    $0x10,%esp
84004272:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004276:	66 25 7f fb          	and    $0xfb7f,%ax
8400427a:	0c 80                	or     $0x80,%al
8400427c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84004280:	eb 49                	jmp    840042cb <__sfvwrite_r+0x20f>
84004282:	8b 55 d8             	mov    -0x28(%ebp),%edx
84004285:	8b 43 10             	mov    0x10(%ebx),%eax
84004288:	83 ec 04             	sub    $0x4,%esp
8400428b:	52                   	push   %edx
8400428c:	50                   	push   %eax
8400428d:	ff 75 08             	pushl  0x8(%ebp)
84004290:	e8 b8 05 00 00       	call   8400484d <_realloc_r>
84004295:	83 c4 10             	add    $0x10,%esp
84004298:	89 45 dc             	mov    %eax,-0x24(%ebp)
8400429b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
8400429f:	75 2a                	jne    840042cb <__sfvwrite_r+0x20f>
840042a1:	8b 43 10             	mov    0x10(%ebx),%eax
840042a4:	83 ec 08             	sub    $0x8,%esp
840042a7:	50                   	push   %eax
840042a8:	ff 75 08             	pushl  0x8(%ebp)
840042ab:	e8 55 d0 ff ff       	call   84001305 <_free_r>
840042b0:	83 c4 10             	add    $0x10,%esp
840042b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840042b7:	24 7f                	and    $0x7f,%al
840042b9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840042bd:	8b 45 08             	mov    0x8(%ebp),%eax
840042c0:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
840042c6:	e9 77 02 00 00       	jmp    84004542 <__sfvwrite_r+0x486>
840042cb:	8b 45 dc             	mov    -0x24(%ebp),%eax
840042ce:	89 43 10             	mov    %eax,0x10(%ebx)
840042d1:	8b 55 d0             	mov    -0x30(%ebp),%edx
840042d4:	8b 45 dc             	mov    -0x24(%ebp),%eax
840042d7:	01 d0                	add    %edx,%eax
840042d9:	89 03                	mov    %eax,(%ebx)
840042db:	8b 45 d8             	mov    -0x28(%ebp),%eax
840042de:	89 43 14             	mov    %eax,0x14(%ebx)
840042e1:	89 fe                	mov    %edi,%esi
840042e3:	8b 45 d8             	mov    -0x28(%ebp),%eax
840042e6:	2b 45 d0             	sub    -0x30(%ebp),%eax
840042e9:	89 43 08             	mov    %eax,0x8(%ebx)
840042ec:	89 f0                	mov    %esi,%eax
840042ee:	39 c7                	cmp    %eax,%edi
840042f0:	73 02                	jae    840042f4 <__sfvwrite_r+0x238>
840042f2:	89 fe                	mov    %edi,%esi
840042f4:	89 f2                	mov    %esi,%edx
840042f6:	8b 03                	mov    (%ebx),%eax
840042f8:	83 ec 04             	sub    $0x4,%esp
840042fb:	52                   	push   %edx
840042fc:	ff 75 c4             	pushl  -0x3c(%ebp)
840042ff:	50                   	push   %eax
84004300:	e8 bb 04 00 00       	call   840047c0 <memmove>
84004305:	83 c4 10             	add    $0x10,%esp
84004308:	8b 43 08             	mov    0x8(%ebx),%eax
8400430b:	29 f0                	sub    %esi,%eax
8400430d:	89 43 08             	mov    %eax,0x8(%ebx)
84004310:	8b 03                	mov    (%ebx),%eax
84004312:	89 f2                	mov    %esi,%edx
84004314:	01 d0                	add    %edx,%eax
84004316:	89 03                	mov    %eax,(%ebx)
84004318:	89 fe                	mov    %edi,%esi
8400431a:	e9 9d 00 00 00       	jmp    840043bc <__sfvwrite_r+0x300>
8400431f:	8b 13                	mov    (%ebx),%edx
84004321:	8b 43 10             	mov    0x10(%ebx),%eax
84004324:	39 c2                	cmp    %eax,%edx
84004326:	77 07                	ja     8400432f <__sfvwrite_r+0x273>
84004328:	8b 43 14             	mov    0x14(%ebx),%eax
8400432b:	39 c7                	cmp    %eax,%edi
8400432d:	73 4c                	jae    8400437b <__sfvwrite_r+0x2bf>
8400432f:	89 f0                	mov    %esi,%eax
84004331:	39 c7                	cmp    %eax,%edi
84004333:	0f 46 c7             	cmovbe %edi,%eax
84004336:	89 c6                	mov    %eax,%esi
84004338:	89 f2                	mov    %esi,%edx
8400433a:	8b 03                	mov    (%ebx),%eax
8400433c:	83 ec 04             	sub    $0x4,%esp
8400433f:	52                   	push   %edx
84004340:	ff 75 c4             	pushl  -0x3c(%ebp)
84004343:	50                   	push   %eax
84004344:	e8 77 04 00 00       	call   840047c0 <memmove>
84004349:	83 c4 10             	add    $0x10,%esp
8400434c:	8b 43 08             	mov    0x8(%ebx),%eax
8400434f:	29 f0                	sub    %esi,%eax
84004351:	89 43 08             	mov    %eax,0x8(%ebx)
84004354:	8b 03                	mov    (%ebx),%eax
84004356:	89 f2                	mov    %esi,%edx
84004358:	01 d0                	add    %edx,%eax
8400435a:	89 03                	mov    %eax,(%ebx)
8400435c:	8b 43 08             	mov    0x8(%ebx),%eax
8400435f:	85 c0                	test   %eax,%eax
84004361:	75 58                	jne    840043bb <__sfvwrite_r+0x2ff>
84004363:	83 ec 08             	sub    $0x8,%esp
84004366:	53                   	push   %ebx
84004367:	ff 75 08             	pushl  0x8(%ebp)
8400436a:	e8 03 cb ff ff       	call   84000e72 <_fflush_r>
8400436f:	83 c4 10             	add    $0x10,%esp
84004372:	85 c0                	test   %eax,%eax
84004374:	74 45                	je     840043bb <__sfvwrite_r+0x2ff>
84004376:	e9 c7 01 00 00       	jmp    84004542 <__sfvwrite_r+0x486>
8400437b:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
84004381:	77 04                	ja     84004387 <__sfvwrite_r+0x2cb>
84004383:	89 f8                	mov    %edi,%eax
84004385:	eb 05                	jmp    8400438c <__sfvwrite_r+0x2d0>
84004387:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
8400438c:	8b 4b 14             	mov    0x14(%ebx),%ecx
8400438f:	99                   	cltd   
84004390:	f7 f9                	idiv   %ecx
84004392:	89 c2                	mov    %eax,%edx
84004394:	8b 43 14             	mov    0x14(%ebx),%eax
84004397:	89 d6                	mov    %edx,%esi
84004399:	0f af f0             	imul   %eax,%esi
8400439c:	8b 53 24             	mov    0x24(%ebx),%edx
8400439f:	8b 43 1c             	mov    0x1c(%ebx),%eax
840043a2:	56                   	push   %esi
840043a3:	ff 75 c4             	pushl  -0x3c(%ebp)
840043a6:	50                   	push   %eax
840043a7:	ff 75 08             	pushl  0x8(%ebp)
840043aa:	ff d2                	call   *%edx
840043ac:	83 c4 10             	add    $0x10,%esp
840043af:	89 c6                	mov    %eax,%esi
840043b1:	85 f6                	test   %esi,%esi
840043b3:	0f 8e 85 01 00 00    	jle    8400453e <__sfvwrite_r+0x482>
840043b9:	eb 01                	jmp    840043bc <__sfvwrite_r+0x300>
840043bb:	90                   	nop
840043bc:	89 f0                	mov    %esi,%eax
840043be:	01 45 c4             	add    %eax,-0x3c(%ebp)
840043c1:	89 f0                	mov    %esi,%eax
840043c3:	29 c7                	sub    %eax,%edi
840043c5:	8b 45 10             	mov    0x10(%ebp),%eax
840043c8:	8b 40 08             	mov    0x8(%eax),%eax
840043cb:	89 f2                	mov    %esi,%edx
840043cd:	29 d0                	sub    %edx,%eax
840043cf:	8b 4d 10             	mov    0x10(%ebp),%ecx
840043d2:	89 41 08             	mov    %eax,0x8(%ecx)
840043d5:	8b 45 10             	mov    0x10(%ebp),%eax
840043d8:	8b 40 08             	mov    0x8(%eax),%eax
840043db:	85 c0                	test   %eax,%eax
840043dd:	0f 85 d4 fd ff ff    	jne    840041b7 <__sfvwrite_r+0xfb>
840043e3:	e9 4c 01 00 00       	jmp    84004534 <__sfvwrite_r+0x478>
840043e8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840043ef:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
840043f6:	eb 18                	jmp    84004410 <__sfvwrite_r+0x354>
840043f8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
840043ff:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004402:	8b 08                	mov    (%eax),%ecx
84004404:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
84004407:	8b 78 04             	mov    0x4(%eax),%edi
8400440a:	83 c0 08             	add    $0x8,%eax
8400440d:	89 45 c0             	mov    %eax,-0x40(%ebp)
84004410:	85 ff                	test   %edi,%edi
84004412:	74 e4                	je     840043f8 <__sfvwrite_r+0x33c>
84004414:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
84004418:	75 32                	jne    8400444c <__sfvwrite_r+0x390>
8400441a:	83 ec 04             	sub    $0x4,%esp
8400441d:	57                   	push   %edi
8400441e:	6a 0a                	push   $0xa
84004420:	8b 75 c4             	mov    -0x3c(%ebp),%esi
84004423:	56                   	push   %esi
84004424:	e8 b7 02 00 00       	call   840046e0 <memchr>
84004429:	83 c4 10             	add    $0x10,%esp
8400442c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8400442f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
84004433:	74 0a                	je     8400443f <__sfvwrite_r+0x383>
84004435:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84004438:	83 c0 01             	add    $0x1,%eax
8400443b:	29 f0                	sub    %esi,%eax
8400443d:	eb 03                	jmp    84004442 <__sfvwrite_r+0x386>
8400443f:	8d 47 01             	lea    0x1(%edi),%eax
84004442:	89 45 e0             	mov    %eax,-0x20(%ebp)
84004445:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8400444c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8400444f:	39 c7                	cmp    %eax,%edi
84004451:	0f 46 c7             	cmovbe %edi,%eax
84004454:	89 c1                	mov    %eax,%ecx
84004456:	8b 53 08             	mov    0x8(%ebx),%edx
84004459:	8b 43 14             	mov    0x14(%ebx),%eax
8400445c:	8d 34 02             	lea    (%edx,%eax,1),%esi
8400445f:	8b 13                	mov    (%ebx),%edx
84004461:	8b 43 10             	mov    0x10(%ebx),%eax
84004464:	39 c2                	cmp    %eax,%edx
84004466:	76 38                	jbe    840044a0 <__sfvwrite_r+0x3e4>
84004468:	39 f1                	cmp    %esi,%ecx
8400446a:	7e 34                	jle    840044a0 <__sfvwrite_r+0x3e4>
8400446c:	89 f2                	mov    %esi,%edx
8400446e:	8b 03                	mov    (%ebx),%eax
84004470:	83 ec 04             	sub    $0x4,%esp
84004473:	52                   	push   %edx
84004474:	ff 75 c4             	pushl  -0x3c(%ebp)
84004477:	50                   	push   %eax
84004478:	e8 43 03 00 00       	call   840047c0 <memmove>
8400447d:	83 c4 10             	add    $0x10,%esp
84004480:	8b 03                	mov    (%ebx),%eax
84004482:	89 f2                	mov    %esi,%edx
84004484:	01 d0                	add    %edx,%eax
84004486:	89 03                	mov    %eax,(%ebx)
84004488:	83 ec 08             	sub    $0x8,%esp
8400448b:	53                   	push   %ebx
8400448c:	ff 75 08             	pushl  0x8(%ebp)
8400448f:	e8 de c9 ff ff       	call   84000e72 <_fflush_r>
84004494:	83 c4 10             	add    $0x10,%esp
84004497:	85 c0                	test   %eax,%eax
84004499:	74 4f                	je     840044ea <__sfvwrite_r+0x42e>
8400449b:	e9 a2 00 00 00       	jmp    84004542 <__sfvwrite_r+0x486>
840044a0:	8b 73 14             	mov    0x14(%ebx),%esi
840044a3:	89 c8                	mov    %ecx,%eax
840044a5:	39 c6                	cmp    %eax,%esi
840044a7:	7f 1b                	jg     840044c4 <__sfvwrite_r+0x408>
840044a9:	8b 53 24             	mov    0x24(%ebx),%edx
840044ac:	8b 43 1c             	mov    0x1c(%ebx),%eax
840044af:	56                   	push   %esi
840044b0:	ff 75 c4             	pushl  -0x3c(%ebp)
840044b3:	50                   	push   %eax
840044b4:	ff 75 08             	pushl  0x8(%ebp)
840044b7:	ff d2                	call   *%edx
840044b9:	83 c4 10             	add    $0x10,%esp
840044bc:	89 c6                	mov    %eax,%esi
840044be:	85 f6                	test   %esi,%esi
840044c0:	7f 28                	jg     840044ea <__sfvwrite_r+0x42e>
840044c2:	eb 7e                	jmp    84004542 <__sfvwrite_r+0x486>
840044c4:	89 ce                	mov    %ecx,%esi
840044c6:	89 f2                	mov    %esi,%edx
840044c8:	8b 03                	mov    (%ebx),%eax
840044ca:	83 ec 04             	sub    $0x4,%esp
840044cd:	52                   	push   %edx
840044ce:	ff 75 c4             	pushl  -0x3c(%ebp)
840044d1:	50                   	push   %eax
840044d2:	e8 e9 02 00 00       	call   840047c0 <memmove>
840044d7:	83 c4 10             	add    $0x10,%esp
840044da:	8b 43 08             	mov    0x8(%ebx),%eax
840044dd:	29 f0                	sub    %esi,%eax
840044df:	89 43 08             	mov    %eax,0x8(%ebx)
840044e2:	8b 03                	mov    (%ebx),%eax
840044e4:	89 f2                	mov    %esi,%edx
840044e6:	01 d0                	add    %edx,%eax
840044e8:	89 03                	mov    %eax,(%ebx)
840044ea:	29 75 e0             	sub    %esi,-0x20(%ebp)
840044ed:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
840044f1:	75 1a                	jne    8400450d <__sfvwrite_r+0x451>
840044f3:	83 ec 08             	sub    $0x8,%esp
840044f6:	53                   	push   %ebx
840044f7:	ff 75 08             	pushl  0x8(%ebp)
840044fa:	e8 73 c9 ff ff       	call   84000e72 <_fflush_r>
840044ff:	83 c4 10             	add    $0x10,%esp
84004502:	85 c0                	test   %eax,%eax
84004504:	75 3b                	jne    84004541 <__sfvwrite_r+0x485>
84004506:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8400450d:	89 f0                	mov    %esi,%eax
8400450f:	01 45 c4             	add    %eax,-0x3c(%ebp)
84004512:	89 f0                	mov    %esi,%eax
84004514:	29 c7                	sub    %eax,%edi
84004516:	8b 45 10             	mov    0x10(%ebp),%eax
84004519:	8b 40 08             	mov    0x8(%eax),%eax
8400451c:	89 f2                	mov    %esi,%edx
8400451e:	29 d0                	sub    %edx,%eax
84004520:	8b 4d 10             	mov    0x10(%ebp),%ecx
84004523:	89 41 08             	mov    %eax,0x8(%ecx)
84004526:	8b 45 10             	mov    0x10(%ebp),%eax
84004529:	8b 40 08             	mov    0x8(%eax),%eax
8400452c:	85 c0                	test   %eax,%eax
8400452e:	0f 85 dc fe ff ff    	jne    84004410 <__sfvwrite_r+0x354>
84004534:	b8 00 00 00 00       	mov    $0x0,%eax
84004539:	eb 17                	jmp    84004552 <__sfvwrite_r+0x496>
8400453b:	90                   	nop
8400453c:	eb 04                	jmp    84004542 <__sfvwrite_r+0x486>
8400453e:	90                   	nop
8400453f:	eb 01                	jmp    84004542 <__sfvwrite_r+0x486>
84004541:	90                   	nop
84004542:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84004546:	83 c8 40             	or     $0x40,%eax
84004549:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400454d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84004552:	8d 65 f4             	lea    -0xc(%ebp),%esp
84004555:	5b                   	pop    %ebx
84004556:	5e                   	pop    %esi
84004557:	5f                   	pop    %edi
84004558:	5d                   	pop    %ebp
84004559:	c3                   	ret    

8400455a <_isatty_r>:
8400455a:	55                   	push   %ebp
8400455b:	89 e5                	mov    %esp,%ebp
8400455d:	83 ec 18             	sub    $0x18,%esp
84004560:	c7 05 f0 63 00 84 00 	movl   $0x0,0x840063f0
84004567:	00 00 00 
8400456a:	83 ec 0c             	sub    $0xc,%esp
8400456d:	ff 75 0c             	pushl  0xc(%ebp)
84004570:	e8 30 bd ff ff       	call   840002a5 <isatty>
84004575:	83 c4 10             	add    $0x10,%esp
84004578:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400457b:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8400457f:	75 14                	jne    84004595 <_isatty_r+0x3b>
84004581:	a1 f0 63 00 84       	mov    0x840063f0,%eax
84004586:	85 c0                	test   %eax,%eax
84004588:	74 0b                	je     84004595 <_isatty_r+0x3b>
8400458a:	8b 15 f0 63 00 84    	mov    0x840063f0,%edx
84004590:	8b 45 08             	mov    0x8(%ebp),%eax
84004593:	89 10                	mov    %edx,(%eax)
84004595:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004598:	c9                   	leave  
84004599:	c3                   	ret    

8400459a <__get_global_locale>:
8400459a:	55                   	push   %ebp
8400459b:	89 e5                	mov    %esp,%ebp
8400459d:	b8 00 62 00 84       	mov    $0x84006200,%eax
840045a2:	5d                   	pop    %ebp
840045a3:	c3                   	ret    

840045a4 <__get_current_locale>:
840045a4:	55                   	push   %ebp
840045a5:	89 e5                	mov    %esp,%ebp
840045a7:	e8 ee ff ff ff       	call   8400459a <__get_global_locale>
840045ac:	5d                   	pop    %ebp
840045ad:	c3                   	ret    

840045ae <_setlocale_r>:
840045ae:	55                   	push   %ebp
840045af:	89 e5                	mov    %esp,%ebp
840045b1:	83 ec 08             	sub    $0x8,%esp
840045b4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
840045b8:	74 4c                	je     84004606 <_setlocale_r+0x58>
840045ba:	83 ec 08             	sub    $0x8,%esp
840045bd:	68 db 56 00 84       	push   $0x840056db
840045c2:	ff 75 10             	pushl  0x10(%ebp)
840045c5:	e8 8b 0d 00 00       	call   84005355 <strcmp>
840045ca:	83 c4 10             	add    $0x10,%esp
840045cd:	85 c0                	test   %eax,%eax
840045cf:	74 35                	je     84004606 <_setlocale_r+0x58>
840045d1:	83 ec 08             	sub    $0x8,%esp
840045d4:	68 e1 56 00 84       	push   $0x840056e1
840045d9:	ff 75 10             	pushl  0x10(%ebp)
840045dc:	e8 74 0d 00 00       	call   84005355 <strcmp>
840045e1:	83 c4 10             	add    $0x10,%esp
840045e4:	85 c0                	test   %eax,%eax
840045e6:	74 1e                	je     84004606 <_setlocale_r+0x58>
840045e8:	83 ec 08             	sub    $0x8,%esp
840045eb:	68 da 56 00 84       	push   $0x840056da
840045f0:	ff 75 10             	pushl  0x10(%ebp)
840045f3:	e8 5d 0d 00 00       	call   84005355 <strcmp>
840045f8:	83 c4 10             	add    $0x10,%esp
840045fb:	85 c0                	test   %eax,%eax
840045fd:	74 07                	je     84004606 <_setlocale_r+0x58>
840045ff:	b8 00 00 00 00       	mov    $0x0,%eax
84004604:	eb 05                	jmp    8400460b <_setlocale_r+0x5d>
84004606:	b8 e1 56 00 84       	mov    $0x840056e1,%eax
8400460b:	c9                   	leave  
8400460c:	c3                   	ret    

8400460d <__locale_mb_cur_max>:
8400460d:	55                   	push   %ebp
8400460e:	89 e5                	mov    %esp,%ebp
84004610:	e8 8f ff ff ff       	call   840045a4 <__get_current_locale>
84004615:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
8400461c:	0f be c0             	movsbl %al,%eax
8400461f:	5d                   	pop    %ebp
84004620:	c3                   	ret    

84004621 <setlocale>:
84004621:	55                   	push   %ebp
84004622:	89 e5                	mov    %esp,%ebp
84004624:	83 ec 08             	sub    $0x8,%esp
84004627:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
8400462c:	83 ec 04             	sub    $0x4,%esp
8400462f:	ff 75 0c             	pushl  0xc(%ebp)
84004632:	ff 75 08             	pushl  0x8(%ebp)
84004635:	50                   	push   %eax
84004636:	e8 73 ff ff ff       	call   840045ae <_setlocale_r>
8400463b:	83 c4 10             	add    $0x10,%esp
8400463e:	c9                   	leave  
8400463f:	c3                   	ret    

84004640 <__get_global_locale>:
84004640:	55                   	push   %ebp
84004641:	89 e5                	mov    %esp,%ebp
84004643:	b8 00 62 00 84       	mov    $0x84006200,%eax
84004648:	5d                   	pop    %ebp
84004649:	c3                   	ret    

8400464a <__get_current_locale>:
8400464a:	55                   	push   %ebp
8400464b:	89 e5                	mov    %esp,%ebp
8400464d:	e8 ee ff ff ff       	call   84004640 <__get_global_locale>
84004652:	5d                   	pop    %ebp
84004653:	c3                   	ret    

84004654 <_mbtowc_r>:
84004654:	55                   	push   %ebp
84004655:	89 e5                	mov    %esp,%ebp
84004657:	83 ec 08             	sub    $0x8,%esp
8400465a:	e8 eb ff ff ff       	call   8400464a <__get_current_locale>
8400465f:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
84004665:	83 ec 0c             	sub    $0xc,%esp
84004668:	ff 75 18             	pushl  0x18(%ebp)
8400466b:	ff 75 14             	pushl  0x14(%ebp)
8400466e:	ff 75 10             	pushl  0x10(%ebp)
84004671:	ff 75 0c             	pushl  0xc(%ebp)
84004674:	ff 75 08             	pushl  0x8(%ebp)
84004677:	ff d0                	call   *%eax
84004679:	83 c4 20             	add    $0x20,%esp
8400467c:	c9                   	leave  
8400467d:	c3                   	ret    

8400467e <__ascii_mbtowc>:
8400467e:	55                   	push   %ebp
8400467f:	89 e5                	mov    %esp,%ebp
84004681:	83 ec 10             	sub    $0x10,%esp
84004684:	8b 45 10             	mov    0x10(%ebp),%eax
84004687:	89 45 fc             	mov    %eax,-0x4(%ebp)
8400468a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400468e:	75 06                	jne    84004696 <__ascii_mbtowc+0x18>
84004690:	8d 45 f8             	lea    -0x8(%ebp),%eax
84004693:	89 45 0c             	mov    %eax,0xc(%ebp)
84004696:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8400469a:	75 07                	jne    840046a3 <__ascii_mbtowc+0x25>
8400469c:	b8 00 00 00 00       	mov    $0x0,%eax
840046a1:	eb 31                	jmp    840046d4 <__ascii_mbtowc+0x56>
840046a3:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
840046a7:	75 07                	jne    840046b0 <__ascii_mbtowc+0x32>
840046a9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
840046ae:	eb 24                	jmp    840046d4 <__ascii_mbtowc+0x56>
840046b0:	8b 45 fc             	mov    -0x4(%ebp),%eax
840046b3:	0f b6 00             	movzbl (%eax),%eax
840046b6:	0f b6 d0             	movzbl %al,%edx
840046b9:	8b 45 0c             	mov    0xc(%ebp),%eax
840046bc:	89 10                	mov    %edx,(%eax)
840046be:	8b 45 fc             	mov    -0x4(%ebp),%eax
840046c1:	0f b6 00             	movzbl (%eax),%eax
840046c4:	84 c0                	test   %al,%al
840046c6:	75 07                	jne    840046cf <__ascii_mbtowc+0x51>
840046c8:	b8 00 00 00 00       	mov    $0x0,%eax
840046cd:	eb 05                	jmp    840046d4 <__ascii_mbtowc+0x56>
840046cf:	b8 01 00 00 00       	mov    $0x1,%eax
840046d4:	c9                   	leave  
840046d5:	c3                   	ret    
840046d6:	66 90                	xchg   %ax,%ax
840046d8:	66 90                	xchg   %ax,%ax
840046da:	66 90                	xchg   %ax,%ax
840046dc:	66 90                	xchg   %ax,%ax
840046de:	66 90                	xchg   %ax,%ax

840046e0 <memchr>:
840046e0:	55                   	push   %ebp
840046e1:	89 e5                	mov    %esp,%ebp
840046e3:	57                   	push   %edi
840046e4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
840046e8:	8b 4d 10             	mov    0x10(%ebp),%ecx
840046eb:	8b 7d 08             	mov    0x8(%ebp),%edi
840046ee:	31 d2                	xor    %edx,%edx
840046f0:	85 c9                	test   %ecx,%ecx
840046f2:	74 79                	je     8400476d <L20>
840046f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
840046fa:	74 28                	je     84004724 <L5>
840046fc:	3a 07                	cmp    (%edi),%al
840046fe:	74 6a                	je     8400476a <L15>
84004700:	47                   	inc    %edi
84004701:	49                   	dec    %ecx
84004702:	74 69                	je     8400476d <L20>
84004704:	f7 c7 03 00 00 00    	test   $0x3,%edi
8400470a:	74 18                	je     84004724 <L5>
8400470c:	3a 07                	cmp    (%edi),%al
8400470e:	74 5a                	je     8400476a <L15>
84004710:	47                   	inc    %edi
84004711:	49                   	dec    %ecx
84004712:	74 59                	je     8400476d <L20>
84004714:	f7 c7 03 00 00 00    	test   $0x3,%edi
8400471a:	74 08                	je     84004724 <L5>
8400471c:	3a 07                	cmp    (%edi),%al
8400471e:	74 4a                	je     8400476a <L15>
84004720:	47                   	inc    %edi
84004721:	49                   	dec    %ecx
84004722:	74 49                	je     8400476d <L20>

84004724 <L5>:
84004724:	88 c4                	mov    %al,%ah
84004726:	89 c2                	mov    %eax,%edx
84004728:	c1 e2 10             	shl    $0x10,%edx
8400472b:	09 d0                	or     %edx,%eax
8400472d:	53                   	push   %ebx
8400472e:	66 90                	xchg   %ax,%ax

84004730 <L8>:
84004730:	83 e9 04             	sub    $0x4,%ecx
84004733:	72 1c                	jb     84004751 <L9>
84004735:	8b 17                	mov    (%edi),%edx
84004737:	83 c7 04             	add    $0x4,%edi
8400473a:	31 c2                	xor    %eax,%edx
8400473c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
84004742:	f7 d2                	not    %edx
84004744:	21 d3                	and    %edx,%ebx
84004746:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8400474c:	74 e2                	je     84004730 <L8>
8400474e:	83 ef 04             	sub    $0x4,%edi

84004751 <L9>:
84004751:	5b                   	pop    %ebx
84004752:	31 d2                	xor    %edx,%edx
84004754:	83 c1 04             	add    $0x4,%ecx
84004757:	74 14                	je     8400476d <L20>
84004759:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

84004760 <L10>:
84004760:	3a 07                	cmp    (%edi),%al
84004762:	74 06                	je     8400476a <L15>
84004764:	47                   	inc    %edi
84004765:	49                   	dec    %ecx
84004766:	75 f8                	jne    84004760 <L10>
84004768:	31 ff                	xor    %edi,%edi

8400476a <L15>:
8400476a:	4a                   	dec    %edx
8400476b:	21 fa                	and    %edi,%edx

8400476d <L20>:
8400476d:	89 d0                	mov    %edx,%eax
8400476f:	8d 65 fc             	lea    -0x4(%ebp),%esp
84004772:	5f                   	pop    %edi
84004773:	c9                   	leave  
84004774:	c3                   	ret    
84004775:	66 90                	xchg   %ax,%ax
84004777:	90                   	nop

84004778 <memcpy>:
84004778:	55                   	push   %ebp
84004779:	89 e5                	mov    %esp,%ebp
8400477b:	56                   	push   %esi
8400477c:	57                   	push   %edi
8400477d:	53                   	push   %ebx
8400477e:	8b 7d 08             	mov    0x8(%ebp),%edi
84004781:	8b 4d 10             	mov    0x10(%ebp),%ecx
84004784:	8b 75 0c             	mov    0xc(%ebp),%esi
84004787:	fc                   	cld    
84004788:	83 f9 08             	cmp    $0x8,%ecx
8400478b:	76 26                	jbe    840047b3 <memcpy+0x3b>
8400478d:	89 fa                	mov    %edi,%edx
8400478f:	89 cb                	mov    %ecx,%ebx
84004791:	83 e2 03             	and    $0x3,%edx
84004794:	74 10                	je     840047a6 <memcpy+0x2e>
84004796:	b9 04 00 00 00       	mov    $0x4,%ecx
8400479b:	29 d1                	sub    %edx,%ecx
8400479d:	83 e1 03             	and    $0x3,%ecx
840047a0:	29 cb                	sub    %ecx,%ebx
840047a2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
840047a4:	89 d9                	mov    %ebx,%ecx
840047a6:	c1 e9 02             	shr    $0x2,%ecx
840047a9:	8d 76 00             	lea    0x0(%esi),%esi
840047ac:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
840047ae:	89 d9                	mov    %ebx,%ecx
840047b0:	83 e1 03             	and    $0x3,%ecx
840047b3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
840047b5:	8b 45 08             	mov    0x8(%ebp),%eax
840047b8:	8d 65 f4             	lea    -0xc(%ebp),%esp
840047bb:	5b                   	pop    %ebx
840047bc:	5f                   	pop    %edi
840047bd:	5e                   	pop    %esi
840047be:	c9                   	leave  
840047bf:	c3                   	ret    

840047c0 <memmove>:
840047c0:	55                   	push   %ebp
840047c1:	89 e5                	mov    %esp,%ebp
840047c3:	56                   	push   %esi
840047c4:	57                   	push   %edi
840047c5:	53                   	push   %ebx
840047c6:	8b 7d 08             	mov    0x8(%ebp),%edi
840047c9:	8b 4d 10             	mov    0x10(%ebp),%ecx
840047cc:	8b 75 0c             	mov    0xc(%ebp),%esi
840047cf:	fc                   	cld    
840047d0:	39 fe                	cmp    %edi,%esi
840047d2:	73 43                	jae    84004817 <memmove+0x57>
840047d4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
840047d8:	39 df                	cmp    %ebx,%edi
840047da:	77 3b                	ja     84004817 <memmove+0x57>
840047dc:	01 ce                	add    %ecx,%esi
840047de:	01 cf                	add    %ecx,%edi
840047e0:	fd                   	std    
840047e1:	83 f9 08             	cmp    $0x8,%ecx
840047e4:	76 2b                	jbe    84004811 <memmove+0x51>
840047e6:	89 fa                	mov    %edi,%edx
840047e8:	89 cb                	mov    %ecx,%ebx
840047ea:	83 e2 03             	and    $0x3,%edx
840047ed:	74 0c                	je     840047fb <memmove+0x3b>
840047ef:	89 d1                	mov    %edx,%ecx
840047f1:	4e                   	dec    %esi
840047f2:	4f                   	dec    %edi
840047f3:	29 cb                	sub    %ecx,%ebx
840047f5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
840047f7:	89 d9                	mov    %ebx,%ecx
840047f9:	46                   	inc    %esi
840047fa:	47                   	inc    %edi
840047fb:	c1 e9 02             	shr    $0x2,%ecx
840047fe:	83 ee 04             	sub    $0x4,%esi
84004801:	83 ef 04             	sub    $0x4,%edi
84004804:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
84004806:	83 c6 04             	add    $0x4,%esi
84004809:	83 c7 04             	add    $0x4,%edi
8400480c:	89 d9                	mov    %ebx,%ecx
8400480e:	83 e1 03             	and    $0x3,%ecx
84004811:	4e                   	dec    %esi
84004812:	4f                   	dec    %edi
84004813:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004815:	eb 2a                	jmp    84004841 <memmove+0x81>
84004817:	83 f9 08             	cmp    $0x8,%ecx
8400481a:	76 23                	jbe    8400483f <memmove+0x7f>
8400481c:	89 fa                	mov    %edi,%edx
8400481e:	89 cb                	mov    %ecx,%ebx
84004820:	83 e2 03             	and    $0x3,%edx
84004823:	74 10                	je     84004835 <memmove+0x75>
84004825:	b9 04 00 00 00       	mov    $0x4,%ecx
8400482a:	29 d1                	sub    %edx,%ecx
8400482c:	83 e1 03             	and    $0x3,%ecx
8400482f:	29 cb                	sub    %ecx,%ebx
84004831:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004833:	89 d9                	mov    %ebx,%ecx
84004835:	c1 e9 02             	shr    $0x2,%ecx
84004838:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
8400483a:	89 d9                	mov    %ebx,%ecx
8400483c:	83 e1 03             	and    $0x3,%ecx
8400483f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
84004841:	8b 45 08             	mov    0x8(%ebp),%eax
84004844:	fc                   	cld    
84004845:	8d 65 f4             	lea    -0xc(%ebp),%esp
84004848:	5b                   	pop    %ebx
84004849:	5f                   	pop    %edi
8400484a:	5e                   	pop    %esi
8400484b:	c9                   	leave  
8400484c:	c3                   	ret    

8400484d <_realloc_r>:
8400484d:	55                   	push   %ebp
8400484e:	89 e5                	mov    %esp,%ebp
84004850:	83 ec 78             	sub    $0x78,%esp
84004853:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
84004857:	75 16                	jne    8400486f <_realloc_r+0x22>
84004859:	83 ec 08             	sub    $0x8,%esp
8400485c:	ff 75 10             	pushl  0x10(%ebp)
8400485f:	ff 75 08             	pushl  0x8(%ebp)
84004862:	e8 bb d3 ff ff       	call   84001c22 <_malloc_r>
84004867:	83 c4 10             	add    $0x10,%esp
8400486a:	e9 b6 08 00 00       	jmp    84005125 <_realloc_r+0x8d8>
8400486f:	83 ec 0c             	sub    $0xc,%esp
84004872:	ff 75 08             	pushl  0x8(%ebp)
84004875:	e8 52 dc ff ff       	call   840024cc <__malloc_lock>
8400487a:	83 c4 10             	add    $0x10,%esp
8400487d:	8b 45 0c             	mov    0xc(%ebp),%eax
84004880:	83 e8 08             	sub    $0x8,%eax
84004883:	89 45 c4             	mov    %eax,-0x3c(%ebp)
84004886:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004889:	89 45 f4             	mov    %eax,-0xc(%ebp)
8400488c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8400488f:	8b 40 04             	mov    0x4(%eax),%eax
84004892:	83 e0 fc             	and    $0xfffffffc,%eax
84004895:	89 45 c0             	mov    %eax,-0x40(%ebp)
84004898:	8b 45 c0             	mov    -0x40(%ebp),%eax
8400489b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8400489e:	8b 45 10             	mov    0x10(%ebp),%eax
840048a1:	83 c0 0b             	add    $0xb,%eax
840048a4:	83 f8 16             	cmp    $0x16,%eax
840048a7:	76 0b                	jbe    840048b4 <_realloc_r+0x67>
840048a9:	8b 45 10             	mov    0x10(%ebp),%eax
840048ac:	83 c0 0b             	add    $0xb,%eax
840048af:	83 e0 f8             	and    $0xfffffff8,%eax
840048b2:	eb 05                	jmp    840048b9 <_realloc_r+0x6c>
840048b4:	b8 10 00 00 00       	mov    $0x10,%eax
840048b9:	89 45 bc             	mov    %eax,-0x44(%ebp)
840048bc:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048bf:	85 c0                	test   %eax,%eax
840048c1:	78 08                	js     840048cb <_realloc_r+0x7e>
840048c3:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048c6:	3b 45 10             	cmp    0x10(%ebp),%eax
840048c9:	73 13                	jae    840048de <_realloc_r+0x91>
840048cb:	8b 45 08             	mov    0x8(%ebp),%eax
840048ce:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
840048d4:	b8 00 00 00 00       	mov    $0x0,%eax
840048d9:	e9 47 08 00 00       	jmp    84005125 <_realloc_r+0x8d8>
840048de:	8b 55 c0             	mov    -0x40(%ebp),%edx
840048e1:	8b 45 bc             	mov    -0x44(%ebp),%eax
840048e4:	39 c2                	cmp    %eax,%edx
840048e6:	0f 8d 8b 07 00 00    	jge    84005077 <_realloc_r+0x82a>
840048ec:	8b 55 c4             	mov    -0x3c(%ebp),%edx
840048ef:	8b 45 c0             	mov    -0x40(%ebp),%eax
840048f2:	01 d0                	add    %edx,%eax
840048f4:	89 45 ec             	mov    %eax,-0x14(%ebp)
840048f7:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
840048fc:	8b 40 08             	mov    0x8(%eax),%eax
840048ff:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004902:	74 1e                	je     84004922 <_realloc_r+0xd5>
84004904:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004907:	8b 40 04             	mov    0x4(%eax),%eax
8400490a:	83 e0 fe             	and    $0xfffffffe,%eax
8400490d:	89 c2                	mov    %eax,%edx
8400490f:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004912:	01 d0                	add    %edx,%eax
84004914:	8b 40 04             	mov    0x4(%eax),%eax
84004917:	83 e0 01             	and    $0x1,%eax
8400491a:	85 c0                	test   %eax,%eax
8400491c:	0f 85 ca 00 00 00    	jne    840049ec <_realloc_r+0x19f>
84004922:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004925:	8b 40 04             	mov    0x4(%eax),%eax
84004928:	83 e0 fc             	and    $0xfffffffc,%eax
8400492b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8400492e:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84004933:	8b 40 08             	mov    0x8(%eax),%eax
84004936:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004939:	75 71                	jne    840049ac <_realloc_r+0x15f>
8400493b:	8b 55 e8             	mov    -0x18(%ebp),%edx
8400493e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004941:	01 d0                	add    %edx,%eax
84004943:	89 c2                	mov    %eax,%edx
84004945:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004948:	83 c0 10             	add    $0x10,%eax
8400494b:	39 c2                	cmp    %eax,%edx
8400494d:	0f 8c a9 00 00 00    	jl     840049fc <_realloc_r+0x1af>
84004953:	8b 45 e8             	mov    -0x18(%ebp),%eax
84004956:	01 45 f0             	add    %eax,-0x10(%ebp)
84004959:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
8400495e:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
84004961:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004964:	01 c8                	add    %ecx,%eax
84004966:	89 42 08             	mov    %eax,0x8(%edx)
84004969:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400496c:	2b 45 bc             	sub    -0x44(%ebp),%eax
8400496f:	89 c2                	mov    %eax,%edx
84004971:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84004976:	8b 40 08             	mov    0x8(%eax),%eax
84004979:	83 ca 01             	or     $0x1,%edx
8400497c:	89 50 04             	mov    %edx,0x4(%eax)
8400497f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004982:	8b 40 04             	mov    0x4(%eax),%eax
84004985:	83 e0 01             	and    $0x1,%eax
84004988:	0b 45 bc             	or     -0x44(%ebp),%eax
8400498b:	89 c2                	mov    %eax,%edx
8400498d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004990:	89 50 04             	mov    %edx,0x4(%eax)
84004993:	83 ec 0c             	sub    $0xc,%esp
84004996:	ff 75 08             	pushl  0x8(%ebp)
84004999:	e8 34 db ff ff       	call   840024d2 <__malloc_unlock>
8400499e:	83 c4 10             	add    $0x10,%esp
840049a1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
840049a4:	83 c0 08             	add    $0x8,%eax
840049a7:	e9 79 07 00 00       	jmp    84005125 <_realloc_r+0x8d8>
840049ac:	8b 55 e8             	mov    -0x18(%ebp),%edx
840049af:	8b 45 f0             	mov    -0x10(%ebp),%eax
840049b2:	01 d0                	add    %edx,%eax
840049b4:	89 c2                	mov    %eax,%edx
840049b6:	8b 45 bc             	mov    -0x44(%ebp),%eax
840049b9:	39 c2                	cmp    %eax,%edx
840049bb:	7c 3f                	jl     840049fc <_realloc_r+0x1af>
840049bd:	8b 45 ec             	mov    -0x14(%ebp),%eax
840049c0:	8b 40 0c             	mov    0xc(%eax),%eax
840049c3:	89 45 b8             	mov    %eax,-0x48(%ebp)
840049c6:	8b 45 ec             	mov    -0x14(%ebp),%eax
840049c9:	8b 40 08             	mov    0x8(%eax),%eax
840049cc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
840049cf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
840049d2:	8b 55 b8             	mov    -0x48(%ebp),%edx
840049d5:	89 50 0c             	mov    %edx,0xc(%eax)
840049d8:	8b 45 b8             	mov    -0x48(%ebp),%eax
840049db:	8b 55 b4             	mov    -0x4c(%ebp),%edx
840049de:	89 50 08             	mov    %edx,0x8(%eax)
840049e1:	8b 45 e8             	mov    -0x18(%ebp),%eax
840049e4:	01 45 f0             	add    %eax,-0x10(%ebp)
840049e7:	e9 8c 06 00 00       	jmp    84005078 <_realloc_r+0x82b>
840049ec:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
840049f3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
840049fa:	eb 01                	jmp    840049fd <_realloc_r+0x1b0>
840049fc:	90                   	nop
840049fd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a00:	8b 40 04             	mov    0x4(%eax),%eax
84004a03:	83 e0 01             	and    $0x1,%eax
84004a06:	85 c0                	test   %eax,%eax
84004a08:	0f 85 d6 04 00 00    	jne    84004ee4 <_realloc_r+0x697>
84004a0e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a11:	8b 00                	mov    (%eax),%eax
84004a13:	f7 d8                	neg    %eax
84004a15:	89 c2                	mov    %eax,%edx
84004a17:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004a1a:	01 d0                	add    %edx,%eax
84004a1c:	89 45 b0             	mov    %eax,-0x50(%ebp)
84004a1f:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a22:	8b 40 04             	mov    0x4(%eax),%eax
84004a25:	83 e0 fc             	and    $0xfffffffc,%eax
84004a28:	89 45 ac             	mov    %eax,-0x54(%ebp)
84004a2b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
84004a2f:	0f 84 4a 03 00 00    	je     84004d7f <_realloc_r+0x532>
84004a35:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84004a3a:	8b 40 08             	mov    0x8(%eax),%eax
84004a3d:	39 45 ec             	cmp    %eax,-0x14(%ebp)
84004a40:	0f 85 b0 01 00 00    	jne    84004bf6 <_realloc_r+0x3a9>
84004a46:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004a49:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004a4c:	01 c2                	add    %eax,%edx
84004a4e:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004a51:	01 d0                	add    %edx,%eax
84004a53:	89 c2                	mov    %eax,%edx
84004a55:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004a58:	83 c0 10             	add    $0x10,%eax
84004a5b:	39 c2                	cmp    %eax,%edx
84004a5d:	0f 8c 1c 03 00 00    	jl     84004d7f <_realloc_r+0x532>
84004a63:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a66:	8b 40 0c             	mov    0xc(%eax),%eax
84004a69:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004a6c:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a6f:	8b 40 08             	mov    0x8(%eax),%eax
84004a72:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004a75:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004a78:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004a7b:	89 50 0c             	mov    %edx,0xc(%eax)
84004a7e:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004a81:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004a84:	89 50 08             	mov    %edx,0x8(%eax)
84004a87:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004a8a:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004a8d:	8b 55 ac             	mov    -0x54(%ebp),%edx
84004a90:	8b 45 e8             	mov    -0x18(%ebp),%eax
84004a93:	01 d0                	add    %edx,%eax
84004a95:	01 45 f0             	add    %eax,-0x10(%ebp)
84004a98:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004a9b:	83 c0 08             	add    $0x8,%eax
84004a9e:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004aa1:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004aa4:	83 e8 04             	sub    $0x4,%eax
84004aa7:	89 45 a0             	mov    %eax,-0x60(%ebp)
84004aaa:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
84004aae:	0f 87 de 00 00 00    	ja     84004b92 <_realloc_r+0x345>
84004ab4:	8b 45 0c             	mov    0xc(%ebp),%eax
84004ab7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004aba:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004abd:	89 45 e0             	mov    %eax,-0x20(%ebp)
84004ac0:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
84004ac4:	0f 86 90 00 00 00    	jbe    84004b5a <_realloc_r+0x30d>
84004aca:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004acd:	8d 42 04             	lea    0x4(%edx),%eax
84004ad0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004ad3:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004ad6:	8d 48 04             	lea    0x4(%eax),%ecx
84004ad9:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004adc:	8b 12                	mov    (%edx),%edx
84004ade:	89 10                	mov    %edx,(%eax)
84004ae0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004ae3:	8d 42 04             	lea    0x4(%edx),%eax
84004ae6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004ae9:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004aec:	8d 48 04             	lea    0x4(%eax),%ecx
84004aef:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004af2:	8b 12                	mov    (%edx),%edx
84004af4:	89 10                	mov    %edx,(%eax)
84004af6:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
84004afa:	76 5e                	jbe    84004b5a <_realloc_r+0x30d>
84004afc:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004aff:	8d 42 04             	lea    0x4(%edx),%eax
84004b02:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b05:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b08:	8d 48 04             	lea    0x4(%eax),%ecx
84004b0b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b0e:	8b 12                	mov    (%edx),%edx
84004b10:	89 10                	mov    %edx,(%eax)
84004b12:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b15:	8d 42 04             	lea    0x4(%edx),%eax
84004b18:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b1b:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b1e:	8d 48 04             	lea    0x4(%eax),%ecx
84004b21:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b24:	8b 12                	mov    (%edx),%edx
84004b26:	89 10                	mov    %edx,(%eax)
84004b28:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
84004b2c:	76 2c                	jbe    84004b5a <_realloc_r+0x30d>
84004b2e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b31:	8d 42 04             	lea    0x4(%edx),%eax
84004b34:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b37:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b3a:	8d 48 04             	lea    0x4(%eax),%ecx
84004b3d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b40:	8b 12                	mov    (%edx),%edx
84004b42:	89 10                	mov    %edx,(%eax)
84004b44:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b47:	8d 42 04             	lea    0x4(%edx),%eax
84004b4a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b4d:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b50:	8d 48 04             	lea    0x4(%eax),%ecx
84004b53:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b56:	8b 12                	mov    (%edx),%edx
84004b58:	89 10                	mov    %edx,(%eax)
84004b5a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b5d:	8d 42 04             	lea    0x4(%edx),%eax
84004b60:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b63:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b66:	8d 48 04             	lea    0x4(%eax),%ecx
84004b69:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b6c:	8b 12                	mov    (%edx),%edx
84004b6e:	89 10                	mov    %edx,(%eax)
84004b70:	8b 55 e4             	mov    -0x1c(%ebp),%edx
84004b73:	8d 42 04             	lea    0x4(%edx),%eax
84004b76:	89 45 e4             	mov    %eax,-0x1c(%ebp)
84004b79:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b7c:	8d 48 04             	lea    0x4(%eax),%ecx
84004b7f:	89 4d e0             	mov    %ecx,-0x20(%ebp)
84004b82:	8b 12                	mov    (%edx),%edx
84004b84:	89 10                	mov    %edx,(%eax)
84004b86:	8b 45 e4             	mov    -0x1c(%ebp),%eax
84004b89:	8b 10                	mov    (%eax),%edx
84004b8b:	8b 45 e0             	mov    -0x20(%ebp),%eax
84004b8e:	89 10                	mov    %edx,(%eax)
84004b90:	eb 14                	jmp    84004ba6 <_realloc_r+0x359>
84004b92:	83 ec 04             	sub    $0x4,%esp
84004b95:	ff 75 a0             	pushl  -0x60(%ebp)
84004b98:	ff 75 0c             	pushl  0xc(%ebp)
84004b9b:	ff 75 a8             	pushl  -0x58(%ebp)
84004b9e:	e8 1d fc ff ff       	call   840047c0 <memmove>
84004ba3:	83 c4 10             	add    $0x10,%esp
84004ba6:	ba e0 5d 00 84       	mov    $0x84005de0,%edx
84004bab:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84004bae:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004bb1:	01 c8                	add    %ecx,%eax
84004bb3:	89 42 08             	mov    %eax,0x8(%edx)
84004bb6:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004bb9:	2b 45 bc             	sub    -0x44(%ebp),%eax
84004bbc:	89 c2                	mov    %eax,%edx
84004bbe:	b8 e0 5d 00 84       	mov    $0x84005de0,%eax
84004bc3:	8b 40 08             	mov    0x8(%eax),%eax
84004bc6:	83 ca 01             	or     $0x1,%edx
84004bc9:	89 50 04             	mov    %edx,0x4(%eax)
84004bcc:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004bcf:	8b 40 04             	mov    0x4(%eax),%eax
84004bd2:	83 e0 01             	and    $0x1,%eax
84004bd5:	0b 45 bc             	or     -0x44(%ebp),%eax
84004bd8:	89 c2                	mov    %eax,%edx
84004bda:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004bdd:	89 50 04             	mov    %edx,0x4(%eax)
84004be0:	83 ec 0c             	sub    $0xc,%esp
84004be3:	ff 75 08             	pushl  0x8(%ebp)
84004be6:	e8 e7 d8 ff ff       	call   840024d2 <__malloc_unlock>
84004beb:	83 c4 10             	add    $0x10,%esp
84004bee:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004bf1:	e9 2f 05 00 00       	jmp    84005125 <_realloc_r+0x8d8>
84004bf6:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004bf9:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004bfc:	01 c2                	add    %eax,%edx
84004bfe:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004c01:	01 d0                	add    %edx,%eax
84004c03:	89 c2                	mov    %eax,%edx
84004c05:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004c08:	39 c2                	cmp    %eax,%edx
84004c0a:	0f 8c 6f 01 00 00    	jl     84004d7f <_realloc_r+0x532>
84004c10:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004c13:	8b 40 0c             	mov    0xc(%eax),%eax
84004c16:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004c19:	8b 45 ec             	mov    -0x14(%ebp),%eax
84004c1c:	8b 40 08             	mov    0x8(%eax),%eax
84004c1f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004c22:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004c25:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004c28:	89 50 0c             	mov    %edx,0xc(%eax)
84004c2b:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004c2e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004c31:	89 50 08             	mov    %edx,0x8(%eax)
84004c34:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c37:	8b 40 0c             	mov    0xc(%eax),%eax
84004c3a:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004c3d:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c40:	8b 40 08             	mov    0x8(%eax),%eax
84004c43:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004c46:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004c49:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004c4c:	89 50 0c             	mov    %edx,0xc(%eax)
84004c4f:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004c52:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004c55:	89 50 08             	mov    %edx,0x8(%eax)
84004c58:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004c5b:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004c5e:	8b 55 e8             	mov    -0x18(%ebp),%edx
84004c61:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004c64:	01 d0                	add    %edx,%eax
84004c66:	01 45 f0             	add    %eax,-0x10(%ebp)
84004c69:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004c6c:	83 c0 08             	add    $0x8,%eax
84004c6f:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004c72:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004c75:	83 e8 04             	sub    $0x4,%eax
84004c78:	89 45 a4             	mov    %eax,-0x5c(%ebp)
84004c7b:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
84004c7f:	0f 87 e1 00 00 00    	ja     84004d66 <_realloc_r+0x519>
84004c85:	8b 45 0c             	mov    0xc(%ebp),%eax
84004c88:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004c8b:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004c8e:	89 45 d8             	mov    %eax,-0x28(%ebp)
84004c91:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
84004c95:	0f 86 90 00 00 00    	jbe    84004d2b <_realloc_r+0x4de>
84004c9b:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004c9e:	8d 42 04             	lea    0x4(%edx),%eax
84004ca1:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004ca4:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004ca7:	8d 48 04             	lea    0x4(%eax),%ecx
84004caa:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004cad:	8b 12                	mov    (%edx),%edx
84004caf:	89 10                	mov    %edx,(%eax)
84004cb1:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cb4:	8d 42 04             	lea    0x4(%edx),%eax
84004cb7:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cba:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cbd:	8d 48 04             	lea    0x4(%eax),%ecx
84004cc0:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004cc3:	8b 12                	mov    (%edx),%edx
84004cc5:	89 10                	mov    %edx,(%eax)
84004cc7:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
84004ccb:	76 5e                	jbe    84004d2b <_realloc_r+0x4de>
84004ccd:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004cd0:	8d 42 04             	lea    0x4(%edx),%eax
84004cd3:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cd6:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cd9:	8d 48 04             	lea    0x4(%eax),%ecx
84004cdc:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004cdf:	8b 12                	mov    (%edx),%edx
84004ce1:	89 10                	mov    %edx,(%eax)
84004ce3:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004ce6:	8d 42 04             	lea    0x4(%edx),%eax
84004ce9:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004cec:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004cef:	8d 48 04             	lea    0x4(%eax),%ecx
84004cf2:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004cf5:	8b 12                	mov    (%edx),%edx
84004cf7:	89 10                	mov    %edx,(%eax)
84004cf9:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
84004cfd:	76 2c                	jbe    84004d2b <_realloc_r+0x4de>
84004cff:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d02:	8d 42 04             	lea    0x4(%edx),%eax
84004d05:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d08:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d0b:	8d 48 04             	lea    0x4(%eax),%ecx
84004d0e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d11:	8b 12                	mov    (%edx),%edx
84004d13:	89 10                	mov    %edx,(%eax)
84004d15:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d18:	8d 42 04             	lea    0x4(%edx),%eax
84004d1b:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d1e:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d21:	8d 48 04             	lea    0x4(%eax),%ecx
84004d24:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d27:	8b 12                	mov    (%edx),%edx
84004d29:	89 10                	mov    %edx,(%eax)
84004d2b:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d2e:	8d 42 04             	lea    0x4(%edx),%eax
84004d31:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d34:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d37:	8d 48 04             	lea    0x4(%eax),%ecx
84004d3a:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d3d:	8b 12                	mov    (%edx),%edx
84004d3f:	89 10                	mov    %edx,(%eax)
84004d41:	8b 55 dc             	mov    -0x24(%ebp),%edx
84004d44:	8d 42 04             	lea    0x4(%edx),%eax
84004d47:	89 45 dc             	mov    %eax,-0x24(%ebp)
84004d4a:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d4d:	8d 48 04             	lea    0x4(%eax),%ecx
84004d50:	89 4d d8             	mov    %ecx,-0x28(%ebp)
84004d53:	8b 12                	mov    (%edx),%edx
84004d55:	89 10                	mov    %edx,(%eax)
84004d57:	8b 45 dc             	mov    -0x24(%ebp),%eax
84004d5a:	8b 10                	mov    (%eax),%edx
84004d5c:	8b 45 d8             	mov    -0x28(%ebp),%eax
84004d5f:	89 10                	mov    %edx,(%eax)
84004d61:	e9 12 03 00 00       	jmp    84005078 <_realloc_r+0x82b>
84004d66:	83 ec 04             	sub    $0x4,%esp
84004d69:	ff 75 a4             	pushl  -0x5c(%ebp)
84004d6c:	ff 75 0c             	pushl  0xc(%ebp)
84004d6f:	ff 75 a8             	pushl  -0x58(%ebp)
84004d72:	e8 49 fa ff ff       	call   840047c0 <memmove>
84004d77:	83 c4 10             	add    $0x10,%esp
84004d7a:	e9 f9 02 00 00       	jmp    84005078 <_realloc_r+0x82b>
84004d7f:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
84004d83:	0f 84 5b 01 00 00    	je     84004ee4 <_realloc_r+0x697>
84004d89:	8b 55 ac             	mov    -0x54(%ebp),%edx
84004d8c:	8b 45 f0             	mov    -0x10(%ebp),%eax
84004d8f:	01 d0                	add    %edx,%eax
84004d91:	89 c2                	mov    %eax,%edx
84004d93:	8b 45 bc             	mov    -0x44(%ebp),%eax
84004d96:	39 c2                	cmp    %eax,%edx
84004d98:	0f 8c 46 01 00 00    	jl     84004ee4 <_realloc_r+0x697>
84004d9e:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004da1:	8b 40 0c             	mov    0xc(%eax),%eax
84004da4:	89 45 b8             	mov    %eax,-0x48(%ebp)
84004da7:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004daa:	8b 40 08             	mov    0x8(%eax),%eax
84004dad:	89 45 b4             	mov    %eax,-0x4c(%ebp)
84004db0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
84004db3:	8b 55 b8             	mov    -0x48(%ebp),%edx
84004db6:	89 50 0c             	mov    %edx,0xc(%eax)
84004db9:	8b 45 b8             	mov    -0x48(%ebp),%eax
84004dbc:	8b 55 b4             	mov    -0x4c(%ebp),%edx
84004dbf:	89 50 08             	mov    %edx,0x8(%eax)
84004dc2:	8b 45 b0             	mov    -0x50(%ebp),%eax
84004dc5:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004dc8:	8b 45 ac             	mov    -0x54(%ebp),%eax
84004dcb:	01 45 f0             	add    %eax,-0x10(%ebp)
84004dce:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004dd1:	83 c0 08             	add    $0x8,%eax
84004dd4:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004dd7:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004dda:	83 e8 04             	sub    $0x4,%eax
84004ddd:	89 45 9c             	mov    %eax,-0x64(%ebp)
84004de0:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
84004de4:	0f 87 e1 00 00 00    	ja     84004ecb <_realloc_r+0x67e>
84004dea:	8b 45 0c             	mov    0xc(%ebp),%eax
84004ded:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004df0:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004df3:	89 45 d0             	mov    %eax,-0x30(%ebp)
84004df6:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
84004dfa:	0f 86 90 00 00 00    	jbe    84004e90 <_realloc_r+0x643>
84004e00:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e03:	8d 42 04             	lea    0x4(%edx),%eax
84004e06:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e09:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e0c:	8d 48 04             	lea    0x4(%eax),%ecx
84004e0f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e12:	8b 12                	mov    (%edx),%edx
84004e14:	89 10                	mov    %edx,(%eax)
84004e16:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e19:	8d 42 04             	lea    0x4(%edx),%eax
84004e1c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e1f:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e22:	8d 48 04             	lea    0x4(%eax),%ecx
84004e25:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e28:	8b 12                	mov    (%edx),%edx
84004e2a:	89 10                	mov    %edx,(%eax)
84004e2c:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
84004e30:	76 5e                	jbe    84004e90 <_realloc_r+0x643>
84004e32:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e35:	8d 42 04             	lea    0x4(%edx),%eax
84004e38:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e3b:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e3e:	8d 48 04             	lea    0x4(%eax),%ecx
84004e41:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e44:	8b 12                	mov    (%edx),%edx
84004e46:	89 10                	mov    %edx,(%eax)
84004e48:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e4b:	8d 42 04             	lea    0x4(%edx),%eax
84004e4e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e51:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e54:	8d 48 04             	lea    0x4(%eax),%ecx
84004e57:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e5a:	8b 12                	mov    (%edx),%edx
84004e5c:	89 10                	mov    %edx,(%eax)
84004e5e:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
84004e62:	76 2c                	jbe    84004e90 <_realloc_r+0x643>
84004e64:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e67:	8d 42 04             	lea    0x4(%edx),%eax
84004e6a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e6d:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e70:	8d 48 04             	lea    0x4(%eax),%ecx
84004e73:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e76:	8b 12                	mov    (%edx),%edx
84004e78:	89 10                	mov    %edx,(%eax)
84004e7a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e7d:	8d 42 04             	lea    0x4(%edx),%eax
84004e80:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e83:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e86:	8d 48 04             	lea    0x4(%eax),%ecx
84004e89:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004e8c:	8b 12                	mov    (%edx),%edx
84004e8e:	89 10                	mov    %edx,(%eax)
84004e90:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004e93:	8d 42 04             	lea    0x4(%edx),%eax
84004e96:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004e99:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004e9c:	8d 48 04             	lea    0x4(%eax),%ecx
84004e9f:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004ea2:	8b 12                	mov    (%edx),%edx
84004ea4:	89 10                	mov    %edx,(%eax)
84004ea6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
84004ea9:	8d 42 04             	lea    0x4(%edx),%eax
84004eac:	89 45 d4             	mov    %eax,-0x2c(%ebp)
84004eaf:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004eb2:	8d 48 04             	lea    0x4(%eax),%ecx
84004eb5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
84004eb8:	8b 12                	mov    (%edx),%edx
84004eba:	89 10                	mov    %edx,(%eax)
84004ebc:	8b 45 d4             	mov    -0x2c(%ebp),%eax
84004ebf:	8b 10                	mov    (%eax),%edx
84004ec1:	8b 45 d0             	mov    -0x30(%ebp),%eax
84004ec4:	89 10                	mov    %edx,(%eax)
84004ec6:	e9 ad 01 00 00       	jmp    84005078 <_realloc_r+0x82b>
84004ecb:	83 ec 04             	sub    $0x4,%esp
84004ece:	ff 75 9c             	pushl  -0x64(%ebp)
84004ed1:	ff 75 0c             	pushl  0xc(%ebp)
84004ed4:	ff 75 a8             	pushl  -0x58(%ebp)
84004ed7:	e8 e4 f8 ff ff       	call   840047c0 <memmove>
84004edc:	83 c4 10             	add    $0x10,%esp
84004edf:	e9 94 01 00 00       	jmp    84005078 <_realloc_r+0x82b>
84004ee4:	83 ec 08             	sub    $0x8,%esp
84004ee7:	ff 75 10             	pushl  0x10(%ebp)
84004eea:	ff 75 08             	pushl  0x8(%ebp)
84004eed:	e8 30 cd ff ff       	call   84001c22 <_malloc_r>
84004ef2:	83 c4 10             	add    $0x10,%esp
84004ef5:	89 45 a8             	mov    %eax,-0x58(%ebp)
84004ef8:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
84004efc:	75 18                	jne    84004f16 <_realloc_r+0x6c9>
84004efe:	83 ec 0c             	sub    $0xc,%esp
84004f01:	ff 75 08             	pushl  0x8(%ebp)
84004f04:	e8 c9 d5 ff ff       	call   840024d2 <__malloc_unlock>
84004f09:	83 c4 10             	add    $0x10,%esp
84004f0c:	b8 00 00 00 00       	mov    $0x0,%eax
84004f11:	e9 0f 02 00 00       	jmp    84005125 <_realloc_r+0x8d8>
84004f16:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004f19:	83 e8 08             	sub    $0x8,%eax
84004f1c:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004f1f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f22:	8b 40 04             	mov    0x4(%eax),%eax
84004f25:	83 e0 fe             	and    $0xfffffffe,%eax
84004f28:	89 c2                	mov    %eax,%edx
84004f2a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f2d:	01 d0                	add    %edx,%eax
84004f2f:	39 45 f4             	cmp    %eax,-0xc(%ebp)
84004f32:	75 17                	jne    84004f4b <_realloc_r+0x6fe>
84004f34:	8b 45 f4             	mov    -0xc(%ebp),%eax
84004f37:	8b 40 04             	mov    0x4(%eax),%eax
84004f3a:	83 e0 fc             	and    $0xfffffffc,%eax
84004f3d:	01 45 f0             	add    %eax,-0x10(%ebp)
84004f40:	8b 45 c4             	mov    -0x3c(%ebp),%eax
84004f43:	89 45 f4             	mov    %eax,-0xc(%ebp)
84004f46:	e9 2d 01 00 00       	jmp    84005078 <_realloc_r+0x82b>
84004f4b:	8b 45 c0             	mov    -0x40(%ebp),%eax
84004f4e:	83 e8 04             	sub    $0x4,%eax
84004f51:	89 45 98             	mov    %eax,-0x68(%ebp)
84004f54:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
84004f58:	0f 87 de 00 00 00    	ja     8400503c <_realloc_r+0x7ef>
84004f5e:	8b 45 0c             	mov    0xc(%ebp),%eax
84004f61:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f64:	8b 45 a8             	mov    -0x58(%ebp),%eax
84004f67:	89 45 c8             	mov    %eax,-0x38(%ebp)
84004f6a:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
84004f6e:	0f 86 90 00 00 00    	jbe    84005004 <_realloc_r+0x7b7>
84004f74:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004f77:	8d 42 04             	lea    0x4(%edx),%eax
84004f7a:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f7d:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004f80:	8d 48 04             	lea    0x4(%eax),%ecx
84004f83:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004f86:	8b 12                	mov    (%edx),%edx
84004f88:	89 10                	mov    %edx,(%eax)
84004f8a:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004f8d:	8d 42 04             	lea    0x4(%edx),%eax
84004f90:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004f93:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004f96:	8d 48 04             	lea    0x4(%eax),%ecx
84004f99:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004f9c:	8b 12                	mov    (%edx),%edx
84004f9e:	89 10                	mov    %edx,(%eax)
84004fa0:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
84004fa4:	76 5e                	jbe    84005004 <_realloc_r+0x7b7>
84004fa6:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fa9:	8d 42 04             	lea    0x4(%edx),%eax
84004fac:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004faf:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fb2:	8d 48 04             	lea    0x4(%eax),%ecx
84004fb5:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fb8:	8b 12                	mov    (%edx),%edx
84004fba:	89 10                	mov    %edx,(%eax)
84004fbc:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fbf:	8d 42 04             	lea    0x4(%edx),%eax
84004fc2:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fc5:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fc8:	8d 48 04             	lea    0x4(%eax),%ecx
84004fcb:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fce:	8b 12                	mov    (%edx),%edx
84004fd0:	89 10                	mov    %edx,(%eax)
84004fd2:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
84004fd6:	76 2c                	jbe    84005004 <_realloc_r+0x7b7>
84004fd8:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004fdb:	8d 42 04             	lea    0x4(%edx),%eax
84004fde:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004fe1:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004fe4:	8d 48 04             	lea    0x4(%eax),%ecx
84004fe7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84004fea:	8b 12                	mov    (%edx),%edx
84004fec:	89 10                	mov    %edx,(%eax)
84004fee:	8b 55 cc             	mov    -0x34(%ebp),%edx
84004ff1:	8d 42 04             	lea    0x4(%edx),%eax
84004ff4:	89 45 cc             	mov    %eax,-0x34(%ebp)
84004ff7:	8b 45 c8             	mov    -0x38(%ebp),%eax
84004ffa:	8d 48 04             	lea    0x4(%eax),%ecx
84004ffd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84005000:	8b 12                	mov    (%edx),%edx
84005002:	89 10                	mov    %edx,(%eax)
84005004:	8b 55 cc             	mov    -0x34(%ebp),%edx
84005007:	8d 42 04             	lea    0x4(%edx),%eax
8400500a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8400500d:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005010:	8d 48 04             	lea    0x4(%eax),%ecx
84005013:	89 4d c8             	mov    %ecx,-0x38(%ebp)
84005016:	8b 12                	mov    (%edx),%edx
84005018:	89 10                	mov    %edx,(%eax)
8400501a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8400501d:	8d 42 04             	lea    0x4(%edx),%eax
84005020:	89 45 cc             	mov    %eax,-0x34(%ebp)
84005023:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005026:	8d 48 04             	lea    0x4(%eax),%ecx
84005029:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8400502c:	8b 12                	mov    (%edx),%edx
8400502e:	89 10                	mov    %edx,(%eax)
84005030:	8b 45 cc             	mov    -0x34(%ebp),%eax
84005033:	8b 10                	mov    (%eax),%edx
84005035:	8b 45 c8             	mov    -0x38(%ebp),%eax
84005038:	89 10                	mov    %edx,(%eax)
8400503a:	eb 14                	jmp    84005050 <_realloc_r+0x803>
8400503c:	83 ec 04             	sub    $0x4,%esp
8400503f:	ff 75 98             	pushl  -0x68(%ebp)
84005042:	ff 75 0c             	pushl  0xc(%ebp)
84005045:	ff 75 a8             	pushl  -0x58(%ebp)
84005048:	e8 73 f7 ff ff       	call   840047c0 <memmove>
8400504d:	83 c4 10             	add    $0x10,%esp
84005050:	83 ec 08             	sub    $0x8,%esp
84005053:	ff 75 0c             	pushl  0xc(%ebp)
84005056:	ff 75 08             	pushl  0x8(%ebp)
84005059:	e8 a7 c2 ff ff       	call   84001305 <_free_r>
8400505e:	83 c4 10             	add    $0x10,%esp
84005061:	83 ec 0c             	sub    $0xc,%esp
84005064:	ff 75 08             	pushl  0x8(%ebp)
84005067:	e8 66 d4 ff ff       	call   840024d2 <__malloc_unlock>
8400506c:	83 c4 10             	add    $0x10,%esp
8400506f:	8b 45 a8             	mov    -0x58(%ebp),%eax
84005072:	e9 ae 00 00 00       	jmp    84005125 <_realloc_r+0x8d8>
84005077:	90                   	nop
84005078:	8b 45 f0             	mov    -0x10(%ebp),%eax
8400507b:	2b 45 bc             	sub    -0x44(%ebp),%eax
8400507e:	89 45 94             	mov    %eax,-0x6c(%ebp)
84005081:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
84005085:	76 5d                	jbe    840050e4 <_realloc_r+0x897>
84005087:	8b 55 f4             	mov    -0xc(%ebp),%edx
8400508a:	8b 45 bc             	mov    -0x44(%ebp),%eax
8400508d:	01 d0                	add    %edx,%eax
8400508f:	89 45 90             	mov    %eax,-0x70(%ebp)
84005092:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005095:	8b 40 04             	mov    0x4(%eax),%eax
84005098:	83 e0 01             	and    $0x1,%eax
8400509b:	0b 45 bc             	or     -0x44(%ebp),%eax
8400509e:	89 c2                	mov    %eax,%edx
840050a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050a3:	89 50 04             	mov    %edx,0x4(%eax)
840050a6:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050a9:	83 c8 01             	or     $0x1,%eax
840050ac:	89 c2                	mov    %eax,%edx
840050ae:	8b 45 90             	mov    -0x70(%ebp),%eax
840050b1:	89 50 04             	mov    %edx,0x4(%eax)
840050b4:	8b 55 90             	mov    -0x70(%ebp),%edx
840050b7:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050ba:	01 d0                	add    %edx,%eax
840050bc:	8b 50 04             	mov    0x4(%eax),%edx
840050bf:	8b 4d 90             	mov    -0x70(%ebp),%ecx
840050c2:	8b 45 94             	mov    -0x6c(%ebp),%eax
840050c5:	01 c8                	add    %ecx,%eax
840050c7:	83 ca 01             	or     $0x1,%edx
840050ca:	89 50 04             	mov    %edx,0x4(%eax)
840050cd:	8b 45 90             	mov    -0x70(%ebp),%eax
840050d0:	83 c0 08             	add    $0x8,%eax
840050d3:	83 ec 08             	sub    $0x8,%esp
840050d6:	50                   	push   %eax
840050d7:	ff 75 08             	pushl  0x8(%ebp)
840050da:	e8 26 c2 ff ff       	call   84001305 <_free_r>
840050df:	83 c4 10             	add    $0x10,%esp
840050e2:	eb 2d                	jmp    84005111 <_realloc_r+0x8c4>
840050e4:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050e7:	8b 40 04             	mov    0x4(%eax),%eax
840050ea:	83 e0 01             	and    $0x1,%eax
840050ed:	0b 45 f0             	or     -0x10(%ebp),%eax
840050f0:	89 c2                	mov    %eax,%edx
840050f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
840050f5:	89 50 04             	mov    %edx,0x4(%eax)
840050f8:	8b 55 f4             	mov    -0xc(%ebp),%edx
840050fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
840050fe:	01 d0                	add    %edx,%eax
84005100:	8b 50 04             	mov    0x4(%eax),%edx
84005103:	8b 4d f4             	mov    -0xc(%ebp),%ecx
84005106:	8b 45 f0             	mov    -0x10(%ebp),%eax
84005109:	01 c8                	add    %ecx,%eax
8400510b:	83 ca 01             	or     $0x1,%edx
8400510e:	89 50 04             	mov    %edx,0x4(%eax)
84005111:	83 ec 0c             	sub    $0xc,%esp
84005114:	ff 75 08             	pushl  0x8(%ebp)
84005117:	e8 b6 d3 ff ff       	call   840024d2 <__malloc_unlock>
8400511c:	83 c4 10             	add    $0x10,%esp
8400511f:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005122:	83 c0 08             	add    $0x8,%eax
84005125:	c9                   	leave  
84005126:	c3                   	ret    

84005127 <lflush>:
84005127:	55                   	push   %ebp
84005128:	89 e5                	mov    %esp,%ebp
8400512a:	83 ec 08             	sub    $0x8,%esp
8400512d:	8b 45 08             	mov    0x8(%ebp),%eax
84005130:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
84005134:	98                   	cwtl   
84005135:	83 e0 09             	and    $0x9,%eax
84005138:	83 f8 09             	cmp    $0x9,%eax
8400513b:	75 10                	jne    8400514d <lflush+0x26>
8400513d:	83 ec 0c             	sub    $0xc,%esp
84005140:	ff 75 08             	pushl  0x8(%ebp)
84005143:	e8 82 bd ff ff       	call   84000eca <fflush>
84005148:	83 c4 10             	add    $0x10,%esp
8400514b:	eb 05                	jmp    84005152 <lflush+0x2b>
8400514d:	b8 00 00 00 00       	mov    $0x0,%eax
84005152:	c9                   	leave  
84005153:	c3                   	ret    

84005154 <__srefill_r>:
84005154:	55                   	push   %ebp
84005155:	89 e5                	mov    %esp,%ebp
84005157:	56                   	push   %esi
84005158:	53                   	push   %ebx
84005159:	83 ec 10             	sub    $0x10,%esp
8400515c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8400515f:	8b 45 08             	mov    0x8(%ebp),%eax
84005162:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005165:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
84005169:	74 18                	je     84005183 <__srefill_r+0x2f>
8400516b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8400516e:	8b 40 38             	mov    0x38(%eax),%eax
84005171:	85 c0                	test   %eax,%eax
84005173:	75 0e                	jne    84005183 <__srefill_r+0x2f>
84005175:	83 ec 0c             	sub    $0xc,%esp
84005178:	ff 75 f4             	pushl  -0xc(%ebp)
8400517b:	e8 78 c0 ff ff       	call   840011f8 <__sinit>
84005180:	83 c4 10             	add    $0x10,%esp
84005183:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005187:	98                   	cwtl   
84005188:	25 00 20 00 00       	and    $0x2000,%eax
8400518d:	85 c0                	test   %eax,%eax
8400518f:	75 14                	jne    840051a5 <__srefill_r+0x51>
84005191:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005195:	80 cc 20             	or     $0x20,%ah
84005198:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400519c:	8b 43 64             	mov    0x64(%ebx),%eax
8400519f:	80 e4 df             	and    $0xdf,%ah
840051a2:	89 43 64             	mov    %eax,0x64(%ebx)
840051a5:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
840051ac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051b0:	98                   	cwtl   
840051b1:	83 e0 20             	and    $0x20,%eax
840051b4:	85 c0                	test   %eax,%eax
840051b6:	74 0a                	je     840051c2 <__srefill_r+0x6e>
840051b8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840051bd:	e9 8c 01 00 00       	jmp    8400534e <__srefill_r+0x1fa>
840051c2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051c6:	98                   	cwtl   
840051c7:	83 e0 04             	and    $0x4,%eax
840051ca:	85 c0                	test   %eax,%eax
840051cc:	75 79                	jne    84005247 <__srefill_r+0xf3>
840051ce:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051d2:	98                   	cwtl   
840051d3:	83 e0 10             	and    $0x10,%eax
840051d6:	85 c0                	test   %eax,%eax
840051d8:	75 1e                	jne    840051f8 <__srefill_r+0xa4>
840051da:	8b 45 08             	mov    0x8(%ebp),%eax
840051dd:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
840051e3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051e7:	83 c8 40             	or     $0x40,%eax
840051ea:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840051ee:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840051f3:	e9 56 01 00 00       	jmp    8400534e <__srefill_r+0x1fa>
840051f8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840051fc:	98                   	cwtl   
840051fd:	83 e0 08             	and    $0x8,%eax
84005200:	85 c0                	test   %eax,%eax
84005202:	74 36                	je     8400523a <__srefill_r+0xe6>
84005204:	83 ec 08             	sub    $0x8,%esp
84005207:	53                   	push   %ebx
84005208:	ff 75 08             	pushl  0x8(%ebp)
8400520b:	e8 62 bc ff ff       	call   84000e72 <_fflush_r>
84005210:	83 c4 10             	add    $0x10,%esp
84005213:	85 c0                	test   %eax,%eax
84005215:	74 0a                	je     84005221 <__srefill_r+0xcd>
84005217:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400521c:	e9 2d 01 00 00       	jmp    8400534e <__srefill_r+0x1fa>
84005221:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005225:	83 e0 f7             	and    $0xfffffff7,%eax
84005228:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400522c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
84005233:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8400523a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400523e:	83 c8 04             	or     $0x4,%eax
84005241:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84005245:	eb 46                	jmp    8400528d <__srefill_r+0x139>
84005247:	8b 43 30             	mov    0x30(%ebx),%eax
8400524a:	85 c0                	test   %eax,%eax
8400524c:	74 3f                	je     8400528d <__srefill_r+0x139>
8400524e:	8b 53 30             	mov    0x30(%ebx),%edx
84005251:	8d 43 40             	lea    0x40(%ebx),%eax
84005254:	39 c2                	cmp    %eax,%edx
84005256:	74 12                	je     8400526a <__srefill_r+0x116>
84005258:	8b 43 30             	mov    0x30(%ebx),%eax
8400525b:	83 ec 08             	sub    $0x8,%esp
8400525e:	50                   	push   %eax
8400525f:	ff 75 08             	pushl  0x8(%ebp)
84005262:	e8 9e c0 ff ff       	call   84001305 <_free_r>
84005267:	83 c4 10             	add    $0x10,%esp
8400526a:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
84005271:	8b 43 3c             	mov    0x3c(%ebx),%eax
84005274:	89 43 04             	mov    %eax,0x4(%ebx)
84005277:	8b 43 04             	mov    0x4(%ebx),%eax
8400527a:	85 c0                	test   %eax,%eax
8400527c:	74 0f                	je     8400528d <__srefill_r+0x139>
8400527e:	8b 43 38             	mov    0x38(%ebx),%eax
84005281:	89 03                	mov    %eax,(%ebx)
84005283:	b8 00 00 00 00       	mov    $0x0,%eax
84005288:	e9 c1 00 00 00       	jmp    8400534e <__srefill_r+0x1fa>
8400528d:	8b 43 10             	mov    0x10(%ebx),%eax
84005290:	85 c0                	test   %eax,%eax
84005292:	75 0f                	jne    840052a3 <__srefill_r+0x14f>
84005294:	83 ec 08             	sub    $0x8,%esp
84005297:	53                   	push   %ebx
84005298:	ff 75 08             	pushl  0x8(%ebp)
8400529b:	e8 6a da ff ff       	call   84002d0a <__smakebuf_r>
840052a0:	83 c4 10             	add    $0x10,%esp
840052a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052a7:	98                   	cwtl   
840052a8:	83 e0 03             	and    $0x3,%eax
840052ab:	85 c0                	test   %eax,%eax
840052ad:	74 48                	je     840052f7 <__srefill_r+0x1a3>
840052af:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052b3:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
840052b7:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
840052bd:	a1 18 56 00 84       	mov    0x84005618,%eax
840052c2:	83 ec 08             	sub    $0x8,%esp
840052c5:	68 27 51 00 84       	push   $0x84005127
840052ca:	50                   	push   %eax
840052cb:	e8 71 c5 ff ff       	call   84001841 <_fwalk>
840052d0:	83 c4 10             	add    $0x10,%esp
840052d3:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
840052d7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
840052db:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
840052df:	98                   	cwtl   
840052e0:	83 e0 09             	and    $0x9,%eax
840052e3:	83 f8 09             	cmp    $0x9,%eax
840052e6:	75 0f                	jne    840052f7 <__srefill_r+0x1a3>
840052e8:	83 ec 08             	sub    $0x8,%esp
840052eb:	53                   	push   %ebx
840052ec:	ff 75 08             	pushl  0x8(%ebp)
840052ef:	e8 58 b9 ff ff       	call   84000c4c <__sflush_r>
840052f4:	83 c4 10             	add    $0x10,%esp
840052f7:	8b 43 10             	mov    0x10(%ebx),%eax
840052fa:	89 03                	mov    %eax,(%ebx)
840052fc:	8b 43 20             	mov    0x20(%ebx),%eax
840052ff:	8b 73 14             	mov    0x14(%ebx),%esi
84005302:	8b 0b                	mov    (%ebx),%ecx
84005304:	8b 53 1c             	mov    0x1c(%ebx),%edx
84005307:	56                   	push   %esi
84005308:	51                   	push   %ecx
84005309:	52                   	push   %edx
8400530a:	ff 75 08             	pushl  0x8(%ebp)
8400530d:	ff d0                	call   *%eax
8400530f:	83 c4 10             	add    $0x10,%esp
84005312:	89 43 04             	mov    %eax,0x4(%ebx)
84005315:	8b 43 04             	mov    0x4(%ebx),%eax
84005318:	85 c0                	test   %eax,%eax
8400531a:	7f 2d                	jg     84005349 <__srefill_r+0x1f5>
8400531c:	8b 43 04             	mov    0x4(%ebx),%eax
8400531f:	85 c0                	test   %eax,%eax
84005321:	75 0d                	jne    84005330 <__srefill_r+0x1dc>
84005323:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
84005327:	83 c8 20             	or     $0x20,%eax
8400532a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8400532e:	eb 12                	jmp    84005342 <__srefill_r+0x1ee>
84005330:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
84005337:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8400533b:	83 c8 40             	or     $0x40,%eax
8400533e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
84005342:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
84005347:	eb 05                	jmp    8400534e <__srefill_r+0x1fa>
84005349:	b8 00 00 00 00       	mov    $0x0,%eax
8400534e:	8d 65 f8             	lea    -0x8(%ebp),%esp
84005351:	5b                   	pop    %ebx
84005352:	5e                   	pop    %esi
84005353:	5d                   	pop    %ebp
84005354:	c3                   	ret    

84005355 <strcmp>:
84005355:	55                   	push   %ebp
84005356:	89 e5                	mov    %esp,%ebp
84005358:	83 ec 10             	sub    $0x10,%esp
8400535b:	8b 55 08             	mov    0x8(%ebp),%edx
8400535e:	8b 45 0c             	mov    0xc(%ebp),%eax
84005361:	09 d0                	or     %edx,%eax
84005363:	83 e0 03             	and    $0x3,%eax
84005366:	85 c0                	test   %eax,%eax
84005368:	75 5e                	jne    840053c8 <strcmp+0x73>
8400536a:	8b 45 08             	mov    0x8(%ebp),%eax
8400536d:	89 45 fc             	mov    %eax,-0x4(%ebp)
84005370:	8b 45 0c             	mov    0xc(%ebp),%eax
84005373:	89 45 f8             	mov    %eax,-0x8(%ebp)
84005376:	eb 2c                	jmp    840053a4 <strcmp+0x4f>
84005378:	8b 45 fc             	mov    -0x4(%ebp),%eax
8400537b:	8b 00                	mov    (%eax),%eax
8400537d:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
84005383:	8b 45 fc             	mov    -0x4(%ebp),%eax
84005386:	8b 00                	mov    (%eax),%eax
84005388:	f7 d0                	not    %eax
8400538a:	21 d0                	and    %edx,%eax
8400538c:	25 80 80 80 80       	and    $0x80808080,%eax
84005391:	85 c0                	test   %eax,%eax
84005393:	74 07                	je     8400539c <strcmp+0x47>
84005395:	b8 00 00 00 00       	mov    $0x0,%eax
8400539a:	eb 5c                	jmp    840053f8 <strcmp+0xa3>
8400539c:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
840053a0:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
840053a4:	8b 45 fc             	mov    -0x4(%ebp),%eax
840053a7:	8b 10                	mov    (%eax),%edx
840053a9:	8b 45 f8             	mov    -0x8(%ebp),%eax
840053ac:	8b 00                	mov    (%eax),%eax
840053ae:	39 c2                	cmp    %eax,%edx
840053b0:	74 c6                	je     84005378 <strcmp+0x23>
840053b2:	8b 45 fc             	mov    -0x4(%ebp),%eax
840053b5:	89 45 08             	mov    %eax,0x8(%ebp)
840053b8:	8b 45 f8             	mov    -0x8(%ebp),%eax
840053bb:	89 45 0c             	mov    %eax,0xc(%ebp)
840053be:	eb 08                	jmp    840053c8 <strcmp+0x73>
840053c0:	83 45 08 01          	addl   $0x1,0x8(%ebp)
840053c4:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
840053c8:	8b 45 08             	mov    0x8(%ebp),%eax
840053cb:	0f b6 00             	movzbl (%eax),%eax
840053ce:	84 c0                	test   %al,%al
840053d0:	74 10                	je     840053e2 <strcmp+0x8d>
840053d2:	8b 45 08             	mov    0x8(%ebp),%eax
840053d5:	0f b6 10             	movzbl (%eax),%edx
840053d8:	8b 45 0c             	mov    0xc(%ebp),%eax
840053db:	0f b6 00             	movzbl (%eax),%eax
840053de:	38 c2                	cmp    %al,%dl
840053e0:	74 de                	je     840053c0 <strcmp+0x6b>
840053e2:	8b 45 08             	mov    0x8(%ebp),%eax
840053e5:	0f b6 00             	movzbl (%eax),%eax
840053e8:	0f b6 d0             	movzbl %al,%edx
840053eb:	8b 45 0c             	mov    0xc(%ebp),%eax
840053ee:	0f b6 00             	movzbl (%eax),%eax
840053f1:	0f b6 c8             	movzbl %al,%ecx
840053f4:	89 d0                	mov    %edx,%eax
840053f6:	29 c8                	sub    %ecx,%eax
840053f8:	c9                   	leave  
840053f9:	c3                   	ret    

840053fa <__get_global_locale>:
840053fa:	55                   	push   %ebp
840053fb:	89 e5                	mov    %esp,%ebp
840053fd:	b8 00 62 00 84       	mov    $0x84006200,%eax
84005402:	5d                   	pop    %ebp
84005403:	c3                   	ret    

84005404 <__get_current_locale>:
84005404:	55                   	push   %ebp
84005405:	89 e5                	mov    %esp,%ebp
84005407:	e8 ee ff ff ff       	call   840053fa <__get_global_locale>
8400540c:	5d                   	pop    %ebp
8400540d:	c3                   	ret    

8400540e <_wcrtomb_r>:
8400540e:	55                   	push   %ebp
8400540f:	89 e5                	mov    %esp,%ebp
84005411:	83 ec 18             	sub    $0x18,%esp
84005414:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8400541b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400541f:	75 21                	jne    84005442 <_wcrtomb_r+0x34>
84005421:	e8 de ff ff ff       	call   84005404 <__get_current_locale>
84005426:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8400542c:	ff 75 14             	pushl  0x14(%ebp)
8400542f:	6a 00                	push   $0x0
84005431:	8d 55 ea             	lea    -0x16(%ebp),%edx
84005434:	52                   	push   %edx
84005435:	ff 75 08             	pushl  0x8(%ebp)
84005438:	ff d0                	call   *%eax
8400543a:	83 c4 10             	add    $0x10,%esp
8400543d:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005440:	eb 1f                	jmp    84005461 <_wcrtomb_r+0x53>
84005442:	e8 bd ff ff ff       	call   84005404 <__get_current_locale>
84005447:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8400544d:	ff 75 14             	pushl  0x14(%ebp)
84005450:	ff 75 10             	pushl  0x10(%ebp)
84005453:	ff 75 0c             	pushl  0xc(%ebp)
84005456:	ff 75 08             	pushl  0x8(%ebp)
84005459:	ff d0                	call   *%eax
8400545b:	83 c4 10             	add    $0x10,%esp
8400545e:	89 45 f4             	mov    %eax,-0xc(%ebp)
84005461:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
84005465:	75 19                	jne    84005480 <_wcrtomb_r+0x72>
84005467:	8b 45 14             	mov    0x14(%ebp),%eax
8400546a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
84005470:	8b 45 08             	mov    0x8(%ebp),%eax
84005473:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005479:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400547e:	eb 03                	jmp    84005483 <_wcrtomb_r+0x75>
84005480:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005483:	c9                   	leave  
84005484:	c3                   	ret    

84005485 <wcrtomb>:
84005485:	55                   	push   %ebp
84005486:	89 e5                	mov    %esp,%ebp
84005488:	83 ec 28             	sub    $0x28,%esp
8400548b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
84005492:	a1 c4 5d 00 84       	mov    0x84005dc4,%eax
84005497:	89 45 f0             	mov    %eax,-0x10(%ebp)
8400549a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8400549e:	75 21                	jne    840054c1 <wcrtomb+0x3c>
840054a0:	e8 5f ff ff ff       	call   84005404 <__get_current_locale>
840054a5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
840054ab:	ff 75 10             	pushl  0x10(%ebp)
840054ae:	6a 00                	push   $0x0
840054b0:	8d 55 e6             	lea    -0x1a(%ebp),%edx
840054b3:	52                   	push   %edx
840054b4:	ff 75 f0             	pushl  -0x10(%ebp)
840054b7:	ff d0                	call   *%eax
840054b9:	83 c4 10             	add    $0x10,%esp
840054bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
840054bf:	eb 1f                	jmp    840054e0 <wcrtomb+0x5b>
840054c1:	e8 3e ff ff ff       	call   84005404 <__get_current_locale>
840054c6:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
840054cc:	ff 75 10             	pushl  0x10(%ebp)
840054cf:	ff 75 0c             	pushl  0xc(%ebp)
840054d2:	ff 75 08             	pushl  0x8(%ebp)
840054d5:	ff 75 f0             	pushl  -0x10(%ebp)
840054d8:	ff d0                	call   *%eax
840054da:	83 c4 10             	add    $0x10,%esp
840054dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
840054e0:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
840054e4:	75 19                	jne    840054ff <wcrtomb+0x7a>
840054e6:	8b 45 10             	mov    0x10(%ebp),%eax
840054e9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
840054ef:	8b 45 f0             	mov    -0x10(%ebp),%eax
840054f2:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
840054f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
840054fd:	eb 03                	jmp    84005502 <wcrtomb+0x7d>
840054ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
84005502:	c9                   	leave  
84005503:	c3                   	ret    

84005504 <__get_global_locale>:
84005504:	55                   	push   %ebp
84005505:	89 e5                	mov    %esp,%ebp
84005507:	b8 00 62 00 84       	mov    $0x84006200,%eax
8400550c:	5d                   	pop    %ebp
8400550d:	c3                   	ret    

8400550e <__get_current_locale>:
8400550e:	55                   	push   %ebp
8400550f:	89 e5                	mov    %esp,%ebp
84005511:	e8 ee ff ff ff       	call   84005504 <__get_global_locale>
84005516:	5d                   	pop    %ebp
84005517:	c3                   	ret    

84005518 <_wctomb_r>:
84005518:	55                   	push   %ebp
84005519:	89 e5                	mov    %esp,%ebp
8400551b:	83 ec 08             	sub    $0x8,%esp
8400551e:	e8 eb ff ff ff       	call   8400550e <__get_current_locale>
84005523:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
84005529:	ff 75 14             	pushl  0x14(%ebp)
8400552c:	ff 75 10             	pushl  0x10(%ebp)
8400552f:	ff 75 0c             	pushl  0xc(%ebp)
84005532:	ff 75 08             	pushl  0x8(%ebp)
84005535:	ff d0                	call   *%eax
84005537:	83 c4 10             	add    $0x10,%esp
8400553a:	c9                   	leave  
8400553b:	c3                   	ret    

8400553c <__ascii_wctomb>:
8400553c:	55                   	push   %ebp
8400553d:	89 e5                	mov    %esp,%ebp
8400553f:	83 ec 10             	sub    $0x10,%esp
84005542:	8b 45 10             	mov    0x10(%ebp),%eax
84005545:	89 45 fc             	mov    %eax,-0x4(%ebp)
84005548:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8400554c:	75 07                	jne    84005555 <__ascii_wctomb+0x19>
8400554e:	b8 00 00 00 00       	mov    $0x0,%eax
84005553:	eb 28                	jmp    8400557d <__ascii_wctomb+0x41>
84005555:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8400555c:	76 10                	jbe    8400556e <__ascii_wctomb+0x32>
8400555e:	8b 45 08             	mov    0x8(%ebp),%eax
84005561:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
84005567:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8400556c:	eb 0f                	jmp    8400557d <__ascii_wctomb+0x41>
8400556e:	8b 45 fc             	mov    -0x4(%ebp),%eax
84005571:	89 c2                	mov    %eax,%edx
84005573:	8b 45 0c             	mov    0xc(%ebp),%eax
84005576:	88 10                	mov    %dl,(%eax)
84005578:	b8 01 00 00 00       	mov    $0x1,%eax
8400557d:	c9                   	leave  
8400557e:	c3                   	ret    
