
E:/diy-x86os/start/test/build/source/shell/shell.elf:     file format elf32-i386
E:/diy-x86os/start/test/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000aed

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00009670 memsz 0x00009c20 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000854a  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000071d  81008560  81008560  00009560  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008c80  81008c80  00009c80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000005a0  81009680  81009680  0000a670  2**5
                  ALLOC
  4 .debug_info   0002a823  00000000  00000000  0000a670  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000973a  00000000  00000000  00034e93  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000988  00000000  00000000  0003e5d0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_ranges 00000030  00000000  00000000  0003ef58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005e46  00000000  00000000  0003ef88  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000017c2  00000000  00000000  00044dce  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      00000023  00000000  00000000  00046590  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001ea4  00000000  00000000  000465b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line_str 00001422  00000000  00000000  00048458  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_rnglists 0000004e  00000000  00000000  0004987a  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
81008560 l    d  .rodata	00000000 .rodata
81008c80 l    d  .data	00000000 .data
81009680 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
81009680 l     O .bss	0000040c cli
81008c80 l     O .data	00000004 promot
81000000 l     F .text	00000033 show_promot
81000033 l     F .text	00000042 do_help
81000075 l     F .text	00000037 do_clear
810000ac l     F .text	000001a0 do_echo
8100024c l     F .text	00000010 do_exit
8100025c l     F .text	0000029c do_less
810004f8 l     F .text	000000aa do_ls
810005a2 l     F .text	00000107 do_cp
810006a9 l     F .text	00000078 do_remove
810087a0 l     O .rodata	00000060 cmd_list
81000721 l     F .text	00000048 cli_init
81000769 l     F .text	00000044 find_builtin
810007ad l     F .text	00000042 run_builtin
810007ef l     F .text	00000081 find_exec_path
81009aa0 l     O .bss	000000ff path.3902
81000870 l     F .text	000000b2 run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
81000b3b l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgetc.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
810015e2 l     F .text	000000ad std
8100168f l     F .text	0000001b stdin_init
810016aa l     F .text	0000001b stdout_init
810016c5 l     F .text	0000001b stderr_init
81009ba0 l     O .bss	00000004 __sfp_recursive_mutex
81009ba4 l     O .bss	00000004 __sinit_recursive_mutex
81001988 l     F .text	0000000a __fp_lock
81001992 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81009bb0 l     O .bss	00000004 optwhere
81009bb4 l     O .bss	00000004 permute_from
81009bb8 l     O .bss	00000004 num_nonopts
81002f67 l     F .text	0000007b reverse_argv_elements
81002fe2 l     F .text	00000036 permute
81003018 l     F .text	00000031 is_option
81003049 l     F .text	00000059 read_globals
810030a2 l     F .text	00000052 write_globals
810030f4 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 impure.c
81008ca0 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003f0e l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81004a5d l       .text	00000000 L20
81004a14 l       .text	00000000 L5
81004a5a l       .text	00000000 L15
81004a20 l       .text	00000000 L8
81004a41 l       .text	00000000 L9
81004a50 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
81004aaf l       .text	00000000 L4
81004aa1 l       .text	00000000 BYTECMP
81004a9c l       .text	00000000 L5
81004aa3 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81009c08 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004cfd l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
8100637b l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
81006aeb l       .text	00000000 L25
81006a92 l       .text	00000000 L5
81006ade l       .text	00000000 L14
81006ae4 l       .text	00000000 L19
81006aa3 l       .text	00000000 L10
81006ad0 l       .text	00000000 L9
81006ad3 l       .text	00000000 L15
81006b1e l       .text	00000000 L26
81006b21 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81006c26 l       .text	00000000 L5
81006c5e l       .text	00000000 L15
81006c30 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strlwr.c
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
81006dc4 l     F .text	0000000a __locale_ctype_ptr_l
81006dce l     F .text	0000000a __get_global_locale
81006dd8 l     F .text	0000000a __get_current_locale
81006de2 l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81009c10 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputwc.c
810075a8 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810094f0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
810078e7 l     F .text	0000000a __get_global_locale
810078f1 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810079d3 l     F .text	0000000a __get_global_locale
810079dd l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
8100818c l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
810083b9 l     F .text	0000000a __get_global_locale
810083c3 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810084c3 l     F .text	0000000a __get_global_locale
810084cd l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81009c18 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81009c1c l     O .bss	00000004 __env_recursive_mutex
810078a7 g     F .text	00000040 _isatty_r
810061e4 g     F .text	00000037 cleanup_glue
81005818 g     F .text	000000d6 _puts_r
8100798d g     F .text	00000046 _lseek_r
81000c3f g     F .text	0000001b yield
81006875 g     F .text	00000055 _siprintf_r
8100745a g     F .text	000000ba __sflags
81000df5 g     F .text	00000033 ioctl
81006daa g     F .text	0000001a strtok_r
810057e3 g     F .text	00000035 printf
810083cd g     F .text	00000077 _wcrtomb_r
810069cb g     F .text	0000004a __sseek
810018d7 g     F .text	00000099 __sinit
81007027 g     F .text	00000112 __swbuf_r
810078fb g     F .text	0000005f _setlocale_r
810016e0 g     F .text	0000006f __sfmoreglue
81004c1b g     F .text	00000006 __malloc_unlock
81006c69 g     F .text	00000058 strlwr
81004b00 g       .text	00000000 memmove
81003c50 g     F .text	00000049 getopt_long
810018bd g     F .text	0000001a _cleanup
81006cea g     F .text	000000c0 __strtok_r
81007450 g     F .text	0000000a __errno
8100777d g     F .text	00000020 getenv
810028d6 g     F .text	00000043 _fstat_r
81009c0c g     O .bss	00000004 errno
8100660c g     F .text	0000001d __srget
81006966 g     F .text	0000000a __seofread
81000c12 g     F .text	0000002d execve
81000bb5 g     F .text	0000001b getpid
810015c3 g     F .text	0000001f fgets
81004ab8 g       .text	00000000 memcpy
81006669 g     F .text	0000020c setvbuf
8100189c g     F .text	00000021 _cleanup_r
81007e52 g     F .text	0000033a _svfprintf_r
810058ee g     F .text	0000001c puts
81003ed5 g     F .text	0000001c malloc
810057b6 g     F .text	0000002d _printf_r
81000d92 g     F .text	00000021 isatty
81009ba8 g     O .bss	00000004 optarg
81009bc0 g     O .bss	00000004 __malloc_top_pad
81009680 g       .bss	00000000 __bss_start__
81002919 g     F .text	0000049e __sfvwrite_r
81006629 g     F .text	00000040 _sbrk_r
81008c84 g     O .data	00000004 opterr
81000e93 g     F .text	00000040 readdir
81008290 g     F .text	00000046 _read_r
81000fa0 g     F .text	00000107 _fclose_r
81001342 g     F .text	00000039 fflush
81009bc4 g     O .bss	00000004 __malloc_max_sbrked_mem
8100137b g     F .text	00000071 _fgetc_r
81000d3e g     F .text	0000002d lseek
81008904 g     O .rodata	00000004 _global_impure_ptr
8100590a g     F .text	000008da _realloc_r
81006fd9 g     F .text	00000025 strtol_l
810076be g     F .text	00000057 _fputwc_r
8100199c g     F .text	00000024 __fp_lock_all
81006ffe g     F .text	00000029 strtol
81002405 g     F .text	000004b1 _fseeko_r
8100621b g     F .text	00000160 _reclaim_reent
81007514 g     F .text	00000046 _fputc_r
81000cf0 g     F .text	0000002d write
810081f2 g     F .text	0000004b _putc_r
8100966c g     O .data	00000004 environ
81000d6b g     F .text	00000027 fstat
81001b01 g     F .text	0000002c fprintf
81003d2e g     F .text	00000027 __getopt_long_only_r
810028b6 g     F .text	00000020 fseeko
81000f42 g     F .text	0000001a _atoi_r
81007a69 g     F .text	000001b7 __ssputs_r
810023e5 g     F .text	00000020 fseek
81004d63 g     F .text	000000a8 __sfputs_r
81009bac g     O .bss	00000004 optind
81001970 g     F .text	00000006 __sfp_lock_acquire
810049d0 g       .text	00000000 memchr
81006875 g     F .text	00000055 _sprintf_r
81009c20 g       .bss	00000000 __bss_end__
81001e8c g     F .text	000003db _free_r
81000c5a g     F .text	00000021 wait
810089e0 g     O .rodata	00000180 _ctype_b
8100795a g     F .text	00000014 __locale_mb_cur_max
810065a9 g     F .text	00000063 __srget_r
810072fb g     F .text	00000115 __call_exitprocs
810094ec g     O .data	00000004 __malloc_sbrk_base
81000aed g       .text	00000000 _start
81000cc3 g     F .text	0000002d read
81007c20 g     F .text	00000232 __ssprint_r
81005770 g     F .text	00000046 _open_r
810082d6 g     F .text	000000e3 strncmp
81003d07 g     F .text	00000027 __getopt_long_r
81009be0 g     O .bss	00000028 __malloc_current_mallinfo
81000f07 g     F .text	00000021 unlink
810057b6 g     F .text	0000002d _iprintf_r
81007410 g     F .text	00000040 _close_r
81006cc1 g     F .text	00000029 strtok
81004a65 g       .text	00000000 memcmp
81002e8a g     F .text	000000b8 _fwrite_r
81000bf7 g     F .text	0000001b fork
810071a0 g     F .text	0000015b __swsetup_r
8100174f g     F .text	0000014d __sfp
810090e0 g     O .data	00000408 __malloc_av_
81001982 g     F .text	00000006 __sinit_lock_release
81006922 g     F .text	00000044 __sread
81001e67 g     F .text	00000025 fread
81004c15 g     F .text	00000006 __malloc_lock
81001ad8 g     F .text	00000029 _fprintf_r
81000db3 g     F .text	00000021 sbrk
810012ea g     F .text	00000058 _fflush_r
81000afd g     F .text	0000003e cstart
81001ab9 g     F .text	0000001f fopen
81003c09 g     F .text	00000047 getopt
81004b8d g       .text	00000000 memset
81000922 g     F .text	000001cb main
81009bc8 g     O .bss	00000004 __malloc_max_total_mem
81007139 g     F .text	00000021 __swbuf
81001bf2 g     F .text	00000275 _fread_r
81006a15 g     F .text	00000025 __sclose
810010a7 g     F .text	0000001d fclose
81006fb4 g     F .text	00000025 _strtol_r
8100779d g     F .text	000000ed _findenv_r
810041a1 g     F .text	00000822 _malloc_r
810084fb g     F .text	00000043 __ascii_wctomb
81000e28 g     F .text	0000006b opendir
81001ad8 g     F .text	00000029 _fiprintf_r
81008544 g     F .text	00000006 __env_unlock
8100775d g     F .text	00000020 _findenv
81002db7 g     F .text	00000068 _fwalk
81001465 g     F .text	0000015e _fgets_r
810079e7 g     F .text	0000002a _mbtowc_r
8100823d g     F .text	00000053 putc
81003c99 g     F .text	00000049 getopt_long_only
81002267 g     F .text	00000161 _malloc_trim_r
81006b3c g     F .text	000000a5 strcmp
81004e0b g     F .text	00000025 vfiprintf
81000dd4 g     F .text	00000021 dup
810057e3 g     F .text	00000035 iprintf
810013ec g     F .text	00000079 fgetc
810068ca g     F .text	00000058 sprintf
81009c14 g     O .bss	00000004 _PathLocale
8100715a g     F .text	00000046 _write_r
8100796e g     F .text	0000001f setlocale
81005186 g     F .text	0000019b _printf_common
810090c4 g     O .data	00000004 _impure_ptr
810010c4 g     F .text	00000226 __sflush_r
810023c8 g     F .text	0000001d _fseek_r
81007e52 g     F .text	0000033a _svfiprintf_r
810063a8 g     F .text	00000201 __srefill_r
81007a11 g     F .text	00000058 __ascii_mbtowc
810019c0 g     F .text	00000024 __fp_unlock_all
8100755a g     F .text	0000004e fputc
81000bd0 g     F .text	00000027 print_msg
81008c88 g     O .data	00000004 optopt
81003e42 g     F .text	00000093 __swhatbuf_r
81002f42 g     F .text	00000025 fwrite
8100760e g     F .text	000000b0 __fputwc
81001b2d g     F .text	000000a6 _fputs_r
81006970 g     F .text	0000005b __swrite
810094e8 g     O .data	00000004 __malloc_trim_threshold
81000f5c g     F .text	00000044 exit
81001b01 g     F .text	0000002c fiprintf
81004e30 g     F .text	00000356 _vfiprintf_r
81002e1f g     F .text	0000006b _fwalk_reent
81001976 g     F .text	00000006 __sfp_lock_release
810068ca g     F .text	00000058 siprintf
81000f28 g     F .text	0000001a atoi
81008b60 g     O .rodata	00000101 _ctype_
81003ce2 g     F .text	00000025 __getopt_r
810019e4 g     F .text	000000d5 _fopen_r
81000c7b g     F .text	00000021 _exit
81003d55 g     F .text	000000ed __smakebuf_r
81006bf0 g       .text	00000000 strlen
81005321 g     F .text	0000044f _printf_i
81000c9c g     F .text	00000027 open
81004c21 g     F .text	000000dc __sprint_r
81006a40 g       .text	00000000 strchr
81001bd3 g     F .text	0000001f fputs
81000ed3 g     F .text	00000034 closedir
810084d7 g     F .text	00000024 _wctomb_r
8100853e g     F .text	00000006 __env_lock
81004e30 g     F .text	00000356 _vfprintf_r
81000b87 g     F .text	0000002e msleep
81008444 g     F .text	0000007f wcrtomb
81000d1d g     F .text	00000021 close
81009500 g     O .data	0000016c __global_locale
81004e0b g     F .text	00000025 vfprintf
81007715 g     F .text	00000048 fputwc
81003ef1 g     F .text	0000001d free
8100197c g     F .text	00000006 __sinit_lock_acquire
8100788a g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <show_promot>:
static const char * promot = "sh >>";       // 命令行提示符

/**
 * 显示命令行提示符
 */
static void show_promot(void) {
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 08             	sub    $0x8,%esp
    printf("%s", cli.promot);
81000006:	a1 88 9a 00 81       	mov    0x81009a88,%eax
8100000b:	83 ec 08             	sub    $0x8,%esp
8100000e:	50                   	push   %eax
8100000f:	68 66 85 00 81       	push   $0x81008566
81000014:	e8 ca 57 00 00       	call   810057e3 <iprintf>
81000019:	83 c4 10             	add    $0x10,%esp
    fflush(stdout);
8100001c:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81000021:	8b 40 08             	mov    0x8(%eax),%eax
81000024:	83 ec 0c             	sub    $0xc,%esp
81000027:	50                   	push   %eax
81000028:	e8 15 13 00 00       	call   81001342 <fflush>
8100002d:	83 c4 10             	add    $0x10,%esp
}
81000030:	90                   	nop
81000031:	c9                   	leave  
81000032:	c3                   	ret    

81000033 <do_help>:

/**
 * help命令
 */
static int do_help(int argc, char **argv) {
81000033:	55                   	push   %ebp
81000034:	89 e5                	mov    %esp,%ebp
81000036:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t * start = cli.cmd_start;
81000039:	a1 80 9a 00 81       	mov    0x81009a80,%eax
8100003e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    // 循环打印名称及用法
    while (start < cli.cmd_end) {
81000041:	eb 21                	jmp    81000064 <do_help+0x31>
        printf("%s %s\n",  start->name, start->useage);
81000043:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000046:	8b 50 04             	mov    0x4(%eax),%edx
81000049:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100004c:	8b 00                	mov    (%eax),%eax
8100004e:	83 ec 04             	sub    $0x4,%esp
81000051:	52                   	push   %edx
81000052:	50                   	push   %eax
81000053:	68 69 85 00 81       	push   $0x81008569
81000058:	e8 86 57 00 00       	call   810057e3 <iprintf>
8100005d:	83 c4 10             	add    $0x10,%esp
        start++;
81000060:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while (start < cli.cmd_end) {
81000064:	a1 84 9a 00 81       	mov    0x81009a84,%eax
81000069:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100006c:	72 d5                	jb     81000043 <do_help+0x10>
    }
    return 0;
8100006e:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000073:	c9                   	leave  
81000074:	c3                   	ret    

81000075 <do_clear>:

/**
 * 清屏命令
 */
static int do_clear (int argc, char ** argv) {
81000075:	55                   	push   %ebp
81000076:	89 e5                	mov    %esp,%ebp
81000078:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
8100007b:	83 ec 08             	sub    $0x8,%esp
8100007e:	68 70 85 00 81       	push   $0x81008570
81000083:	68 66 85 00 81       	push   $0x81008566
81000088:	e8 56 57 00 00       	call   810057e3 <iprintf>
8100008d:	83 c4 10             	add    $0x10,%esp
    printf("%s", ESC_MOVE_CURSOR(0, 0));
81000090:	83 ec 08             	sub    $0x8,%esp
81000093:	68 75 85 00 81       	push   $0x81008575
81000098:	68 66 85 00 81       	push   $0x81008566
8100009d:	e8 41 57 00 00       	call   810057e3 <iprintf>
810000a2:	83 c4 10             	add    $0x10,%esp
    return 0;
810000a5:	b8 00 00 00 00       	mov    $0x0,%eax
}
810000aa:	c9                   	leave  
810000ab:	c3                   	ret    

810000ac <do_echo>:

/**
 * 回显命令
 */
static int do_echo (int argc, char ** argv) {
810000ac:	55                   	push   %ebp
810000ad:	89 e5                	mov    %esp,%ebp
810000af:	81 ec 98 00 00 00    	sub    $0x98,%esp
    // 只有一个参数，需要先手动输入，再输出
    if (argc == 1) {
810000b5:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810000b9:	75 40                	jne    810000fb <do_echo+0x4f>
        char msg_buf[128];

        fgets(msg_buf, sizeof(msg_buf), stdin);
810000bb:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810000c0:	8b 40 04             	mov    0x4(%eax),%eax
810000c3:	83 ec 04             	sub    $0x4,%esp
810000c6:	50                   	push   %eax
810000c7:	68 80 00 00 00       	push   $0x80
810000cc:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000d2:	50                   	push   %eax
810000d3:	e8 eb 14 00 00       	call   810015c3 <fgets>
810000d8:	83 c4 10             	add    $0x10,%esp
        msg_buf[sizeof(msg_buf) - 1] = '\0';
810000db:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
        puts(msg_buf);
810000df:	83 ec 0c             	sub    $0xc,%esp
810000e2:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000e8:	50                   	push   %eax
810000e9:	e8 00 58 00 00       	call   810058ee <puts>
810000ee:	83 c4 10             	add    $0x10,%esp
        return 0;
810000f1:	b8 00 00 00 00       	mov    $0x0,%eax
810000f6:	e9 4f 01 00 00       	jmp    8100024a <do_echo+0x19e>
    }

    // https://www.cnblogs.com/yinghao-liu/p/7123622.html
    // optind是下一个要处理的元素在argv中的索引
    // 当没有选项时，变为argv第一个不是选项元素的索引。
    int count = 1;    // 缺省只打印一次
810000fb:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
    int ch;
    while ((ch = getopt(argc, argv, "n:h")) != -1) {
81000102:	e9 9e 00 00 00       	jmp    810001a5 <do_echo+0xf9>
        switch (ch) {
81000107:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100010a:	83 f8 68             	cmp    $0x68,%eax
8100010d:	74 0f                	je     8100011e <do_echo+0x72>
8100010f:	83 f8 6e             	cmp    $0x6e,%eax
81000112:	74 3e                	je     81000152 <do_echo+0xa6>
81000114:	83 f8 3f             	cmp    $0x3f,%eax
81000117:	74 4f                	je     81000168 <do_echo+0xbc>
81000119:	e9 87 00 00 00       	jmp    810001a5 <do_echo+0xf9>
            case 'h':
                puts("echo echo any message");
8100011e:	83 ec 0c             	sub    $0xc,%esp
81000121:	68 7c 85 00 81       	push   $0x8100857c
81000126:	e8 c3 57 00 00       	call   810058ee <puts>
8100012b:	83 c4 10             	add    $0x10,%esp
                puts("Usage: echo [-n count] msg");
8100012e:	83 ec 0c             	sub    $0xc,%esp
81000131:	68 92 85 00 81       	push   $0x81008592
81000136:	e8 b3 57 00 00       	call   810058ee <puts>
8100013b:	83 c4 10             	add    $0x10,%esp
                optind = 1;        // getopt需要多次调用，需要重置
8100013e:	c7 05 ac 9b 00 81 01 	movl   $0x1,0x81009bac
81000145:	00 00 00 
                return 0;
81000148:	b8 00 00 00 00       	mov    $0x0,%eax
8100014d:	e9 f8 00 00 00       	jmp    8100024a <do_echo+0x19e>
            case 'n':
                count = atoi(optarg);
81000152:	a1 a8 9b 00 81       	mov    0x81009ba8,%eax
81000157:	83 ec 0c             	sub    $0xc,%esp
8100015a:	50                   	push   %eax
8100015b:	e8 c8 0d 00 00       	call   81000f28 <atoi>
81000160:	83 c4 10             	add    $0x10,%esp
81000163:	89 45 f4             	mov    %eax,-0xc(%ebp)
                break;
81000166:	eb 3d                	jmp    810001a5 <do_echo+0xf9>
            case '?':
                if (optarg) {
81000168:	a1 a8 9b 00 81       	mov    0x81009ba8,%eax
8100016d:	85 c0                	test   %eax,%eax
8100016f:	74 20                	je     81000191 <do_echo+0xe5>
                    fprintf(stderr, "Unknown option: -%s\n", optarg);
81000171:	8b 15 a8 9b 00 81    	mov    0x81009ba8,%edx
81000177:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100017c:	8b 40 0c             	mov    0xc(%eax),%eax
8100017f:	83 ec 04             	sub    $0x4,%esp
81000182:	52                   	push   %edx
81000183:	68 ad 85 00 81       	push   $0x810085ad
81000188:	50                   	push   %eax
81000189:	e8 73 19 00 00       	call   81001b01 <fiprintf>
8100018e:	83 c4 10             	add    $0x10,%esp
                }
                optind = 1;        // getopt需要多次调用，需要重置
81000191:	c7 05 ac 9b 00 81 01 	movl   $0x1,0x81009bac
81000198:	00 00 00 
                return -1;
8100019b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001a0:	e9 a5 00 00 00       	jmp    8100024a <do_echo+0x19e>
    while ((ch = getopt(argc, argv, "n:h")) != -1) {
810001a5:	83 ec 04             	sub    $0x4,%esp
810001a8:	68 c2 85 00 81       	push   $0x810085c2
810001ad:	ff 75 0c             	pushl  0xc(%ebp)
810001b0:	ff 75 08             	pushl  0x8(%ebp)
810001b3:	e8 51 3a 00 00       	call   81003c09 <getopt>
810001b8:	83 c4 10             	add    $0x10,%esp
810001bb:	89 45 ec             	mov    %eax,-0x14(%ebp)
810001be:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001c2:	0f 85 3f ff ff ff    	jne    81000107 <do_echo+0x5b>
        }
    }

    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1) {
810001c8:	8b 45 08             	mov    0x8(%ebp),%eax
810001cb:	8d 50 ff             	lea    -0x1(%eax),%edx
810001ce:	a1 ac 9b 00 81       	mov    0x81009bac,%eax
810001d3:	39 c2                	cmp    %eax,%edx
810001d5:	7d 2b                	jge    81000202 <do_echo+0x156>
        fprintf(stderr, "Message is empty \n");
810001d7:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 12                	push   $0x12
810001e2:	6a 01                	push   $0x1
810001e4:	68 c6 85 00 81       	push   $0x810085c6
810001e9:	e8 54 2d 00 00       	call   81002f42 <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
        optind = 1;        // getopt需要多次调用，需要重置
810001f1:	c7 05 ac 9b 00 81 01 	movl   $0x1,0x81009bac
810001f8:	00 00 00 
        return -1;
810001fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000200:	eb 48                	jmp    8100024a <do_echo+0x19e>
    }

    // 循环打印消息
    char * msg = argv[optind];
81000202:	a1 ac 9b 00 81       	mov    0x81009bac,%eax
81000207:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100020e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000211:	01 d0                	add    %edx,%eax
81000213:	8b 00                	mov    (%eax),%eax
81000215:	89 45 e8             	mov    %eax,-0x18(%ebp)
    for (int i = 0; i < count; i++) {
81000218:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100021f:	eb 12                	jmp    81000233 <do_echo+0x187>
        puts(msg);
81000221:	83 ec 0c             	sub    $0xc,%esp
81000224:	ff 75 e8             	pushl  -0x18(%ebp)
81000227:	e8 c2 56 00 00       	call   810058ee <puts>
8100022c:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < count; i++) {
8100022f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000233:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000236:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81000239:	7c e6                	jl     81000221 <do_echo+0x175>
    }
    optind = 1;        // getopt需要多次调用，需要重置
8100023b:	c7 05 ac 9b 00 81 01 	movl   $0x1,0x81009bac
81000242:	00 00 00 
    return 0;
81000245:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100024a:	c9                   	leave  
8100024b:	c3                   	ret    

8100024c <do_exit>:

/**
 * 程序退出命令
 */
static int do_exit (int argc, char ** argv) {
8100024c:	55                   	push   %ebp
8100024d:	89 e5                	mov    %esp,%ebp
8100024f:	83 ec 08             	sub    $0x8,%esp
    exit(0);
81000252:	83 ec 0c             	sub    $0xc,%esp
81000255:	6a 00                	push   $0x0
81000257:	e8 00 0d 00 00       	call   81000f5c <exit>

8100025c <do_less>:
}

/**
 * @brief 列出文本文件内容
 */
static int do_less (int argc, char ** argv) {
8100025c:	55                   	push   %ebp
8100025d:	89 e5                	mov    %esp,%ebp
8100025f:	83 ec 28             	sub    $0x28,%esp
    int line_mode = 0;
81000262:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    int ch;
    while ((ch = getopt(argc, argv, "lh")) != -1) {
81000269:	e9 8c 00 00 00       	jmp    810002fa <do_less+0x9e>
        switch (ch) {
8100026e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000271:	83 f8 68             	cmp    $0x68,%eax
81000274:	74 0c                	je     81000282 <do_less+0x26>
81000276:	83 f8 6c             	cmp    $0x6c,%eax
81000279:	74 39                	je     810002b4 <do_less+0x58>
8100027b:	83 f8 3f             	cmp    $0x3f,%eax
8100027e:	74 3d                	je     810002bd <do_less+0x61>
81000280:	eb 78                	jmp    810002fa <do_less+0x9e>
            case 'h':
                puts("show file content");
81000282:	83 ec 0c             	sub    $0xc,%esp
81000285:	68 d9 85 00 81       	push   $0x810085d9
8100028a:	e8 5f 56 00 00       	call   810058ee <puts>
8100028f:	83 c4 10             	add    $0x10,%esp
                puts("less [-l] file");
81000292:	83 ec 0c             	sub    $0xc,%esp
81000295:	68 eb 85 00 81       	push   $0x810085eb
8100029a:	e8 4f 56 00 00       	call   810058ee <puts>
8100029f:	83 c4 10             	add    $0x10,%esp
                puts("-l show file line by line.");
810002a2:	83 ec 0c             	sub    $0xc,%esp
810002a5:	68 fa 85 00 81       	push   $0x810085fa
810002aa:	e8 3f 56 00 00       	call   810058ee <puts>
810002af:	83 c4 10             	add    $0x10,%esp
                break;
810002b2:	eb 46                	jmp    810002fa <do_less+0x9e>
            case 'l':
                line_mode = 1;
810002b4:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
                break;
810002bb:	eb 3d                	jmp    810002fa <do_less+0x9e>
            case '?':
                if (optarg) {
810002bd:	a1 a8 9b 00 81       	mov    0x81009ba8,%eax
810002c2:	85 c0                	test   %eax,%eax
810002c4:	74 20                	je     810002e6 <do_less+0x8a>
                    fprintf(stderr, "Unknown option: -%s\n", optarg);
810002c6:	8b 15 a8 9b 00 81    	mov    0x81009ba8,%edx
810002cc:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810002d1:	8b 40 0c             	mov    0xc(%eax),%eax
810002d4:	83 ec 04             	sub    $0x4,%esp
810002d7:	52                   	push   %edx
810002d8:	68 ad 85 00 81       	push   $0x810085ad
810002dd:	50                   	push   %eax
810002de:	e8 1e 18 00 00       	call   81001b01 <fiprintf>
810002e3:	83 c4 10             	add    $0x10,%esp
                }
                optind = 1;        // getopt需要多次调用，需要重置
810002e6:	c7 05 ac 9b 00 81 01 	movl   $0x1,0x81009bac
810002ed:	00 00 00 
                return -1;
810002f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810002f5:	e9 fc 01 00 00       	jmp    810004f6 <do_less+0x29a>
    while ((ch = getopt(argc, argv, "lh")) != -1) {
810002fa:	83 ec 04             	sub    $0x4,%esp
810002fd:	68 15 86 00 81       	push   $0x81008615
81000302:	ff 75 0c             	pushl  0xc(%ebp)
81000305:	ff 75 08             	pushl  0x8(%ebp)
81000308:	e8 fc 38 00 00       	call   81003c09 <getopt>
8100030d:	83 c4 10             	add    $0x10,%esp
81000310:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000313:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81000317:	0f 85 51 ff ff ff    	jne    8100026e <do_less+0x12>
        }
    }

    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1) {
8100031d:	8b 45 08             	mov    0x8(%ebp),%eax
81000320:	8d 50 ff             	lea    -0x1(%eax),%edx
81000323:	a1 ac 9b 00 81       	mov    0x81009bac,%eax
81000328:	39 c2                	cmp    %eax,%edx
8100032a:	7d 2e                	jge    8100035a <do_less+0xfe>
        fprintf(stderr, "no file\n");
8100032c:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81000331:	8b 40 0c             	mov    0xc(%eax),%eax
81000334:	50                   	push   %eax
81000335:	6a 08                	push   $0x8
81000337:	6a 01                	push   $0x1
81000339:	68 18 86 00 81       	push   $0x81008618
8100033e:	e8 ff 2b 00 00       	call   81002f42 <fwrite>
81000343:	83 c4 10             	add    $0x10,%esp
        optind = 1;        // getopt需要多次调用，需要重置
81000346:	c7 05 ac 9b 00 81 01 	movl   $0x1,0x81009bac
8100034d:	00 00 00 
        return -1;
81000350:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000355:	e9 9c 01 00 00       	jmp    810004f6 <do_less+0x29a>
    }

    FILE * file = fopen(argv[optind], "r");
8100035a:	a1 ac 9b 00 81       	mov    0x81009bac,%eax
8100035f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000366:	8b 45 0c             	mov    0xc(%ebp),%eax
81000369:	01 d0                	add    %edx,%eax
8100036b:	8b 00                	mov    (%eax),%eax
8100036d:	83 ec 08             	sub    $0x8,%esp
81000370:	68 21 86 00 81       	push   $0x81008621
81000375:	50                   	push   %eax
81000376:	e8 3e 17 00 00       	call   81001ab9 <fopen>
8100037b:	83 c4 10             	add    $0x10,%esp
8100037e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (file == NULL) {
81000381:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000385:	75 41                	jne    810003c8 <do_less+0x16c>
        fprintf(stderr, "open file failed. %s", argv[optind]);
81000387:	a1 ac 9b 00 81       	mov    0x81009bac,%eax
8100038c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000393:	8b 45 0c             	mov    0xc(%ebp),%eax
81000396:	01 d0                	add    %edx,%eax
81000398:	8b 10                	mov    (%eax),%edx
8100039a:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100039f:	8b 40 0c             	mov    0xc(%eax),%eax
810003a2:	83 ec 04             	sub    $0x4,%esp
810003a5:	52                   	push   %edx
810003a6:	68 23 86 00 81       	push   $0x81008623
810003ab:	50                   	push   %eax
810003ac:	e8 50 17 00 00       	call   81001b01 <fiprintf>
810003b1:	83 c4 10             	add    $0x10,%esp
        optind = 1;        // getopt需要多次调用，需要重置
810003b4:	c7 05 ac 9b 00 81 01 	movl   $0x1,0x81009bac
810003bb:	00 00 00 
        return -1;
810003be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003c3:	e9 2e 01 00 00       	jmp    810004f6 <do_less+0x29a>
    }

    char * buf = (char *)malloc(255);
810003c8:	83 ec 0c             	sub    $0xc,%esp
810003cb:	68 ff 00 00 00       	push   $0xff
810003d0:	e8 00 3b 00 00       	call   81003ed5 <malloc>
810003d5:	83 c4 10             	add    $0x10,%esp
810003d8:	89 45 e8             	mov    %eax,-0x18(%ebp)

    if (line_mode == 0) {
810003db:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810003df:	75 38                	jne    81000419 <do_less+0x1bd>
        while (fgets(buf, 255, file) != NULL)  {
810003e1:	eb 17                	jmp    810003fa <do_less+0x19e>
            fputs(buf, stdout);
810003e3:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810003e8:	8b 40 08             	mov    0x8(%eax),%eax
810003eb:	83 ec 08             	sub    $0x8,%esp
810003ee:	50                   	push   %eax
810003ef:	ff 75 e8             	pushl  -0x18(%ebp)
810003f2:	e8 dc 17 00 00       	call   81001bd3 <fputs>
810003f7:	83 c4 10             	add    $0x10,%esp
        while (fgets(buf, 255, file) != NULL)  {
810003fa:	83 ec 04             	sub    $0x4,%esp
810003fd:	ff 75 ec             	pushl  -0x14(%ebp)
81000400:	68 ff 00 00 00       	push   $0xff
81000405:	ff 75 e8             	pushl  -0x18(%ebp)
81000408:	e8 b6 11 00 00       	call   810015c3 <fgets>
8100040d:	83 c4 10             	add    $0x10,%esp
81000410:	85 c0                	test   %eax,%eax
81000412:	75 cf                	jne    810003e3 <do_less+0x187>
81000414:	e9 b2 00 00 00       	jmp    810004cb <do_less+0x26f>
        }
    } else {
        // 不使用缓存，这样能直接立即读取到输入而不用等回车
        setvbuf(stdin, NULL, _IONBF, 0);
81000419:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100041e:	8b 40 04             	mov    0x4(%eax),%eax
81000421:	6a 00                	push   $0x0
81000423:	6a 02                	push   $0x2
81000425:	6a 00                	push   $0x0
81000427:	50                   	push   %eax
81000428:	e8 3c 62 00 00       	call   81006669 <setvbuf>
8100042d:	83 c4 10             	add    $0x10,%esp
        ioctl(0, TTY_CMD_ECHO, 0, 0);
81000430:	6a 00                	push   $0x0
81000432:	6a 00                	push   $0x0
81000434:	6a 01                	push   $0x1
81000436:	6a 00                	push   $0x0
81000438:	e8 b8 09 00 00       	call   81000df5 <ioctl>
8100043d:	83 c4 10             	add    $0x10,%esp
        while (1) {
            char * b = fgets(buf, 255, file);
81000440:	83 ec 04             	sub    $0x4,%esp
81000443:	ff 75 ec             	pushl  -0x14(%ebp)
81000446:	68 ff 00 00 00       	push   $0xff
8100044b:	ff 75 e8             	pushl  -0x18(%ebp)
8100044e:	e8 70 11 00 00       	call   810015c3 <fgets>
81000453:	83 c4 10             	add    $0x10,%esp
81000456:	89 45 e4             	mov    %eax,-0x1c(%ebp)
            if (b == NULL ) {
81000459:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100045d:	74 3e                	je     8100049d <do_less+0x241>
                break;
            }
            fputs(buf, stdout);
8100045f:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81000464:	8b 40 08             	mov    0x8(%eax),%eax
81000467:	83 ec 08             	sub    $0x8,%esp
8100046a:	50                   	push   %eax
8100046b:	ff 75 e8             	pushl  -0x18(%ebp)
8100046e:	e8 60 17 00 00       	call   81001bd3 <fputs>
81000473:	83 c4 10             	add    $0x10,%esp

            int ch;
            while ((ch = fgetc(stdin)) != 'n') {
81000476:	eb 06                	jmp    8100047e <do_less+0x222>
                if (ch == 'q') {
81000478:	83 7d e0 71          	cmpl   $0x71,-0x20(%ebp)
8100047c:	74 22                	je     810004a0 <do_less+0x244>
            while ((ch = fgetc(stdin)) != 'n') {
8100047e:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81000483:	8b 40 04             	mov    0x4(%eax),%eax
81000486:	83 ec 0c             	sub    $0xc,%esp
81000489:	50                   	push   %eax
8100048a:	e8 5d 0f 00 00       	call   810013ec <fgetc>
8100048f:	83 c4 10             	add    $0x10,%esp
81000492:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000495:	83 7d e0 6e          	cmpl   $0x6e,-0x20(%ebp)
81000499:	75 dd                	jne    81000478 <do_less+0x21c>
        while (1) {
8100049b:	eb a3                	jmp    81000440 <do_less+0x1e4>
                break;
8100049d:	90                   	nop
8100049e:	eb 01                	jmp    810004a1 <do_less+0x245>
                    goto less_quit;
810004a0:	90                   	nop
                }
            }
        }
    less_quit:
    // 恢复为行缓存
        setvbuf(stdin, NULL,_IOLBF, BUFSIZ);
810004a1:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810004a6:	8b 40 04             	mov    0x4(%eax),%eax
810004a9:	68 00 04 00 00       	push   $0x400
810004ae:	6a 01                	push   $0x1
810004b0:	6a 00                	push   $0x0
810004b2:	50                   	push   %eax
810004b3:	e8 b1 61 00 00       	call   81006669 <setvbuf>
810004b8:	83 c4 10             	add    $0x10,%esp
        ioctl(0, TTY_CMD_ECHO, 1, 0);
810004bb:	6a 00                	push   $0x0
810004bd:	6a 01                	push   $0x1
810004bf:	6a 01                	push   $0x1
810004c1:	6a 00                	push   $0x0
810004c3:	e8 2d 09 00 00       	call   81000df5 <ioctl>
810004c8:	83 c4 10             	add    $0x10,%esp
    }
    free(buf);
810004cb:	83 ec 0c             	sub    $0xc,%esp
810004ce:	ff 75 e8             	pushl  -0x18(%ebp)
810004d1:	e8 1b 3a 00 00       	call   81003ef1 <free>
810004d6:	83 c4 10             	add    $0x10,%esp
    fclose(file);
810004d9:	83 ec 0c             	sub    $0xc,%esp
810004dc:	ff 75 ec             	pushl  -0x14(%ebp)
810004df:	e8 c3 0b 00 00       	call   810010a7 <fclose>
810004e4:	83 c4 10             	add    $0x10,%esp
    optind = 1;        // getopt需要多次调用，需要重置
810004e7:	c7 05 ac 9b 00 81 01 	movl   $0x1,0x81009bac
810004ee:	00 00 00 
    return 0;
810004f1:	b8 00 00 00 00       	mov    $0x0,%eax
}
810004f6:	c9                   	leave  
810004f7:	c3                   	ret    

810004f8 <do_ls>:

/**
 * @brief 列出目录内容
 */
static int do_ls (int argc, char ** argv) {
810004f8:	55                   	push   %ebp
810004f9:	89 e5                	mov    %esp,%ebp
810004fb:	83 ec 18             	sub    $0x18,%esp
    // 打开目录
	DIR * p_dir = opendir("temp");
810004fe:	83 ec 0c             	sub    $0xc,%esp
81000501:	68 38 86 00 81       	push   $0x81008638
81000506:	e8 1d 09 00 00       	call   81000e28 <opendir>
8100050b:	83 c4 10             	add    $0x10,%esp
8100050e:	89 45 f4             	mov    %eax,-0xc(%ebp)
	if (p_dir == NULL) {
81000511:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000515:	75 5f                	jne    81000576 <do_ls+0x7e>
		printf("open dir failed\n");
81000517:	83 ec 0c             	sub    $0xc,%esp
8100051a:	68 3d 86 00 81       	push   $0x8100863d
8100051f:	e8 ca 53 00 00       	call   810058ee <puts>
81000524:	83 c4 10             	add    $0x10,%esp
		return -1;
81000527:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100052c:	eb 72                	jmp    810005a0 <do_ls+0xa8>
	}

    // 然后进行遍历
	struct dirent * entry;
	while((entry = readdir(p_dir)) != NULL) {
        strlwr(entry->name);
8100052e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000531:	83 c0 08             	add    $0x8,%eax
81000534:	83 ec 0c             	sub    $0xc,%esp
81000537:	50                   	push   %eax
81000538:	e8 2c 67 00 00       	call   81006c69 <strlwr>
8100053d:	83 c4 10             	add    $0x10,%esp
		printf("%c %s %d\n",
81000540:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000543:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
                entry->type == FILE_DIR ? 'd' : 'f',
                entry->name,
81000549:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100054c:	8d 4a 08             	lea    0x8(%edx),%ecx
                entry->type == FILE_DIR ? 'd' : 'f',
8100054f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000552:	8b 52 04             	mov    0x4(%edx),%edx
		printf("%c %s %d\n",
81000555:	83 fa 03             	cmp    $0x3,%edx
81000558:	75 07                	jne    81000561 <do_ls+0x69>
8100055a:	ba 64 00 00 00       	mov    $0x64,%edx
8100055f:	eb 05                	jmp    81000566 <do_ls+0x6e>
81000561:	ba 66 00 00 00       	mov    $0x66,%edx
81000566:	50                   	push   %eax
81000567:	51                   	push   %ecx
81000568:	52                   	push   %edx
81000569:	68 4d 86 00 81       	push   $0x8100864d
8100056e:	e8 70 52 00 00       	call   810057e3 <iprintf>
81000573:	83 c4 10             	add    $0x10,%esp
	while((entry = readdir(p_dir)) != NULL) {
81000576:	83 ec 0c             	sub    $0xc,%esp
81000579:	ff 75 f4             	pushl  -0xc(%ebp)
8100057c:	e8 12 09 00 00       	call   81000e93 <readdir>
81000581:	83 c4 10             	add    $0x10,%esp
81000584:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000587:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100058b:	75 a1                	jne    8100052e <do_ls+0x36>
                entry->size);
	}
	closedir(p_dir);
8100058d:	83 ec 0c             	sub    $0xc,%esp
81000590:	ff 75 f4             	pushl  -0xc(%ebp)
81000593:	e8 3b 09 00 00       	call   81000ed3 <closedir>
81000598:	83 c4 10             	add    $0x10,%esp

    return 0;
8100059b:	b8 00 00 00 00       	mov    $0x0,%eax
}
810005a0:	c9                   	leave  
810005a1:	c3                   	ret    

810005a2 <do_cp>:

/**
 * @brief 复制文件命令
 */
static int do_cp (int argc, char ** argv) {
810005a2:	55                   	push   %ebp
810005a3:	89 e5                	mov    %esp,%ebp
810005a5:	83 ec 18             	sub    $0x18,%esp
    if (argc < 3) {
810005a8:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
810005ac:	7f 1a                	jg     810005c8 <do_cp+0x26>
        puts("no [from] or no [to]");
810005ae:	83 ec 0c             	sub    $0xc,%esp
810005b1:	68 57 86 00 81       	push   $0x81008657
810005b6:	e8 33 53 00 00       	call   810058ee <puts>
810005bb:	83 c4 10             	add    $0x10,%esp
        return -1;
810005be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810005c3:	e9 df 00 00 00       	jmp    810006a7 <do_cp+0x105>
    }

    FILE * from, * to;
    from = fopen(argv[1], "rb");
810005c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810005cb:	83 c0 04             	add    $0x4,%eax
810005ce:	8b 00                	mov    (%eax),%eax
810005d0:	83 ec 08             	sub    $0x8,%esp
810005d3:	68 6c 86 00 81       	push   $0x8100866c
810005d8:	50                   	push   %eax
810005d9:	e8 db 14 00 00       	call   81001ab9 <fopen>
810005de:	83 c4 10             	add    $0x10,%esp
810005e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    to = fopen(argv[2], "wb");
810005e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810005e7:	83 c0 08             	add    $0x8,%eax
810005ea:	8b 00                	mov    (%eax),%eax
810005ec:	83 ec 08             	sub    $0x8,%esp
810005ef:	68 6f 86 00 81       	push   $0x8100866f
810005f4:	50                   	push   %eax
810005f5:	e8 bf 14 00 00       	call   81001ab9 <fopen>
810005fa:	83 c4 10             	add    $0x10,%esp
810005fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (!from || !to) {
81000600:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000604:	74 06                	je     8100060c <do_cp+0x6a>
81000606:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100060a:	75 12                	jne    8100061e <do_cp+0x7c>
        puts("open file failed.");
8100060c:	83 ec 0c             	sub    $0xc,%esp
8100060f:	68 72 86 00 81       	push   $0x81008672
81000614:	e8 d5 52 00 00       	call   810058ee <puts>
81000619:	83 c4 10             	add    $0x10,%esp
        goto ls_failed;
8100061c:	eb 5c                	jmp    8100067a <do_cp+0xd8>
    }

    char * buf = (char *)malloc(255);
8100061e:	83 ec 0c             	sub    $0xc,%esp
81000621:	68 ff 00 00 00       	push   $0xff
81000626:	e8 aa 38 00 00       	call   81003ed5 <malloc>
8100062b:	83 c4 10             	add    $0x10,%esp
8100062e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    int size = 0;
81000631:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    while ((size = fread(buf, 1, 255, from)) > 0) {
81000638:	eb 14                	jmp    8100064e <do_cp+0xac>
        fwrite(buf, 1, size, to);
8100063a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100063d:	ff 75 f0             	pushl  -0x10(%ebp)
81000640:	50                   	push   %eax
81000641:	6a 01                	push   $0x1
81000643:	ff 75 ec             	pushl  -0x14(%ebp)
81000646:	e8 f7 28 00 00       	call   81002f42 <fwrite>
8100064b:	83 c4 10             	add    $0x10,%esp
    while ((size = fread(buf, 1, 255, from)) > 0) {
8100064e:	ff 75 f4             	pushl  -0xc(%ebp)
81000651:	68 ff 00 00 00       	push   $0xff
81000656:	6a 01                	push   $0x1
81000658:	ff 75 ec             	pushl  -0x14(%ebp)
8100065b:	e8 07 18 00 00       	call   81001e67 <fread>
81000660:	83 c4 10             	add    $0x10,%esp
81000663:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000666:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100066a:	7f ce                	jg     8100063a <do_cp+0x98>
    }
    free(buf);
8100066c:	83 ec 0c             	sub    $0xc,%esp
8100066f:	ff 75 ec             	pushl  -0x14(%ebp)
81000672:	e8 7a 38 00 00       	call   81003ef1 <free>
81000677:	83 c4 10             	add    $0x10,%esp

ls_failed:
    if (from) {
8100067a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100067e:	74 0e                	je     8100068e <do_cp+0xec>
        fclose(from);
81000680:	83 ec 0c             	sub    $0xc,%esp
81000683:	ff 75 f4             	pushl  -0xc(%ebp)
81000686:	e8 1c 0a 00 00       	call   810010a7 <fclose>
8100068b:	83 c4 10             	add    $0x10,%esp
    }
    if (to) {
8100068e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000692:	74 0e                	je     810006a2 <do_cp+0x100>
        fclose(to);
81000694:	83 ec 0c             	sub    $0xc,%esp
81000697:	ff 75 f0             	pushl  -0x10(%ebp)
8100069a:	e8 08 0a 00 00       	call   810010a7 <fclose>
8100069f:	83 c4 10             	add    $0x10,%esp
    }
    return 0;
810006a2:	b8 00 00 00 00       	mov    $0x0,%eax
}
810006a7:	c9                   	leave  
810006a8:	c3                   	ret    

810006a9 <do_remove>:

/**
 * @brief 删除文件命令
 */
static int do_remove (int argc, char ** argv) {
810006a9:	55                   	push   %ebp
810006aa:	89 e5                	mov    %esp,%ebp
810006ac:	83 ec 18             	sub    $0x18,%esp
    if (argc < 2) {
810006af:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810006b3:	7f 21                	jg     810006d6 <do_remove+0x2d>
        fprintf(stderr, "no file");
810006b5:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810006ba:	8b 40 0c             	mov    0xc(%eax),%eax
810006bd:	50                   	push   %eax
810006be:	6a 07                	push   $0x7
810006c0:	6a 01                	push   $0x1
810006c2:	68 84 86 00 81       	push   $0x81008684
810006c7:	e8 76 28 00 00       	call   81002f42 <fwrite>
810006cc:	83 c4 10             	add    $0x10,%esp
        return -1;
810006cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810006d4:	eb 49                	jmp    8100071f <do_remove+0x76>
    }

    int err = unlink(argv[1]);
810006d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810006d9:	83 c0 04             	add    $0x4,%eax
810006dc:	8b 00                	mov    (%eax),%eax
810006de:	83 ec 0c             	sub    $0xc,%esp
810006e1:	50                   	push   %eax
810006e2:	e8 20 08 00 00       	call   81000f07 <unlink>
810006e7:	83 c4 10             	add    $0x10,%esp
810006ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (err < 0) {
810006ed:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006f1:	79 27                	jns    8100071a <do_remove+0x71>
        fprintf(stderr, "rm file failed: %s", argv[1]);
810006f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810006f6:	83 c0 04             	add    $0x4,%eax
810006f9:	8b 10                	mov    (%eax),%edx
810006fb:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81000700:	8b 40 0c             	mov    0xc(%eax),%eax
81000703:	83 ec 04             	sub    $0x4,%esp
81000706:	52                   	push   %edx
81000707:	68 8c 86 00 81       	push   $0x8100868c
8100070c:	50                   	push   %eax
8100070d:	e8 ef 13 00 00       	call   81001b01 <fiprintf>
81000712:	83 c4 10             	add    $0x10,%esp
        return err;
81000715:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000718:	eb 05                	jmp    8100071f <do_remove+0x76>
    }

    return 0;
8100071a:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100071f:	c9                   	leave  
81000720:	c3                   	ret    

81000721 <cli_init>:
};

/**
 * 命令行初始化
 */
static void cli_init(const char * promot, const cli_cmd_t * cmd_list, int cnt) {
81000721:	55                   	push   %ebp
81000722:	89 e5                	mov    %esp,%ebp
81000724:	83 ec 08             	sub    $0x8,%esp
    cli.promot = promot;
81000727:	8b 45 08             	mov    0x8(%ebp),%eax
8100072a:	a3 88 9a 00 81       	mov    %eax,0x81009a88
    
    memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100072f:	83 ec 04             	sub    $0x4,%esp
81000732:	68 00 04 00 00       	push   $0x400
81000737:	6a 00                	push   $0x0
81000739:	68 80 96 00 81       	push   $0x81009680
8100073e:	e8 4a 44 00 00       	call   81004b8d <memset>
81000743:	83 c4 10             	add    $0x10,%esp
    
    cli.cmd_start = cmd_list;
81000746:	8b 45 0c             	mov    0xc(%ebp),%eax
81000749:	a3 80 9a 00 81       	mov    %eax,0x81009a80
    cli.cmd_end = cmd_list + cnt;
8100074e:	8b 55 10             	mov    0x10(%ebp),%edx
81000751:	89 d0                	mov    %edx,%eax
81000753:	01 c0                	add    %eax,%eax
81000755:	01 d0                	add    %edx,%eax
81000757:	c1 e0 02             	shl    $0x2,%eax
8100075a:	89 c2                	mov    %eax,%edx
8100075c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100075f:	01 d0                	add    %edx,%eax
81000761:	a3 84 9a 00 81       	mov    %eax,0x81009a84
}
81000766:	90                   	nop
81000767:	c9                   	leave  
81000768:	c3                   	ret    

81000769 <find_builtin>:

/**
 * 在内部命令中搜索
 */
static const cli_cmd_t * find_builtin (const char * name) {
81000769:	55                   	push   %ebp
8100076a:	89 e5                	mov    %esp,%ebp
8100076c:	83 ec 18             	sub    $0x18,%esp
    for (const cli_cmd_t * cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++) {
8100076f:	a1 80 9a 00 81       	mov    0x81009a80,%eax
81000774:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000777:	eb 23                	jmp    8100079c <find_builtin+0x33>
        if (strcmp(cmd->name, name) != 0) {
81000779:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100077c:	8b 00                	mov    (%eax),%eax
8100077e:	83 ec 08             	sub    $0x8,%esp
81000781:	ff 75 08             	pushl  0x8(%ebp)
81000784:	50                   	push   %eax
81000785:	e8 b2 63 00 00       	call   81006b3c <strcmp>
8100078a:	83 c4 10             	add    $0x10,%esp
8100078d:	85 c0                	test   %eax,%eax
8100078f:	74 06                	je     81000797 <find_builtin+0x2e>
    for (const cli_cmd_t * cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++) {
81000791:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
81000795:	eb 05                	jmp    8100079c <find_builtin+0x33>
            continue;
        }

        return cmd;
81000797:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100079a:	eb 0f                	jmp    810007ab <find_builtin+0x42>
    for (const cli_cmd_t * cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++) {
8100079c:	a1 84 9a 00 81       	mov    0x81009a84,%eax
810007a1:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810007a4:	72 d3                	jb     81000779 <find_builtin+0x10>
    }

    return (const cli_cmd_t *)0;
810007a6:	b8 00 00 00 00       	mov    $0x0,%eax
}
810007ab:	c9                   	leave  
810007ac:	c3                   	ret    

810007ad <run_builtin>:

/**
 * 运行内部命令
 */
static void run_builtin (const cli_cmd_t * cmd, int argc, char ** argv) {
810007ad:	55                   	push   %ebp
810007ae:	89 e5                	mov    %esp,%ebp
810007b0:	83 ec 18             	sub    $0x18,%esp
    int ret = cmd->do_func(argc, argv);
810007b3:	8b 45 08             	mov    0x8(%ebp),%eax
810007b6:	8b 40 08             	mov    0x8(%eax),%eax
810007b9:	83 ec 08             	sub    $0x8,%esp
810007bc:	ff 75 10             	pushl  0x10(%ebp)
810007bf:	ff 75 0c             	pushl  0xc(%ebp)
810007c2:	ff d0                	call   *%eax
810007c4:	83 c4 10             	add    $0x10,%esp
810007c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (ret < 0) {
810007ca:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007ce:	79 1c                	jns    810007ec <run_builtin+0x3f>
        fprintf(stderr,ESC_COLOR_ERROR"error: %d\n"ESC_COLOR_DEFAULT, ret);
810007d0:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810007d5:	8b 40 0c             	mov    0xc(%eax),%eax
810007d8:	83 ec 04             	sub    $0x4,%esp
810007db:	ff 75 f4             	pushl  -0xc(%ebp)
810007de:	68 00 88 00 81       	push   $0x81008800
810007e3:	50                   	push   %eax
810007e4:	e8 18 13 00 00       	call   81001b01 <fiprintf>
810007e9:	83 c4 10             	add    $0x10,%esp
    }
}
810007ec:	90                   	nop
810007ed:	c9                   	leave  
810007ee:	c3                   	ret    

810007ef <find_exec_path>:

/**
 * 遍历搜索目录，看看文件是否存在，存在返回文件所在路径
 */
static const char * find_exec_path (const char * file_name) {
810007ef:	55                   	push   %ebp
810007f0:	89 e5                	mov    %esp,%ebp
810007f2:	83 ec 18             	sub    $0x18,%esp
    static char path[255];

    int fd = open(file_name, 0);
810007f5:	83 ec 08             	sub    $0x8,%esp
810007f8:	6a 00                	push   $0x0
810007fa:	ff 75 08             	pushl  0x8(%ebp)
810007fd:	e8 9a 04 00 00       	call   81000c9c <open>
81000802:	83 c4 10             	add    $0x10,%esp
81000805:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (fd < 0) {
81000808:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100080c:	79 4f                	jns    8100085d <find_exec_path+0x6e>
        sprintf(path, "%s.elf", file_name);
8100080e:	83 ec 04             	sub    $0x4,%esp
81000811:	ff 75 08             	pushl  0x8(%ebp)
81000814:	68 15 88 00 81       	push   $0x81008815
81000819:	68 a0 9a 00 81       	push   $0x81009aa0
8100081e:	e8 a7 60 00 00       	call   810068ca <siprintf>
81000823:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
81000826:	83 ec 08             	sub    $0x8,%esp
81000829:	6a 00                	push   $0x0
8100082b:	68 a0 9a 00 81       	push   $0x81009aa0
81000830:	e8 67 04 00 00       	call   81000c9c <open>
81000835:	83 c4 10             	add    $0x10,%esp
81000838:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (fd < 0) {
8100083b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100083f:	79 07                	jns    81000848 <find_exec_path+0x59>
            return (const char * )0;
81000841:	b8 00 00 00 00       	mov    $0x0,%eax
81000846:	eb 26                	jmp    8100086e <find_exec_path+0x7f>
        }
        close(fd);
81000848:	83 ec 0c             	sub    $0xc,%esp
8100084b:	ff 75 f4             	pushl  -0xc(%ebp)
8100084e:	e8 ca 04 00 00       	call   81000d1d <close>
81000853:	83 c4 10             	add    $0x10,%esp
        return path;
81000856:	b8 a0 9a 00 81       	mov    $0x81009aa0,%eax
8100085b:	eb 11                	jmp    8100086e <find_exec_path+0x7f>
    } else {
        close(fd);
8100085d:	83 ec 0c             	sub    $0xc,%esp
81000860:	ff 75 f4             	pushl  -0xc(%ebp)
81000863:	e8 b5 04 00 00       	call   81000d1d <close>
81000868:	83 c4 10             	add    $0x10,%esp
        return file_name;
8100086b:	8b 45 08             	mov    0x8(%ebp),%eax
    }
}
8100086e:	c9                   	leave  
8100086f:	c3                   	ret    

81000870 <run_exec_file>:

/**
 * 试图运行当前文件
 */
static void run_exec_file (const char * path, int argc, char ** argv) {
81000870:	55                   	push   %ebp
81000871:	89 e5                	mov    %esp,%ebp
81000873:	83 ec 18             	sub    $0x18,%esp
    int pid = fork();
81000876:	e8 7c 03 00 00       	call   81000bf7 <fork>
8100087b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (pid < 0) {
8100087e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000882:	79 1e                	jns    810008a2 <run_exec_file+0x32>
        fprintf(stderr, "fork failed: %s", path);
81000884:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81000889:	8b 40 0c             	mov    0xc(%eax),%eax
8100088c:	83 ec 04             	sub    $0x4,%esp
8100088f:	ff 75 08             	pushl  0x8(%ebp)
81000892:	68 1c 88 00 81       	push   $0x8100881c
81000897:	50                   	push   %eax
81000898:	e8 64 12 00 00       	call   81001b01 <fiprintf>
8100089d:	83 c4 10             	add    $0x10,%esp
		// 等待子进程执行完毕
        int status;
        int pid = wait(&status);
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
    }
}
810008a0:	eb 7d                	jmp    8100091f <run_exec_file+0xaf>
    } else if (pid == 0) {
810008a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810008a6:	75 42                	jne    810008ea <run_exec_file+0x7a>
        int err = execve(path, argv, (char * const *)0);
810008a8:	83 ec 04             	sub    $0x4,%esp
810008ab:	6a 00                	push   $0x0
810008ad:	ff 75 10             	pushl  0x10(%ebp)
810008b0:	ff 75 08             	pushl  0x8(%ebp)
810008b3:	e8 5a 03 00 00       	call   81000c12 <execve>
810008b8:	83 c4 10             	add    $0x10,%esp
810008bb:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (err < 0) {
810008be:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810008c2:	79 1c                	jns    810008e0 <run_exec_file+0x70>
            fprintf(stderr, "exec failed: %s", path);
810008c4:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810008c9:	8b 40 0c             	mov    0xc(%eax),%eax
810008cc:	83 ec 04             	sub    $0x4,%esp
810008cf:	ff 75 08             	pushl  0x8(%ebp)
810008d2:	68 2c 88 00 81       	push   $0x8100882c
810008d7:	50                   	push   %eax
810008d8:	e8 24 12 00 00       	call   81001b01 <fiprintf>
810008dd:	83 c4 10             	add    $0x10,%esp
        exit(-1);
810008e0:	83 ec 0c             	sub    $0xc,%esp
810008e3:	6a ff                	push   $0xffffffff
810008e5:	e8 72 06 00 00       	call   81000f5c <exit>
        int pid = wait(&status);
810008ea:	83 ec 0c             	sub    $0xc,%esp
810008ed:	8d 45 e8             	lea    -0x18(%ebp),%eax
810008f0:	50                   	push   %eax
810008f1:	e8 64 03 00 00       	call   81000c5a <wait>
810008f6:	83 c4 10             	add    $0x10,%esp
810008f9:	89 45 f0             	mov    %eax,-0x10(%ebp)
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
810008fc:	8b 55 e8             	mov    -0x18(%ebp),%edx
810008ff:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81000904:	8b 40 0c             	mov    0xc(%eax),%eax
81000907:	83 ec 0c             	sub    $0xc,%esp
8100090a:	ff 75 f0             	pushl  -0x10(%ebp)
8100090d:	52                   	push   %edx
8100090e:	ff 75 08             	pushl  0x8(%ebp)
81000911:	68 3c 88 00 81       	push   $0x8100883c
81000916:	50                   	push   %eax
81000917:	e8 e5 11 00 00       	call   81001b01 <fiprintf>
8100091c:	83 c4 20             	add    $0x20,%esp
}
8100091f:	90                   	nop
81000920:	c9                   	leave  
81000921:	c3                   	ret    

81000922 <main>:

int main (int argc, char **argv) {
81000922:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000926:	83 e4 f0             	and    $0xfffffff0,%esp
81000929:	ff 71 fc             	pushl  -0x4(%ecx)
8100092c:	55                   	push   %ebp
8100092d:	89 e5                	mov    %esp,%ebp
8100092f:	51                   	push   %ecx
81000930:	83 ec 54             	sub    $0x54,%esp
81000933:	89 c8                	mov    %ecx,%eax
	open(argv[0], O_RDWR);
81000935:	8b 40 04             	mov    0x4(%eax),%eax
81000938:	8b 00                	mov    (%eax),%eax
8100093a:	83 ec 08             	sub    $0x8,%esp
8100093d:	6a 02                	push   $0x2
8100093f:	50                   	push   %eax
81000940:	e8 57 03 00 00       	call   81000c9c <open>
81000945:	83 c4 10             	add    $0x10,%esp
    dup(0);     // 标准输出
81000948:	83 ec 0c             	sub    $0xc,%esp
8100094b:	6a 00                	push   $0x0
8100094d:	e8 82 04 00 00       	call   81000dd4 <dup>
81000952:	83 c4 10             	add    $0x10,%esp
    dup(0);     // 标准错误输出
81000955:	83 ec 0c             	sub    $0xc,%esp
81000958:	6a 00                	push   $0x0
8100095a:	e8 75 04 00 00       	call   81000dd4 <dup>
8100095f:	83 c4 10             	add    $0x10,%esp

   	cli_init(promot, cmd_list, sizeof(cmd_list) / sizeof(cli_cmd_t));
81000962:	a1 80 8c 00 81       	mov    0x81008c80,%eax
81000967:	83 ec 04             	sub    $0x4,%esp
8100096a:	6a 08                	push   $0x8
8100096c:	68 a0 87 00 81       	push   $0x810087a0
81000971:	50                   	push   %eax
81000972:	e8 aa fd ff ff       	call   81000721 <cli_init>
81000977:	83 c4 10             	add    $0x10,%esp
	for (;;) {
        // 显示提示符，开始工作
        show_promot();
8100097a:	e8 81 f6 ff ff       	call   81000000 <show_promot>

        // 获取输入的字符串，然后进行处理.
        // 注意，读取到的字符串结尾中会包含换行符和0
        char * str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
8100097f:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81000984:	8b 40 04             	mov    0x4(%eax),%eax
81000987:	83 ec 04             	sub    $0x4,%esp
8100098a:	50                   	push   %eax
8100098b:	68 00 04 00 00       	push   $0x400
81000990:	68 80 96 00 81       	push   $0x81009680
81000995:	e8 29 0c 00 00       	call   810015c3 <fgets>
8100099a:	83 c4 10             	add    $0x10,%esp
8100099d:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (str == (char *)0) {
810009a0:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810009a4:	75 0a                	jne    810009b0 <main+0x8e>

        // 找不到命令，提示错误
        fprintf(stderr, ESC_COLOR_ERROR"Unknown command: %s\n"ESC_COLOR_DEFAULT, cli.curr_input);
    }

    return 0;
810009a6:	b8 00 00 00 00       	mov    $0x0,%eax
810009ab:	e9 35 01 00 00       	jmp    81000ae5 <main+0x1c3>
        char * cr = strchr(cli.curr_input, '\n');
810009b0:	83 ec 08             	sub    $0x8,%esp
810009b3:	6a 0a                	push   $0xa
810009b5:	68 80 96 00 81       	push   $0x81009680
810009ba:	e8 81 60 00 00       	call   81006a40 <strchr>
810009bf:	83 c4 10             	add    $0x10,%esp
810009c2:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr) {
810009c5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009c9:	74 06                	je     810009d1 <main+0xaf>
            *cr = '\0';
810009cb:	8b 45 e8             	mov    -0x18(%ebp),%eax
810009ce:	c6 00 00             	movb   $0x0,(%eax)
        cr = strchr(cli.curr_input, '\r');
810009d1:	83 ec 08             	sub    $0x8,%esp
810009d4:	6a 0d                	push   $0xd
810009d6:	68 80 96 00 81       	push   $0x81009680
810009db:	e8 60 60 00 00       	call   81006a40 <strchr>
810009e0:	83 c4 10             	add    $0x10,%esp
810009e3:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr) {
810009e6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009ea:	74 06                	je     810009f2 <main+0xd0>
            *cr = '\0';
810009ec:	8b 45 e8             	mov    -0x18(%ebp),%eax
810009ef:	c6 00 00             	movb   $0x0,(%eax)
        int argc = 0;
810009f2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        memset(argv, 0, sizeof(argv));
810009f9:	83 ec 04             	sub    $0x4,%esp
810009fc:	6a 28                	push   $0x28
810009fe:	6a 00                	push   $0x0
81000a00:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a03:	50                   	push   %eax
81000a04:	e8 84 41 00 00       	call   81004b8d <memset>
81000a09:	83 c4 10             	add    $0x10,%esp
        const char * space = " ";  // 字符分割器
81000a0c:	c7 45 e4 59 88 00 81 	movl   $0x81008859,-0x1c(%ebp)
        char *token = strtok(cli.curr_input, space);
81000a13:	83 ec 08             	sub    $0x8,%esp
81000a16:	ff 75 e4             	pushl  -0x1c(%ebp)
81000a19:	68 80 96 00 81       	push   $0x81009680
81000a1e:	e8 9e 62 00 00       	call   81006cc1 <strtok>
81000a23:	83 c4 10             	add    $0x10,%esp
81000a26:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token) {
81000a29:	eb 23                	jmp    81000a4e <main+0x12c>
            argv[argc++] = token;
81000a2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a2e:	8d 50 01             	lea    0x1(%eax),%edx
81000a31:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000a34:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000a37:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
            token = strtok(NULL, space);
81000a3b:	83 ec 08             	sub    $0x8,%esp
81000a3e:	ff 75 e4             	pushl  -0x1c(%ebp)
81000a41:	6a 00                	push   $0x0
81000a43:	e8 79 62 00 00       	call   81006cc1 <strtok>
81000a48:	83 c4 10             	add    $0x10,%esp
81000a4b:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token) {
81000a4e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000a52:	75 d7                	jne    81000a2b <main+0x109>
        if (argc == 0) {
81000a54:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000a58:	0f 84 81 00 00 00    	je     81000adf <main+0x1bd>
        const cli_cmd_t * cmd = find_builtin(argv[0]);
81000a5e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a61:	83 ec 0c             	sub    $0xc,%esp
81000a64:	50                   	push   %eax
81000a65:	e8 ff fc ff ff       	call   81000769 <find_builtin>
81000a6a:	83 c4 10             	add    $0x10,%esp
81000a6d:	89 45 e0             	mov    %eax,-0x20(%ebp)
        if (cmd) {
81000a70:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000a74:	74 17                	je     81000a8d <main+0x16b>
            run_builtin(cmd, argc, argv);
81000a76:	83 ec 04             	sub    $0x4,%esp
81000a79:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a7c:	50                   	push   %eax
81000a7d:	ff 75 f4             	pushl  -0xc(%ebp)
81000a80:	ff 75 e0             	pushl  -0x20(%ebp)
81000a83:	e8 25 fd ff ff       	call   810007ad <run_builtin>
81000a88:	83 c4 10             	add    $0x10,%esp
            continue;
81000a8b:	eb 53                	jmp    81000ae0 <main+0x1be>
        const char * path = find_exec_path(argv[0]);
81000a8d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a90:	83 ec 0c             	sub    $0xc,%esp
81000a93:	50                   	push   %eax
81000a94:	e8 56 fd ff ff       	call   810007ef <find_exec_path>
81000a99:	83 c4 10             	add    $0x10,%esp
81000a9c:	89 45 dc             	mov    %eax,-0x24(%ebp)
        if (path) {
81000a9f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000aa3:	74 17                	je     81000abc <main+0x19a>
            run_exec_file(path, argc, argv);
81000aa5:	83 ec 04             	sub    $0x4,%esp
81000aa8:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000aab:	50                   	push   %eax
81000aac:	ff 75 f4             	pushl  -0xc(%ebp)
81000aaf:	ff 75 dc             	pushl  -0x24(%ebp)
81000ab2:	e8 b9 fd ff ff       	call   81000870 <run_exec_file>
81000ab7:	83 c4 10             	add    $0x10,%esp
            continue;
81000aba:	eb 24                	jmp    81000ae0 <main+0x1be>
        fprintf(stderr, ESC_COLOR_ERROR"Unknown command: %s\n"ESC_COLOR_DEFAULT, cli.curr_input);
81000abc:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81000ac1:	8b 40 0c             	mov    0xc(%eax),%eax
81000ac4:	83 ec 04             	sub    $0x4,%esp
81000ac7:	68 80 96 00 81       	push   $0x81009680
81000acc:	68 5c 88 00 81       	push   $0x8100885c
81000ad1:	50                   	push   %eax
81000ad2:	e8 2a 10 00 00       	call   81001b01 <fiprintf>
81000ad7:	83 c4 10             	add    $0x10,%esp
81000ada:	e9 9b fe ff ff       	jmp    8100097a <main+0x58>
            continue;
81000adf:	90                   	nop
	for (;;) {
81000ae0:	e9 95 fe ff ff       	jmp    8100097a <main+0x58>
81000ae5:	8b 4d fc             	mov    -0x4(%ebp),%ecx
81000ae8:	c9                   	leave  
81000ae9:	8d 61 fc             	lea    -0x4(%ecx),%esp
81000aec:	c3                   	ret    

81000aed <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
81000aed:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
81000af0:	8e d8                	mov    %eax,%ds
    mov %ax, %es
81000af2:	8e c0                	mov    %eax,%es
    mov %ax, %fs
81000af4:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
81000af6:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
81000af8:	e9 00 00 00 00       	jmp    81000afd <cstart>

81000afd <cstart>:
extern uint8_t __bss_start__[], __bss_end__[];

/**
 * @brief 应用的初始化，C部分
 */
void cstart (int argc, char ** argv) {
81000afd:	55                   	push   %ebp
81000afe:	89 e5                	mov    %esp,%ebp
81000b00:	83 ec 18             	sub    $0x18,%esp
    // 清空bss区，注意这是必须的！！！
    // 像newlib库中有些代码就依赖于此，未清空时数据未知，导致调用sbrk时申请很大内存空间
    uint8_t * start = __bss_start__;
81000b03:	c7 45 f4 80 96 00 81 	movl   $0x81009680,-0xc(%ebp)
    while (start < __bss_end__) {
81000b0a:	eb 0c                	jmp    81000b18 <cstart+0x1b>
        *start++ = 0;
81000b0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000b0f:	8d 50 01             	lea    0x1(%eax),%edx
81000b12:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000b15:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000b18:	81 7d f4 20 9c 00 81 	cmpl   $0x81009c20,-0xc(%ebp)
81000b1f:	72 eb                	jb     81000b0c <cstart+0xf>
    }

    exit(main(argc, argv));
81000b21:	83 ec 08             	sub    $0x8,%esp
81000b24:	ff 75 0c             	pushl  0xc(%ebp)
81000b27:	ff 75 08             	pushl  0x8(%ebp)
81000b2a:	e8 f3 fd ff ff       	call   81000922 <main>
81000b2f:	83 c4 10             	add    $0x10,%esp
81000b32:	83 ec 0c             	sub    $0xc,%esp
81000b35:	50                   	push   %eax
81000b36:	e8 21 04 00 00       	call   81000f5c <exit>

81000b3b <sys_call>:
#include <string.h>

/**
 * 执行系统调用
 */
static inline int sys_call (syscall_args_t * args) {
81000b3b:	55                   	push   %ebp
81000b3c:	89 e5                	mov    %esp,%ebp
81000b3e:	57                   	push   %edi
81000b3f:	56                   	push   %esi
81000b40:	53                   	push   %ebx
81000b41:	83 ec 10             	sub    $0x10,%esp
    const unsigned long sys_gate_addr[] = {0, SELECTOR_SYSCALL | 0};  // 使用特权级0
81000b44:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000b4b:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
            "push %[arg1]\n\t"
            "push %[arg0]\n\t"
            "push %[id]\n\t"
            "lcalll *(%[gate])\n\n"
            :"=a"(ret)
            :[arg3]"r"(args->arg3), [arg2]"r"(args->arg2), [arg1]"r"(args->arg1),
81000b52:	8b 45 08             	mov    0x8(%ebp),%eax
81000b55:	8b 40 10             	mov    0x10(%eax),%eax
81000b58:	8b 55 08             	mov    0x8(%ebp),%edx
81000b5b:	8b 52 0c             	mov    0xc(%edx),%edx
81000b5e:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000b61:	8b 49 08             	mov    0x8(%ecx),%ecx
    [arg0]"r"(args->arg0), [id]"r"(args->id),
81000b64:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000b67:	8b 5b 04             	mov    0x4(%ebx),%ebx
81000b6a:	8b 75 08             	mov    0x8(%ebp),%esi
81000b6d:	8b 36                	mov    (%esi),%esi
    __asm__ __volatile__(
81000b6f:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000b72:	50                   	push   %eax
81000b73:	52                   	push   %edx
81000b74:	51                   	push   %ecx
81000b75:	53                   	push   %ebx
81000b76:	56                   	push   %esi
81000b77:	ff 1f                	lcall  *(%edi)
81000b79:	89 45 f0             	mov    %eax,-0x10(%ebp)
    [gate]"r"(sys_gate_addr));
    return ret;
81000b7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000b7f:	83 c4 10             	add    $0x10,%esp
81000b82:	5b                   	pop    %ebx
81000b83:	5e                   	pop    %esi
81000b84:	5f                   	pop    %edi
81000b85:	5d                   	pop    %ebp
81000b86:	c3                   	ret    

81000b87 <msleep>:

int msleep (int ms) {
81000b87:	55                   	push   %ebp
81000b88:	89 e5                	mov    %esp,%ebp
81000b8a:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) {
81000b8d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000b91:	7f 07                	jg     81000b9a <msleep+0x13>
        return 0;
81000b93:	b8 00 00 00 00       	mov    $0x0,%eax
81000b98:	eb 19                	jmp    81000bb3 <msleep+0x2c>
    }

    syscall_args_t args;
    args.id = SYS_msleep;
81000b9a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000ba1:	8b 45 08             	mov    0x8(%ebp),%eax
81000ba4:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000ba7:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000baa:	50                   	push   %eax
81000bab:	e8 8b ff ff ff       	call   81000b3b <sys_call>
81000bb0:	83 c4 04             	add    $0x4,%esp
}
81000bb3:	c9                   	leave  
81000bb4:	c3                   	ret    

81000bb5 <getpid>:

int getpid() {
81000bb5:	55                   	push   %ebp
81000bb6:	89 e5                	mov    %esp,%ebp
81000bb8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000bbb:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
81000bc2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bc5:	50                   	push   %eax
81000bc6:	e8 70 ff ff ff       	call   81000b3b <sys_call>
81000bcb:	83 c4 04             	add    $0x4,%esp
}
81000bce:	c9                   	leave  
81000bcf:	c3                   	ret    

81000bd0 <print_msg>:

int print_msg(char * fmt, int arg) {
81000bd0:	55                   	push   %ebp
81000bd1:	89 e5                	mov    %esp,%ebp
81000bd3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000bd6:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000bdd:	8b 45 08             	mov    0x8(%ebp),%eax
81000be0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000be3:	8b 45 0c             	mov    0xc(%ebp),%eax
81000be6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000be9:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bec:	50                   	push   %eax
81000bed:	e8 49 ff ff ff       	call   81000b3b <sys_call>
81000bf2:	83 c4 04             	add    $0x4,%esp
}
81000bf5:	c9                   	leave  
81000bf6:	c3                   	ret    

81000bf7 <fork>:

int fork() {
81000bf7:	55                   	push   %ebp
81000bf8:	89 e5                	mov    %esp,%ebp
81000bfa:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000bfd:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
81000c04:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c07:	50                   	push   %eax
81000c08:	e8 2e ff ff ff       	call   81000b3b <sys_call>
81000c0d:	83 c4 04             	add    $0x4,%esp
}
81000c10:	c9                   	leave  
81000c11:	c3                   	ret    

81000c12 <execve>:

int execve(const char *name, char * const *argv, char * const *env) {
81000c12:	55                   	push   %ebp
81000c13:	89 e5                	mov    %esp,%ebp
81000c15:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000c18:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000c1f:	8b 45 08             	mov    0x8(%ebp),%eax
81000c22:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000c25:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c28:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000c2b:	8b 45 10             	mov    0x10(%ebp),%eax
81000c2e:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000c31:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c34:	50                   	push   %eax
81000c35:	e8 01 ff ff ff       	call   81000b3b <sys_call>
81000c3a:	83 c4 04             	add    $0x4,%esp
}
81000c3d:	c9                   	leave  
81000c3e:	c3                   	ret    

81000c3f <yield>:

int yield (void) {
81000c3f:	55                   	push   %ebp
81000c40:	89 e5                	mov    %esp,%ebp
81000c42:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000c45:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    return sys_call(&args);
81000c4c:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c4f:	50                   	push   %eax
81000c50:	e8 e6 fe ff ff       	call   81000b3b <sys_call>
81000c55:	83 c4 04             	add    $0x4,%esp
}
81000c58:	c9                   	leave  
81000c59:	c3                   	ret    

81000c5a <wait>:

int wait(int* status) {
81000c5a:	55                   	push   %ebp
81000c5b:	89 e5                	mov    %esp,%ebp
81000c5d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000c60:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000c67:	8b 45 08             	mov    0x8(%ebp),%eax
81000c6a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000c6d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c70:	50                   	push   %eax
81000c71:	e8 c5 fe ff ff       	call   81000b3b <sys_call>
81000c76:	83 c4 04             	add    $0x4,%esp
}
81000c79:	c9                   	leave  
81000c7a:	c3                   	ret    

81000c7b <_exit>:

void _exit(int status) {
81000c7b:	55                   	push   %ebp
81000c7c:	89 e5                	mov    %esp,%ebp
81000c7e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000c81:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = (int)status;
81000c88:	8b 45 08             	mov    0x8(%ebp),%eax
81000c8b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
81000c8e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c91:	50                   	push   %eax
81000c92:	e8 a4 fe ff ff       	call   81000b3b <sys_call>
81000c97:	83 c4 04             	add    $0x4,%esp
    for (;;) {}
81000c9a:	eb fe                	jmp    81000c9a <_exit+0x1f>

81000c9c <open>:
}

int open(const char *name, int flags, ...) {
81000c9c:	55                   	push   %ebp
81000c9d:	89 e5                	mov    %esp,%ebp
81000c9f:	83 ec 20             	sub    $0x20,%esp
    // 不考虑支持太多参数
    syscall_args_t args;
    args.id = SYS_open;
81000ca2:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000ca9:	8b 45 08             	mov    0x8(%ebp),%eax
81000cac:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)flags;
81000caf:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cb2:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000cb5:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cb8:	50                   	push   %eax
81000cb9:	e8 7d fe ff ff       	call   81000b3b <sys_call>
81000cbe:	83 c4 04             	add    $0x4,%esp
}
81000cc1:	c9                   	leave  
81000cc2:	c3                   	ret    

81000cc3 <read>:

int read(int file, char *ptr, int len) {
81000cc3:	55                   	push   %ebp
81000cc4:	89 e5                	mov    %esp,%ebp
81000cc6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000cc9:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = (int)file;
81000cd0:	8b 45 08             	mov    0x8(%ebp),%eax
81000cd3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000cd6:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cd9:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000cdc:	8b 45 10             	mov    0x10(%ebp),%eax
81000cdf:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000ce2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ce5:	50                   	push   %eax
81000ce6:	e8 50 fe ff ff       	call   81000b3b <sys_call>
81000ceb:	83 c4 04             	add    $0x4,%esp
}
81000cee:	c9                   	leave  
81000cef:	c3                   	ret    

81000cf0 <write>:

int write(int file, char *ptr, int len) {
81000cf0:	55                   	push   %ebp
81000cf1:	89 e5                	mov    %esp,%ebp
81000cf3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000cf6:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = (int)file;
81000cfd:	8b 45 08             	mov    0x8(%ebp),%eax
81000d00:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000d03:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d06:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000d09:	8b 45 10             	mov    0x10(%ebp),%eax
81000d0c:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000d0f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d12:	50                   	push   %eax
81000d13:	e8 23 fe ff ff       	call   81000b3b <sys_call>
81000d18:	83 c4 04             	add    $0x4,%esp
}
81000d1b:	c9                   	leave  
81000d1c:	c3                   	ret    

81000d1d <close>:

int close(int file) {
81000d1d:	55                   	push   %ebp
81000d1e:	89 e5                	mov    %esp,%ebp
81000d20:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000d23:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = (int)file;
81000d2a:	8b 45 08             	mov    0x8(%ebp),%eax
81000d2d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000d30:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d33:	50                   	push   %eax
81000d34:	e8 02 fe ff ff       	call   81000b3b <sys_call>
81000d39:	83 c4 04             	add    $0x4,%esp
}
81000d3c:	c9                   	leave  
81000d3d:	c3                   	ret    

81000d3e <lseek>:

int lseek(int file, int ptr, int dir) {
81000d3e:	55                   	push   %ebp
81000d3f:	89 e5                	mov    %esp,%ebp
81000d41:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000d44:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = (int)file;
81000d4b:	8b 45 08             	mov    0x8(%ebp),%eax
81000d4e:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000d51:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d54:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000d57:	8b 45 10             	mov    0x10(%ebp),%eax
81000d5a:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000d5d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d60:	50                   	push   %eax
81000d61:	e8 d5 fd ff ff       	call   81000b3b <sys_call>
81000d66:	83 c4 04             	add    $0x4,%esp
}
81000d69:	c9                   	leave  
81000d6a:	c3                   	ret    

81000d6b <fstat>:

/**
 * 获取文件的状态
 */
int fstat(int file, struct stat *st) {
81000d6b:	55                   	push   %ebp
81000d6c:	89 e5                	mov    %esp,%ebp
81000d6e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000d71:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)file;
81000d78:	8b 45 08             	mov    0x8(%ebp),%eax
81000d7b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000d7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d81:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000d84:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d87:	50                   	push   %eax
81000d88:	e8 ae fd ff ff       	call   81000b3b <sys_call>
81000d8d:	83 c4 04             	add    $0x4,%esp
}
81000d90:	c9                   	leave  
81000d91:	c3                   	ret    

81000d92 <isatty>:

/**
 * 判断文件描述符与tty关联
 */
int isatty(int file) {
81000d92:	55                   	push   %ebp
81000d93:	89 e5                	mov    %esp,%ebp
81000d95:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000d98:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
81000d9f:	8b 45 08             	mov    0x8(%ebp),%eax
81000da2:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000da5:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000da8:	50                   	push   %eax
81000da9:	e8 8d fd ff ff       	call   81000b3b <sys_call>
81000dae:	83 c4 04             	add    $0x4,%esp
}
81000db1:	c9                   	leave  
81000db2:	c3                   	ret    

81000db3 <sbrk>:

void * sbrk(ptrdiff_t incr) {
81000db3:	55                   	push   %ebp
81000db4:	89 e5                	mov    %esp,%ebp
81000db6:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000db9:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)incr;
81000dc0:	8b 45 08             	mov    0x8(%ebp),%eax
81000dc3:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
81000dc6:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000dc9:	50                   	push   %eax
81000dca:	e8 6c fd ff ff       	call   81000b3b <sys_call>
81000dcf:	83 c4 04             	add    $0x4,%esp
}
81000dd2:	c9                   	leave  
81000dd3:	c3                   	ret    

81000dd4 <dup>:

int dup (int file) {
81000dd4:	55                   	push   %ebp
81000dd5:	89 e5                	mov    %esp,%ebp
81000dd7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000dda:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
81000de1:	8b 45 08             	mov    0x8(%ebp),%eax
81000de4:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000de7:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000dea:	50                   	push   %eax
81000deb:	e8 4b fd ff ff       	call   81000b3b <sys_call>
81000df0:	83 c4 04             	add    $0x4,%esp
}
81000df3:	c9                   	leave  
81000df4:	c3                   	ret    

81000df5 <ioctl>:

int ioctl(int fd, int cmd, int arg0, int arg1) {
81000df5:	55                   	push   %ebp
81000df6:	89 e5                	mov    %esp,%ebp
81000df8:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000dfb:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = fd;
81000e02:	8b 45 08             	mov    0x8(%ebp),%eax
81000e05:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = cmd;
81000e08:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e0b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = arg0;
81000e0e:	8b 45 10             	mov    0x10(%ebp),%eax
81000e11:	89 45 f8             	mov    %eax,-0x8(%ebp)
    args.arg3 = arg1;
81000e14:	8b 45 14             	mov    0x14(%ebp),%eax
81000e17:	89 45 fc             	mov    %eax,-0x4(%ebp)
    return sys_call(&args);
81000e1a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000e1d:	50                   	push   %eax
81000e1e:	e8 18 fd ff ff       	call   81000b3b <sys_call>
81000e23:	83 c4 04             	add    $0x4,%esp
}
81000e26:	c9                   	leave  
81000e27:	c3                   	ret    

81000e28 <opendir>:

DIR * opendir(const char * name) {
81000e28:	55                   	push   %ebp
81000e29:	89 e5                	mov    %esp,%ebp
81000e2b:	83 ec 28             	sub    $0x28,%esp
    DIR * dir = (DIR *)malloc(sizeof(DIR));
81000e2e:	83 ec 0c             	sub    $0xc,%esp
81000e31:	68 10 01 00 00       	push   $0x110
81000e36:	e8 9a 30 00 00       	call   81003ed5 <malloc>
81000e3b:	83 c4 10             	add    $0x10,%esp
81000e3e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR *)0) {
81000e41:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000e45:	75 07                	jne    81000e4e <opendir+0x26>
        return (DIR *)0;
81000e47:	b8 00 00 00 00       	mov    $0x0,%eax
81000e4c:	eb 43                	jmp    81000e91 <opendir+0x69>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000e4e:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)name;
81000e55:	8b 45 08             	mov    0x8(%ebp),%eax
81000e58:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000e5b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e5e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    int err = sys_call(&args);
81000e61:	83 ec 0c             	sub    $0xc,%esp
81000e64:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000e67:	50                   	push   %eax
81000e68:	e8 ce fc ff ff       	call   81000b3b <sys_call>
81000e6d:	83 c4 10             	add    $0x10,%esp
81000e70:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (err < 0) {
81000e73:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000e77:	79 15                	jns    81000e8e <opendir+0x66>
        free(dir);
81000e79:	83 ec 0c             	sub    $0xc,%esp
81000e7c:	ff 75 f4             	pushl  -0xc(%ebp)
81000e7f:	e8 6d 30 00 00       	call   81003ef1 <free>
81000e84:	83 c4 10             	add    $0x10,%esp
        return (DIR *)0;
81000e87:	b8 00 00 00 00       	mov    $0x0,%eax
81000e8c:	eb 03                	jmp    81000e91 <opendir+0x69>
    }
    return dir;
81000e8e:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000e91:	c9                   	leave  
81000e92:	c3                   	ret    

81000e93 <readdir>:

struct dirent* readdir(DIR* dir) {
81000e93:	55                   	push   %ebp
81000e94:	89 e5                	mov    %esp,%ebp
81000e96:	83 ec 20             	sub    $0x20,%esp

    syscall_args_t args;
    args.id = SYS_readdir;
81000e99:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000ea0:	8b 45 08             	mov    0x8(%ebp),%eax
81000ea3:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&dir->dirent;
81000ea6:	8b 45 08             	mov    0x8(%ebp),%eax
81000ea9:	83 c0 04             	add    $0x4,%eax
81000eac:	89 45 f0             	mov    %eax,-0x10(%ebp)
    int err = sys_call(&args);
81000eaf:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000eb2:	50                   	push   %eax
81000eb3:	e8 83 fc ff ff       	call   81000b3b <sys_call>
81000eb8:	83 c4 04             	add    $0x4,%esp
81000ebb:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000ebe:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000ec2:	79 07                	jns    81000ecb <readdir+0x38>
        return (struct dirent *)0;
81000ec4:	b8 00 00 00 00       	mov    $0x0,%eax
81000ec9:	eb 06                	jmp    81000ed1 <readdir+0x3e>
    }
    return &dir->dirent;
81000ecb:	8b 45 08             	mov    0x8(%ebp),%eax
81000ece:	83 c0 04             	add    $0x4,%eax
}
81000ed1:	c9                   	leave  
81000ed2:	c3                   	ret    

81000ed3 <closedir>:

int closedir(DIR *dir) {
81000ed3:	55                   	push   %ebp
81000ed4:	89 e5                	mov    %esp,%ebp
81000ed6:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000ed9:	c7 45 e4 3e 00 00 00 	movl   $0x3e,-0x1c(%ebp)
    args.arg0 = (int)dir;
81000ee0:	8b 45 08             	mov    0x8(%ebp),%eax
81000ee3:	89 45 e8             	mov    %eax,-0x18(%ebp)
    sys_call(&args);
81000ee6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81000ee9:	50                   	push   %eax
81000eea:	e8 4c fc ff ff       	call   81000b3b <sys_call>
81000eef:	83 c4 04             	add    $0x4,%esp

    free(dir);
81000ef2:	83 ec 0c             	sub    $0xc,%esp
81000ef5:	ff 75 08             	pushl  0x8(%ebp)
81000ef8:	e8 f4 2f 00 00       	call   81003ef1 <free>
81000efd:	83 c4 10             	add    $0x10,%esp
    return 0;
81000f00:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000f05:	c9                   	leave  
81000f06:	c3                   	ret    

81000f07 <unlink>:

int unlink(const char *path) {
81000f07:	55                   	push   %ebp
81000f08:	89 e5                	mov    %esp,%ebp
81000f0a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
81000f0d:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)path;
81000f14:	8b 45 08             	mov    0x8(%ebp),%eax
81000f17:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000f1a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000f1d:	50                   	push   %eax
81000f1e:	e8 18 fc ff ff       	call   81000b3b <sys_call>
81000f23:	83 c4 04             	add    $0x4,%esp
}
81000f26:	c9                   	leave  
81000f27:	c3                   	ret    

81000f28 <atoi>:
81000f28:	55                   	push   %ebp
81000f29:	89 e5                	mov    %esp,%ebp
81000f2b:	83 ec 08             	sub    $0x8,%esp
81000f2e:	83 ec 04             	sub    $0x4,%esp
81000f31:	6a 0a                	push   $0xa
81000f33:	6a 00                	push   $0x0
81000f35:	ff 75 08             	pushl  0x8(%ebp)
81000f38:	e8 c1 60 00 00       	call   81006ffe <strtol>
81000f3d:	83 c4 10             	add    $0x10,%esp
81000f40:	c9                   	leave  
81000f41:	c3                   	ret    

81000f42 <_atoi_r>:
81000f42:	55                   	push   %ebp
81000f43:	89 e5                	mov    %esp,%ebp
81000f45:	83 ec 08             	sub    $0x8,%esp
81000f48:	6a 0a                	push   $0xa
81000f4a:	6a 00                	push   $0x0
81000f4c:	ff 75 0c             	pushl  0xc(%ebp)
81000f4f:	ff 75 08             	pushl  0x8(%ebp)
81000f52:	e8 5d 60 00 00       	call   81006fb4 <_strtol_r>
81000f57:	83 c4 10             	add    $0x10,%esp
81000f5a:	c9                   	leave  
81000f5b:	c3                   	ret    

81000f5c <exit>:
81000f5c:	55                   	push   %ebp
81000f5d:	89 e5                	mov    %esp,%ebp
81000f5f:	83 ec 08             	sub    $0x8,%esp
81000f62:	83 ec 08             	sub    $0x8,%esp
81000f65:	6a 00                	push   $0x0
81000f67:	ff 75 08             	pushl  0x8(%ebp)
81000f6a:	e8 8c 63 00 00       	call   810072fb <__call_exitprocs>
81000f6f:	83 c4 10             	add    $0x10,%esp
81000f72:	a1 04 89 00 81       	mov    0x81008904,%eax
81000f77:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f7a:	85 c0                	test   %eax,%eax
81000f7c:	74 17                	je     81000f95 <exit+0x39>
81000f7e:	a1 04 89 00 81       	mov    0x81008904,%eax
81000f83:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f86:	8b 15 04 89 00 81    	mov    0x81008904,%edx
81000f8c:	83 ec 0c             	sub    $0xc,%esp
81000f8f:	52                   	push   %edx
81000f90:	ff d0                	call   *%eax
81000f92:	83 c4 10             	add    $0x10,%esp
81000f95:	83 ec 0c             	sub    $0xc,%esp
81000f98:	ff 75 08             	pushl  0x8(%ebp)
81000f9b:	e8 db fc ff ff       	call   81000c7b <_exit>

81000fa0 <_fclose_r>:
81000fa0:	55                   	push   %ebp
81000fa1:	89 e5                	mov    %esp,%ebp
81000fa3:	53                   	push   %ebx
81000fa4:	83 ec 14             	sub    $0x14,%esp
81000fa7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000faa:	85 db                	test   %ebx,%ebx
81000fac:	75 0a                	jne    81000fb8 <_fclose_r+0x18>
81000fae:	b8 00 00 00 00       	mov    $0x0,%eax
81000fb3:	e9 ea 00 00 00       	jmp    810010a2 <_fclose_r+0x102>
81000fb8:	8b 45 08             	mov    0x8(%ebp),%eax
81000fbb:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000fbe:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000fc2:	74 18                	je     81000fdc <_fclose_r+0x3c>
81000fc4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fc7:	8b 40 38             	mov    0x38(%eax),%eax
81000fca:	85 c0                	test   %eax,%eax
81000fcc:	75 0e                	jne    81000fdc <_fclose_r+0x3c>
81000fce:	83 ec 0c             	sub    $0xc,%esp
81000fd1:	ff 75 f0             	pushl  -0x10(%ebp)
81000fd4:	e8 fe 08 00 00       	call   810018d7 <__sinit>
81000fd9:	83 c4 10             	add    $0x10,%esp
81000fdc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fe0:	66 85 c0             	test   %ax,%ax
81000fe3:	75 0a                	jne    81000fef <_fclose_r+0x4f>
81000fe5:	b8 00 00 00 00       	mov    $0x0,%eax
81000fea:	e9 b3 00 00 00       	jmp    810010a2 <_fclose_r+0x102>
81000fef:	83 ec 08             	sub    $0x8,%esp
81000ff2:	53                   	push   %ebx
81000ff3:	ff 75 08             	pushl  0x8(%ebp)
81000ff6:	e8 c9 00 00 00       	call   810010c4 <__sflush_r>
81000ffb:	83 c4 10             	add    $0x10,%esp
81000ffe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001001:	8b 43 2c             	mov    0x2c(%ebx),%eax
81001004:	85 c0                	test   %eax,%eax
81001006:	74 1d                	je     81001025 <_fclose_r+0x85>
81001008:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100100b:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100100e:	83 ec 08             	sub    $0x8,%esp
81001011:	52                   	push   %edx
81001012:	ff 75 08             	pushl  0x8(%ebp)
81001015:	ff d0                	call   *%eax
81001017:	83 c4 10             	add    $0x10,%esp
8100101a:	85 c0                	test   %eax,%eax
8100101c:	79 07                	jns    81001025 <_fclose_r+0x85>
8100101e:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81001025:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001029:	98                   	cwtl   
8100102a:	25 80 00 00 00       	and    $0x80,%eax
8100102f:	85 c0                	test   %eax,%eax
81001031:	74 12                	je     81001045 <_fclose_r+0xa5>
81001033:	8b 43 10             	mov    0x10(%ebx),%eax
81001036:	83 ec 08             	sub    $0x8,%esp
81001039:	50                   	push   %eax
8100103a:	ff 75 08             	pushl  0x8(%ebp)
8100103d:	e8 4a 0e 00 00       	call   81001e8c <_free_r>
81001042:	83 c4 10             	add    $0x10,%esp
81001045:	8b 43 30             	mov    0x30(%ebx),%eax
81001048:	85 c0                	test   %eax,%eax
8100104a:	74 23                	je     8100106f <_fclose_r+0xcf>
8100104c:	8b 53 30             	mov    0x30(%ebx),%edx
8100104f:	8d 43 40             	lea    0x40(%ebx),%eax
81001052:	39 c2                	cmp    %eax,%edx
81001054:	74 12                	je     81001068 <_fclose_r+0xc8>
81001056:	8b 43 30             	mov    0x30(%ebx),%eax
81001059:	83 ec 08             	sub    $0x8,%esp
8100105c:	50                   	push   %eax
8100105d:	ff 75 08             	pushl  0x8(%ebp)
81001060:	e8 27 0e 00 00       	call   81001e8c <_free_r>
81001065:	83 c4 10             	add    $0x10,%esp
81001068:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100106f:	8b 43 44             	mov    0x44(%ebx),%eax
81001072:	85 c0                	test   %eax,%eax
81001074:	74 19                	je     8100108f <_fclose_r+0xef>
81001076:	8b 43 44             	mov    0x44(%ebx),%eax
81001079:	83 ec 08             	sub    $0x8,%esp
8100107c:	50                   	push   %eax
8100107d:	ff 75 08             	pushl  0x8(%ebp)
81001080:	e8 07 0e 00 00       	call   81001e8c <_free_r>
81001085:	83 c4 10             	add    $0x10,%esp
81001088:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
8100108f:	e8 dc 08 00 00       	call   81001970 <__sfp_lock_acquire>
81001094:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
8100109a:	e8 d7 08 00 00       	call   81001976 <__sfp_lock_release>
8100109f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810010a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810010a5:	c9                   	leave  
810010a6:	c3                   	ret    

810010a7 <fclose>:
810010a7:	55                   	push   %ebp
810010a8:	89 e5                	mov    %esp,%ebp
810010aa:	83 ec 08             	sub    $0x8,%esp
810010ad:	8b 55 08             	mov    0x8(%ebp),%edx
810010b0:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810010b5:	83 ec 08             	sub    $0x8,%esp
810010b8:	52                   	push   %edx
810010b9:	50                   	push   %eax
810010ba:	e8 e1 fe ff ff       	call   81000fa0 <_fclose_r>
810010bf:	83 c4 10             	add    $0x10,%esp
810010c2:	c9                   	leave  
810010c3:	c3                   	ret    

810010c4 <__sflush_r>:
810010c4:	55                   	push   %ebp
810010c5:	89 e5                	mov    %esp,%ebp
810010c7:	57                   	push   %edi
810010c8:	56                   	push   %esi
810010c9:	53                   	push   %ebx
810010ca:	83 ec 1c             	sub    $0x1c,%esp
810010cd:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810010d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010d4:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810010d8:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810010dc:	83 e0 08             	and    $0x8,%eax
810010df:	85 c0                	test   %eax,%eax
810010e1:	0f 85 93 01 00 00    	jne    8100127a <__sflush_r+0x1b6>
810010e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010eb:	80 cc 08             	or     $0x8,%ah
810010ee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810010f2:	8b 43 04             	mov    0x4(%ebx),%eax
810010f5:	85 c0                	test   %eax,%eax
810010f7:	7f 0b                	jg     81001104 <__sflush_r+0x40>
810010f9:	8b 43 3c             	mov    0x3c(%ebx),%eax
810010fc:	85 c0                	test   %eax,%eax
810010fe:	0f 8e 6f 01 00 00    	jle    81001273 <__sflush_r+0x1af>
81001104:	8b 43 28             	mov    0x28(%ebx),%eax
81001107:	85 c0                	test   %eax,%eax
81001109:	0f 84 64 01 00 00    	je     81001273 <__sflush_r+0x1af>
8100110f:	8b 45 08             	mov    0x8(%ebp),%eax
81001112:	8b 00                	mov    (%eax),%eax
81001114:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001117:	8b 45 08             	mov    0x8(%ebp),%eax
8100111a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001120:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001124:	98                   	cwtl   
81001125:	25 00 10 00 00       	and    $0x1000,%eax
8100112a:	85 c0                	test   %eax,%eax
8100112c:	74 08                	je     81001136 <__sflush_r+0x72>
8100112e:	8b 43 50             	mov    0x50(%ebx),%eax
81001131:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001134:	eb 64                	jmp    8100119a <__sflush_r+0xd6>
81001136:	8b 43 28             	mov    0x28(%ebx),%eax
81001139:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100113c:	6a 01                	push   $0x1
8100113e:	6a 00                	push   $0x0
81001140:	52                   	push   %edx
81001141:	ff 75 08             	pushl  0x8(%ebp)
81001144:	ff d0                	call   *%eax
81001146:	83 c4 10             	add    $0x10,%esp
81001149:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100114c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001150:	75 48                	jne    8100119a <__sflush_r+0xd6>
81001152:	8b 45 08             	mov    0x8(%ebp),%eax
81001155:	8b 00                	mov    (%eax),%eax
81001157:	85 c0                	test   %eax,%eax
81001159:	74 3f                	je     8100119a <__sflush_r+0xd6>
8100115b:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81001162:	8b 45 08             	mov    0x8(%ebp),%eax
81001165:	8b 00                	mov    (%eax),%eax
81001167:	83 f8 1d             	cmp    $0x1d,%eax
8100116a:	74 0a                	je     81001176 <__sflush_r+0xb2>
8100116c:	8b 45 08             	mov    0x8(%ebp),%eax
8100116f:	8b 00                	mov    (%eax),%eax
81001171:	83 f8 16             	cmp    $0x16,%eax
81001174:	75 11                	jne    81001187 <__sflush_r+0xc3>
81001176:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100117d:	8b 45 08             	mov    0x8(%ebp),%eax
81001180:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001183:	89 10                	mov    %edx,(%eax)
81001185:	eb 0b                	jmp    81001192 <__sflush_r+0xce>
81001187:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100118b:	83 c8 40             	or     $0x40,%eax
8100118e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001192:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001195:	e9 48 01 00 00       	jmp    810012e2 <__sflush_r+0x21e>
8100119a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100119e:	98                   	cwtl   
8100119f:	83 e0 04             	and    $0x4,%eax
810011a2:	85 c0                	test   %eax,%eax
810011a4:	74 13                	je     810011b9 <__sflush_r+0xf5>
810011a6:	8b 43 04             	mov    0x4(%ebx),%eax
810011a9:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011ac:	8b 43 30             	mov    0x30(%ebx),%eax
810011af:	85 c0                	test   %eax,%eax
810011b1:	74 06                	je     810011b9 <__sflush_r+0xf5>
810011b3:	8b 43 3c             	mov    0x3c(%ebx),%eax
810011b6:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011b9:	8b 43 28             	mov    0x28(%ebx),%eax
810011bc:	8b 53 1c             	mov    0x1c(%ebx),%edx
810011bf:	6a 00                	push   $0x0
810011c1:	ff 75 e4             	pushl  -0x1c(%ebp)
810011c4:	52                   	push   %edx
810011c5:	ff 75 08             	pushl  0x8(%ebp)
810011c8:	ff d0                	call   *%eax
810011ca:	83 c4 10             	add    $0x10,%esp
810011cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810011d0:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810011d4:	75 1d                	jne    810011f3 <__sflush_r+0x12f>
810011d6:	8b 45 08             	mov    0x8(%ebp),%eax
810011d9:	8b 00                	mov    (%eax),%eax
810011db:	85 c0                	test   %eax,%eax
810011dd:	74 14                	je     810011f3 <__sflush_r+0x12f>
810011df:	8b 45 08             	mov    0x8(%ebp),%eax
810011e2:	8b 00                	mov    (%eax),%eax
810011e4:	83 f8 1d             	cmp    $0x1d,%eax
810011e7:	74 0a                	je     810011f3 <__sflush_r+0x12f>
810011e9:	8b 45 08             	mov    0x8(%ebp),%eax
810011ec:	8b 00                	mov    (%eax),%eax
810011ee:	83 f8 16             	cmp    $0x16,%eax
810011f1:	75 6e                	jne    81001261 <__sflush_r+0x19d>
810011f3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011f7:	80 e4 f7             	and    $0xf7,%ah
810011fa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810011fe:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81001205:	8b 43 10             	mov    0x10(%ebx),%eax
81001208:	89 03                	mov    %eax,(%ebx)
8100120a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100120e:	98                   	cwtl   
8100120f:	25 00 10 00 00       	and    $0x1000,%eax
81001214:	85 c0                	test   %eax,%eax
81001216:	74 15                	je     8100122d <__sflush_r+0x169>
81001218:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100121c:	75 09                	jne    81001227 <__sflush_r+0x163>
8100121e:	8b 45 08             	mov    0x8(%ebp),%eax
81001221:	8b 00                	mov    (%eax),%eax
81001223:	85 c0                	test   %eax,%eax
81001225:	75 06                	jne    8100122d <__sflush_r+0x169>
81001227:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100122a:	89 43 50             	mov    %eax,0x50(%ebx)
8100122d:	8b 45 08             	mov    0x8(%ebp),%eax
81001230:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001233:	89 10                	mov    %edx,(%eax)
81001235:	8b 43 30             	mov    0x30(%ebx),%eax
81001238:	85 c0                	test   %eax,%eax
8100123a:	74 37                	je     81001273 <__sflush_r+0x1af>
8100123c:	8b 53 30             	mov    0x30(%ebx),%edx
8100123f:	8d 43 40             	lea    0x40(%ebx),%eax
81001242:	39 c2                	cmp    %eax,%edx
81001244:	74 12                	je     81001258 <__sflush_r+0x194>
81001246:	8b 43 30             	mov    0x30(%ebx),%eax
81001249:	83 ec 08             	sub    $0x8,%esp
8100124c:	50                   	push   %eax
8100124d:	ff 75 08             	pushl  0x8(%ebp)
81001250:	e8 37 0c 00 00       	call   81001e8c <_free_r>
81001255:	83 c4 10             	add    $0x10,%esp
81001258:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100125f:	eb 12                	jmp    81001273 <__sflush_r+0x1af>
81001261:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001265:	83 c8 40             	or     $0x40,%eax
81001268:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100126c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81001271:	eb 6f                	jmp    810012e2 <__sflush_r+0x21e>
81001273:	b8 00 00 00 00       	mov    $0x0,%eax
81001278:	eb 68                	jmp    810012e2 <__sflush_r+0x21e>
8100127a:	8b 73 10             	mov    0x10(%ebx),%esi
8100127d:	85 f6                	test   %esi,%esi
8100127f:	75 07                	jne    81001288 <__sflush_r+0x1c4>
81001281:	b8 00 00 00 00       	mov    $0x0,%eax
81001286:	eb 5a                	jmp    810012e2 <__sflush_r+0x21e>
81001288:	8b 03                	mov    (%ebx),%eax
8100128a:	29 f0                	sub    %esi,%eax
8100128c:	89 c7                	mov    %eax,%edi
8100128e:	89 33                	mov    %esi,(%ebx)
81001290:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81001294:	83 e0 03             	and    $0x3,%eax
81001297:	85 c0                	test   %eax,%eax
81001299:	75 05                	jne    810012a0 <__sflush_r+0x1dc>
8100129b:	8b 43 14             	mov    0x14(%ebx),%eax
8100129e:	eb 05                	jmp    810012a5 <__sflush_r+0x1e1>
810012a0:	b8 00 00 00 00       	mov    $0x0,%eax
810012a5:	89 43 08             	mov    %eax,0x8(%ebx)
810012a8:	eb 2f                	jmp    810012d9 <__sflush_r+0x215>
810012aa:	8b 43 24             	mov    0x24(%ebx),%eax
810012ad:	8b 53 1c             	mov    0x1c(%ebx),%edx
810012b0:	57                   	push   %edi
810012b1:	56                   	push   %esi
810012b2:	52                   	push   %edx
810012b3:	ff 75 08             	pushl  0x8(%ebp)
810012b6:	ff d0                	call   *%eax
810012b8:	83 c4 10             	add    $0x10,%esp
810012bb:	85 c0                	test   %eax,%eax
810012bd:	7f 12                	jg     810012d1 <__sflush_r+0x20d>
810012bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810012c3:	83 c8 40             	or     $0x40,%eax
810012c6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810012ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810012cf:	eb 11                	jmp    810012e2 <__sflush_r+0x21e>
810012d1:	89 c1                	mov    %eax,%ecx
810012d3:	89 c8                	mov    %ecx,%eax
810012d5:	01 c6                	add    %eax,%esi
810012d7:	29 cf                	sub    %ecx,%edi
810012d9:	85 ff                	test   %edi,%edi
810012db:	7f cd                	jg     810012aa <__sflush_r+0x1e6>
810012dd:	b8 00 00 00 00       	mov    $0x0,%eax
810012e2:	8d 65 f4             	lea    -0xc(%ebp),%esp
810012e5:	5b                   	pop    %ebx
810012e6:	5e                   	pop    %esi
810012e7:	5f                   	pop    %edi
810012e8:	5d                   	pop    %ebp
810012e9:	c3                   	ret    

810012ea <_fflush_r>:
810012ea:	55                   	push   %ebp
810012eb:	89 e5                	mov    %esp,%ebp
810012ed:	53                   	push   %ebx
810012ee:	83 ec 14             	sub    $0x14,%esp
810012f1:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810012f4:	8b 45 08             	mov    0x8(%ebp),%eax
810012f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810012fe:	74 18                	je     81001318 <_fflush_r+0x2e>
81001300:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001303:	8b 40 38             	mov    0x38(%eax),%eax
81001306:	85 c0                	test   %eax,%eax
81001308:	75 0e                	jne    81001318 <_fflush_r+0x2e>
8100130a:	83 ec 0c             	sub    $0xc,%esp
8100130d:	ff 75 f4             	pushl  -0xc(%ebp)
81001310:	e8 c2 05 00 00       	call   810018d7 <__sinit>
81001315:	83 c4 10             	add    $0x10,%esp
81001318:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100131c:	66 85 c0             	test   %ax,%ax
8100131f:	75 07                	jne    81001328 <_fflush_r+0x3e>
81001321:	b8 00 00 00 00       	mov    $0x0,%eax
81001326:	eb 15                	jmp    8100133d <_fflush_r+0x53>
81001328:	83 ec 08             	sub    $0x8,%esp
8100132b:	53                   	push   %ebx
8100132c:	ff 75 08             	pushl  0x8(%ebp)
8100132f:	e8 90 fd ff ff       	call   810010c4 <__sflush_r>
81001334:	83 c4 10             	add    $0x10,%esp
81001337:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100133a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100133d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001340:	c9                   	leave  
81001341:	c3                   	ret    

81001342 <fflush>:
81001342:	55                   	push   %ebp
81001343:	89 e5                	mov    %esp,%ebp
81001345:	83 ec 08             	sub    $0x8,%esp
81001348:	8b 55 08             	mov    0x8(%ebp),%edx
8100134b:	85 d2                	test   %edx,%edx
8100134d:	75 18                	jne    81001367 <fflush+0x25>
8100134f:	a1 04 89 00 81       	mov    0x81008904,%eax
81001354:	83 ec 08             	sub    $0x8,%esp
81001357:	68 ea 12 00 81       	push   $0x810012ea
8100135c:	50                   	push   %eax
8100135d:	e8 bd 1a 00 00       	call   81002e1f <_fwalk_reent>
81001362:	83 c4 10             	add    $0x10,%esp
81001365:	eb 12                	jmp    81001379 <fflush+0x37>
81001367:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100136c:	83 ec 08             	sub    $0x8,%esp
8100136f:	52                   	push   %edx
81001370:	50                   	push   %eax
81001371:	e8 74 ff ff ff       	call   810012ea <_fflush_r>
81001376:	83 c4 10             	add    $0x10,%esp
81001379:	c9                   	leave  
8100137a:	c3                   	ret    

8100137b <_fgetc_r>:
8100137b:	55                   	push   %ebp
8100137c:	89 e5                	mov    %esp,%ebp
8100137e:	83 ec 18             	sub    $0x18,%esp
81001381:	8b 45 08             	mov    0x8(%ebp),%eax
81001384:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001387:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100138b:	74 18                	je     810013a5 <_fgetc_r+0x2a>
8100138d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001390:	8b 40 38             	mov    0x38(%eax),%eax
81001393:	85 c0                	test   %eax,%eax
81001395:	75 0e                	jne    810013a5 <_fgetc_r+0x2a>
81001397:	83 ec 0c             	sub    $0xc,%esp
8100139a:	ff 75 f4             	pushl  -0xc(%ebp)
8100139d:	e8 35 05 00 00       	call   810018d7 <__sinit>
810013a2:	83 c4 10             	add    $0x10,%esp
810013a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810013a8:	8b 40 04             	mov    0x4(%eax),%eax
810013ab:	8d 50 ff             	lea    -0x1(%eax),%edx
810013ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810013b1:	89 50 04             	mov    %edx,0x4(%eax)
810013b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810013b7:	8b 40 04             	mov    0x4(%eax),%eax
810013ba:	85 c0                	test   %eax,%eax
810013bc:	79 13                	jns    810013d1 <_fgetc_r+0x56>
810013be:	83 ec 08             	sub    $0x8,%esp
810013c1:	ff 75 0c             	pushl  0xc(%ebp)
810013c4:	ff 75 08             	pushl  0x8(%ebp)
810013c7:	e8 dd 51 00 00       	call   810065a9 <__srget_r>
810013cc:	83 c4 10             	add    $0x10,%esp
810013cf:	eb 13                	jmp    810013e4 <_fgetc_r+0x69>
810013d1:	8b 45 0c             	mov    0xc(%ebp),%eax
810013d4:	8b 00                	mov    (%eax),%eax
810013d6:	8d 48 01             	lea    0x1(%eax),%ecx
810013d9:	8b 55 0c             	mov    0xc(%ebp),%edx
810013dc:	89 0a                	mov    %ecx,(%edx)
810013de:	0f b6 00             	movzbl (%eax),%eax
810013e1:	0f b6 c0             	movzbl %al,%eax
810013e4:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013e7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013ea:	c9                   	leave  
810013eb:	c3                   	ret    

810013ec <fgetc>:
810013ec:	55                   	push   %ebp
810013ed:	89 e5                	mov    %esp,%ebp
810013ef:	83 ec 18             	sub    $0x18,%esp
810013f2:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810013f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001400:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81001404:	74 18                	je     8100141e <fgetc+0x32>
81001406:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001409:	8b 40 38             	mov    0x38(%eax),%eax
8100140c:	85 c0                	test   %eax,%eax
8100140e:	75 0e                	jne    8100141e <fgetc+0x32>
81001410:	83 ec 0c             	sub    $0xc,%esp
81001413:	ff 75 f0             	pushl  -0x10(%ebp)
81001416:	e8 bc 04 00 00       	call   810018d7 <__sinit>
8100141b:	83 c4 10             	add    $0x10,%esp
8100141e:	8b 45 08             	mov    0x8(%ebp),%eax
81001421:	8b 40 04             	mov    0x4(%eax),%eax
81001424:	8d 50 ff             	lea    -0x1(%eax),%edx
81001427:	8b 45 08             	mov    0x8(%ebp),%eax
8100142a:	89 50 04             	mov    %edx,0x4(%eax)
8100142d:	8b 45 08             	mov    0x8(%ebp),%eax
81001430:	8b 40 04             	mov    0x4(%eax),%eax
81001433:	85 c0                	test   %eax,%eax
81001435:	79 13                	jns    8100144a <fgetc+0x5e>
81001437:	83 ec 08             	sub    $0x8,%esp
8100143a:	ff 75 08             	pushl  0x8(%ebp)
8100143d:	ff 75 f4             	pushl  -0xc(%ebp)
81001440:	e8 64 51 00 00       	call   810065a9 <__srget_r>
81001445:	83 c4 10             	add    $0x10,%esp
81001448:	eb 13                	jmp    8100145d <fgetc+0x71>
8100144a:	8b 45 08             	mov    0x8(%ebp),%eax
8100144d:	8b 00                	mov    (%eax),%eax
8100144f:	8d 48 01             	lea    0x1(%eax),%ecx
81001452:	8b 55 08             	mov    0x8(%ebp),%edx
81001455:	89 0a                	mov    %ecx,(%edx)
81001457:	0f b6 00             	movzbl (%eax),%eax
8100145a:	0f b6 c0             	movzbl %al,%eax
8100145d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001460:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001463:	c9                   	leave  
81001464:	c3                   	ret    

81001465 <_fgets_r>:
81001465:	55                   	push   %ebp
81001466:	89 e5                	mov    %esp,%ebp
81001468:	83 ec 28             	sub    $0x28,%esp
8100146b:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
8100146f:	7f 0a                	jg     8100147b <_fgets_r+0x16>
81001471:	b8 00 00 00 00       	mov    $0x0,%eax
81001476:	e9 46 01 00 00       	jmp    810015c1 <_fgets_r+0x15c>
8100147b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100147e:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001481:	8b 45 08             	mov    0x8(%ebp),%eax
81001484:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001487:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
8100148b:	74 18                	je     810014a5 <_fgets_r+0x40>
8100148d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001490:	8b 40 38             	mov    0x38(%eax),%eax
81001493:	85 c0                	test   %eax,%eax
81001495:	75 0e                	jne    810014a5 <_fgets_r+0x40>
81001497:	83 ec 0c             	sub    $0xc,%esp
8100149a:	ff 75 ec             	pushl  -0x14(%ebp)
8100149d:	e8 35 04 00 00       	call   810018d7 <__sinit>
810014a2:	83 c4 10             	add    $0x10,%esp
810014a5:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
810014a9:	8b 45 14             	mov    0x14(%ebp),%eax
810014ac:	8b 40 04             	mov    0x4(%eax),%eax
810014af:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014b2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810014b6:	75 34                	jne    810014ec <_fgets_r+0x87>
810014b8:	83 ec 08             	sub    $0x8,%esp
810014bb:	ff 75 14             	pushl  0x14(%ebp)
810014be:	ff 75 08             	pushl  0x8(%ebp)
810014c1:	e8 e2 4e 00 00       	call   810063a8 <__srefill_r>
810014c6:	83 c4 10             	add    $0x10,%esp
810014c9:	85 c0                	test   %eax,%eax
810014cb:	74 16                	je     810014e3 <_fgets_r+0x7e>
810014cd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014d0:	3b 45 0c             	cmp    0xc(%ebp),%eax
810014d3:	0f 85 de 00 00 00    	jne    810015b7 <_fgets_r+0x152>
810014d9:	b8 00 00 00 00       	mov    $0x0,%eax
810014de:	e9 de 00 00 00       	jmp    810015c1 <_fgets_r+0x15c>
810014e3:	8b 45 14             	mov    0x14(%ebp),%eax
810014e6:	8b 40 04             	mov    0x4(%eax),%eax
810014e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014ec:	8b 45 14             	mov    0x14(%ebp),%eax
810014ef:	8b 00                	mov    (%eax),%eax
810014f1:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014f4:	8b 45 10             	mov    0x10(%ebp),%eax
810014f7:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810014fa:	76 06                	jbe    81001502 <_fgets_r+0x9d>
810014fc:	8b 45 10             	mov    0x10(%ebp),%eax
810014ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001502:	83 ec 04             	sub    $0x4,%esp
81001505:	ff 75 f4             	pushl  -0xc(%ebp)
81001508:	6a 0a                	push   $0xa
8100150a:	ff 75 e8             	pushl  -0x18(%ebp)
8100150d:	e8 be 34 00 00       	call   810049d0 <memchr>
81001512:	83 c4 10             	add    $0x10,%esp
81001515:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001518:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100151c:	74 4a                	je     81001568 <_fgets_r+0x103>
8100151e:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81001522:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001525:	2b 45 e8             	sub    -0x18(%ebp),%eax
81001528:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100152b:	8b 45 14             	mov    0x14(%ebp),%eax
8100152e:	8b 40 04             	mov    0x4(%eax),%eax
81001531:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001534:	89 c2                	mov    %eax,%edx
81001536:	8b 45 14             	mov    0x14(%ebp),%eax
81001539:	89 50 04             	mov    %edx,0x4(%eax)
8100153c:	8b 45 14             	mov    0x14(%ebp),%eax
8100153f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001542:	89 10                	mov    %edx,(%eax)
81001544:	83 ec 04             	sub    $0x4,%esp
81001547:	ff 75 f4             	pushl  -0xc(%ebp)
8100154a:	ff 75 e8             	pushl  -0x18(%ebp)
8100154d:	ff 75 f0             	pushl  -0x10(%ebp)
81001550:	e8 63 35 00 00       	call   81004ab8 <memcpy>
81001555:	83 c4 10             	add    $0x10,%esp
81001558:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100155b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100155e:	01 d0                	add    %edx,%eax
81001560:	c6 00 00             	movb   $0x0,(%eax)
81001563:	8b 45 0c             	mov    0xc(%ebp),%eax
81001566:	eb 59                	jmp    810015c1 <_fgets_r+0x15c>
81001568:	8b 45 14             	mov    0x14(%ebp),%eax
8100156b:	8b 40 04             	mov    0x4(%eax),%eax
8100156e:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001571:	89 c2                	mov    %eax,%edx
81001573:	8b 45 14             	mov    0x14(%ebp),%eax
81001576:	89 50 04             	mov    %edx,0x4(%eax)
81001579:	8b 45 14             	mov    0x14(%ebp),%eax
8100157c:	8b 10                	mov    (%eax),%edx
8100157e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001581:	01 c2                	add    %eax,%edx
81001583:	8b 45 14             	mov    0x14(%ebp),%eax
81001586:	89 10                	mov    %edx,(%eax)
81001588:	83 ec 04             	sub    $0x4,%esp
8100158b:	ff 75 f4             	pushl  -0xc(%ebp)
8100158e:	ff 75 e8             	pushl  -0x18(%ebp)
81001591:	ff 75 f0             	pushl  -0x10(%ebp)
81001594:	e8 1f 35 00 00       	call   81004ab8 <memcpy>
81001599:	83 c4 10             	add    $0x10,%esp
8100159c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100159f:	01 45 f0             	add    %eax,-0x10(%ebp)
810015a2:	8b 45 10             	mov    0x10(%ebp),%eax
810015a5:	2b 45 f4             	sub    -0xc(%ebp),%eax
810015a8:	89 45 10             	mov    %eax,0x10(%ebp)
810015ab:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810015af:	0f 85 f4 fe ff ff    	jne    810014a9 <_fgets_r+0x44>
810015b5:	eb 01                	jmp    810015b8 <_fgets_r+0x153>
810015b7:	90                   	nop
810015b8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015bb:	c6 00 00             	movb   $0x0,(%eax)
810015be:	8b 45 0c             	mov    0xc(%ebp),%eax
810015c1:	c9                   	leave  
810015c2:	c3                   	ret    

810015c3 <fgets>:
810015c3:	55                   	push   %ebp
810015c4:	89 e5                	mov    %esp,%ebp
810015c6:	83 ec 08             	sub    $0x8,%esp
810015c9:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810015ce:	ff 75 10             	pushl  0x10(%ebp)
810015d1:	ff 75 0c             	pushl  0xc(%ebp)
810015d4:	ff 75 08             	pushl  0x8(%ebp)
810015d7:	50                   	push   %eax
810015d8:	e8 88 fe ff ff       	call   81001465 <_fgets_r>
810015dd:	83 c4 10             	add    $0x10,%esp
810015e0:	c9                   	leave  
810015e1:	c3                   	ret    

810015e2 <std>:
810015e2:	55                   	push   %ebp
810015e3:	89 e5                	mov    %esp,%ebp
810015e5:	83 ec 08             	sub    $0x8,%esp
810015e8:	8b 45 08             	mov    0x8(%ebp),%eax
810015eb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810015f1:	8b 45 08             	mov    0x8(%ebp),%eax
810015f4:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810015fb:	8b 45 08             	mov    0x8(%ebp),%eax
810015fe:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001605:	8b 45 0c             	mov    0xc(%ebp),%eax
81001608:	89 c2                	mov    %eax,%edx
8100160a:	8b 45 08             	mov    0x8(%ebp),%eax
8100160d:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001611:	8b 45 08             	mov    0x8(%ebp),%eax
81001614:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
8100161b:	8b 45 10             	mov    0x10(%ebp),%eax
8100161e:	89 c2                	mov    %eax,%edx
81001620:	8b 45 08             	mov    0x8(%ebp),%eax
81001623:	66 89 50 0e          	mov    %dx,0xe(%eax)
81001627:	8b 45 08             	mov    0x8(%ebp),%eax
8100162a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001631:	8b 45 08             	mov    0x8(%ebp),%eax
81001634:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100163b:	8b 45 08             	mov    0x8(%ebp),%eax
8100163e:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001645:	8b 45 08             	mov    0x8(%ebp),%eax
81001648:	83 c0 5c             	add    $0x5c,%eax
8100164b:	83 ec 04             	sub    $0x4,%esp
8100164e:	6a 08                	push   $0x8
81001650:	6a 00                	push   $0x0
81001652:	50                   	push   %eax
81001653:	e8 35 35 00 00       	call   81004b8d <memset>
81001658:	83 c4 10             	add    $0x10,%esp
8100165b:	8b 45 08             	mov    0x8(%ebp),%eax
8100165e:	8b 55 08             	mov    0x8(%ebp),%edx
81001661:	89 50 1c             	mov    %edx,0x1c(%eax)
81001664:	8b 45 08             	mov    0x8(%ebp),%eax
81001667:	c7 40 20 22 69 00 81 	movl   $0x81006922,0x20(%eax)
8100166e:	8b 45 08             	mov    0x8(%ebp),%eax
81001671:	c7 40 24 70 69 00 81 	movl   $0x81006970,0x24(%eax)
81001678:	8b 45 08             	mov    0x8(%ebp),%eax
8100167b:	c7 40 28 cb 69 00 81 	movl   $0x810069cb,0x28(%eax)
81001682:	8b 45 08             	mov    0x8(%ebp),%eax
81001685:	c7 40 2c 15 6a 00 81 	movl   $0x81006a15,0x2c(%eax)
8100168c:	90                   	nop
8100168d:	c9                   	leave  
8100168e:	c3                   	ret    

8100168f <stdin_init>:
8100168f:	55                   	push   %ebp
81001690:	89 e5                	mov    %esp,%ebp
81001692:	83 ec 08             	sub    $0x8,%esp
81001695:	83 ec 04             	sub    $0x4,%esp
81001698:	6a 00                	push   $0x0
8100169a:	6a 04                	push   $0x4
8100169c:	ff 75 08             	pushl  0x8(%ebp)
8100169f:	e8 3e ff ff ff       	call   810015e2 <std>
810016a4:	83 c4 10             	add    $0x10,%esp
810016a7:	90                   	nop
810016a8:	c9                   	leave  
810016a9:	c3                   	ret    

810016aa <stdout_init>:
810016aa:	55                   	push   %ebp
810016ab:	89 e5                	mov    %esp,%ebp
810016ad:	83 ec 08             	sub    $0x8,%esp
810016b0:	83 ec 04             	sub    $0x4,%esp
810016b3:	6a 01                	push   $0x1
810016b5:	6a 09                	push   $0x9
810016b7:	ff 75 08             	pushl  0x8(%ebp)
810016ba:	e8 23 ff ff ff       	call   810015e2 <std>
810016bf:	83 c4 10             	add    $0x10,%esp
810016c2:	90                   	nop
810016c3:	c9                   	leave  
810016c4:	c3                   	ret    

810016c5 <stderr_init>:
810016c5:	55                   	push   %ebp
810016c6:	89 e5                	mov    %esp,%ebp
810016c8:	83 ec 08             	sub    $0x8,%esp
810016cb:	83 ec 04             	sub    $0x4,%esp
810016ce:	6a 02                	push   $0x2
810016d0:	6a 12                	push   $0x12
810016d2:	ff 75 08             	pushl  0x8(%ebp)
810016d5:	e8 08 ff ff ff       	call   810015e2 <std>
810016da:	83 c4 10             	add    $0x10,%esp
810016dd:	90                   	nop
810016de:	c9                   	leave  
810016df:	c3                   	ret    

810016e0 <__sfmoreglue>:
810016e0:	55                   	push   %ebp
810016e1:	89 e5                	mov    %esp,%ebp
810016e3:	53                   	push   %ebx
810016e4:	83 ec 14             	sub    $0x14,%esp
810016e7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810016ea:	8d 43 ff             	lea    -0x1(%ebx),%eax
810016ed:	6b c0 68             	imul   $0x68,%eax,%eax
810016f0:	83 c0 74             	add    $0x74,%eax
810016f3:	83 ec 08             	sub    $0x8,%esp
810016f6:	50                   	push   %eax
810016f7:	ff 75 08             	pushl  0x8(%ebp)
810016fa:	e8 a2 2a 00 00       	call   810041a1 <_malloc_r>
810016ff:	83 c4 10             	add    $0x10,%esp
81001702:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001705:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001709:	75 07                	jne    81001712 <__sfmoreglue+0x32>
8100170b:	b8 00 00 00 00       	mov    $0x0,%eax
81001710:	eb 38                	jmp    8100174a <__sfmoreglue+0x6a>
81001712:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001715:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100171b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100171e:	89 58 04             	mov    %ebx,0x4(%eax)
81001721:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001724:	8d 50 0c             	lea    0xc(%eax),%edx
81001727:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100172a:	89 50 08             	mov    %edx,0x8(%eax)
8100172d:	89 d8                	mov    %ebx,%eax
8100172f:	6b c0 68             	imul   $0x68,%eax,%eax
81001732:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001735:	83 c2 0c             	add    $0xc,%edx
81001738:	83 ec 04             	sub    $0x4,%esp
8100173b:	50                   	push   %eax
8100173c:	6a 00                	push   $0x0
8100173e:	52                   	push   %edx
8100173f:	e8 49 34 00 00       	call   81004b8d <memset>
81001744:	83 c4 10             	add    $0x10,%esp
81001747:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100174a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100174d:	c9                   	leave  
8100174e:	c3                   	ret    

8100174f <__sfp>:
8100174f:	55                   	push   %ebp
81001750:	89 e5                	mov    %esp,%ebp
81001752:	83 ec 18             	sub    $0x18,%esp
81001755:	e8 16 02 00 00       	call   81001970 <__sfp_lock_acquire>
8100175a:	a1 04 89 00 81       	mov    0x81008904,%eax
8100175f:	8b 40 38             	mov    0x38(%eax),%eax
81001762:	85 c0                	test   %eax,%eax
81001764:	75 11                	jne    81001777 <__sfp+0x28>
81001766:	a1 04 89 00 81       	mov    0x81008904,%eax
8100176b:	83 ec 0c             	sub    $0xc,%esp
8100176e:	50                   	push   %eax
8100176f:	e8 63 01 00 00       	call   810018d7 <__sinit>
81001774:	83 c4 10             	add    $0x10,%esp
81001777:	a1 04 89 00 81       	mov    0x81008904,%eax
8100177c:	05 e0 02 00 00       	add    $0x2e0,%eax
81001781:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001784:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001787:	8b 40 08             	mov    0x8(%eax),%eax
8100178a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100178d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001790:	8b 40 04             	mov    0x4(%eax),%eax
81001793:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001796:	eb 10                	jmp    810017a8 <__sfp+0x59>
81001798:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100179b:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100179f:	66 85 c0             	test   %ax,%ax
810017a2:	74 58                	je     810017fc <__sfp+0xad>
810017a4:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
810017a8:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810017ac:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810017b0:	79 e6                	jns    81001798 <__sfp+0x49>
810017b2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017b5:	8b 00                	mov    (%eax),%eax
810017b7:	85 c0                	test   %eax,%eax
810017b9:	75 1e                	jne    810017d9 <__sfp+0x8a>
810017bb:	83 ec 08             	sub    $0x8,%esp
810017be:	6a 04                	push   $0x4
810017c0:	ff 75 08             	pushl  0x8(%ebp)
810017c3:	e8 18 ff ff ff       	call   810016e0 <__sfmoreglue>
810017c8:	83 c4 10             	add    $0x10,%esp
810017cb:	8b 55 ec             	mov    -0x14(%ebp),%edx
810017ce:	89 02                	mov    %eax,(%edx)
810017d0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017d3:	8b 00                	mov    (%eax),%eax
810017d5:	85 c0                	test   %eax,%eax
810017d7:	74 0a                	je     810017e3 <__sfp+0x94>
810017d9:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017dc:	8b 00                	mov    (%eax),%eax
810017de:	89 45 ec             	mov    %eax,-0x14(%ebp)
810017e1:	eb a1                	jmp    81001784 <__sfp+0x35>
810017e3:	90                   	nop
810017e4:	e8 8d 01 00 00       	call   81001976 <__sfp_lock_release>
810017e9:	8b 45 08             	mov    0x8(%ebp),%eax
810017ec:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810017f2:	b8 00 00 00 00       	mov    $0x0,%eax
810017f7:	e9 9e 00 00 00       	jmp    8100189a <__sfp+0x14b>
810017fc:	90                   	nop
810017fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001800:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
81001806:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001809:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
8100180f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001812:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001819:	e8 58 01 00 00       	call   81001976 <__sfp_lock_release>
8100181e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001821:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001827:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100182a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81001831:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001834:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
8100183b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100183e:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001845:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001848:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100184f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001852:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001859:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100185c:	83 c0 5c             	add    $0x5c,%eax
8100185f:	83 ec 04             	sub    $0x4,%esp
81001862:	6a 08                	push   $0x8
81001864:	6a 00                	push   $0x0
81001866:	50                   	push   %eax
81001867:	e8 21 33 00 00       	call   81004b8d <memset>
8100186c:	83 c4 10             	add    $0x10,%esp
8100186f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001872:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001879:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100187c:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81001883:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001886:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
8100188d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001890:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001897:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100189a:	c9                   	leave  
8100189b:	c3                   	ret    

8100189c <_cleanup_r>:
8100189c:	55                   	push   %ebp
8100189d:	89 e5                	mov    %esp,%ebp
8100189f:	83 ec 18             	sub    $0x18,%esp
810018a2:	c7 45 f4 a0 0f 00 81 	movl   $0x81000fa0,-0xc(%ebp)
810018a9:	83 ec 08             	sub    $0x8,%esp
810018ac:	ff 75 f4             	pushl  -0xc(%ebp)
810018af:	ff 75 08             	pushl  0x8(%ebp)
810018b2:	e8 68 15 00 00       	call   81002e1f <_fwalk_reent>
810018b7:	83 c4 10             	add    $0x10,%esp
810018ba:	90                   	nop
810018bb:	c9                   	leave  
810018bc:	c3                   	ret    

810018bd <_cleanup>:
810018bd:	55                   	push   %ebp
810018be:	89 e5                	mov    %esp,%ebp
810018c0:	83 ec 08             	sub    $0x8,%esp
810018c3:	a1 04 89 00 81       	mov    0x81008904,%eax
810018c8:	83 ec 0c             	sub    $0xc,%esp
810018cb:	50                   	push   %eax
810018cc:	e8 cb ff ff ff       	call   8100189c <_cleanup_r>
810018d1:	83 c4 10             	add    $0x10,%esp
810018d4:	90                   	nop
810018d5:	c9                   	leave  
810018d6:	c3                   	ret    

810018d7 <__sinit>:
810018d7:	55                   	push   %ebp
810018d8:	89 e5                	mov    %esp,%ebp
810018da:	83 ec 08             	sub    $0x8,%esp
810018dd:	e8 9a 00 00 00       	call   8100197c <__sinit_lock_acquire>
810018e2:	8b 45 08             	mov    0x8(%ebp),%eax
810018e5:	8b 40 38             	mov    0x38(%eax),%eax
810018e8:	85 c0                	test   %eax,%eax
810018ea:	74 07                	je     810018f3 <__sinit+0x1c>
810018ec:	e8 91 00 00 00       	call   81001982 <__sinit_lock_release>
810018f1:	eb 7b                	jmp    8100196e <__sinit+0x97>
810018f3:	8b 45 08             	mov    0x8(%ebp),%eax
810018f6:	c7 40 3c 9c 18 00 81 	movl   $0x8100189c,0x3c(%eax)
810018fd:	8b 45 08             	mov    0x8(%ebp),%eax
81001900:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
81001907:	00 00 00 
8100190a:	8b 45 08             	mov    0x8(%ebp),%eax
8100190d:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81001914:	00 00 00 
81001917:	8b 45 08             	mov    0x8(%ebp),%eax
8100191a:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
81001920:	8b 45 08             	mov    0x8(%ebp),%eax
81001923:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001929:	8b 45 08             	mov    0x8(%ebp),%eax
8100192c:	8b 40 04             	mov    0x4(%eax),%eax
8100192f:	83 ec 0c             	sub    $0xc,%esp
81001932:	50                   	push   %eax
81001933:	e8 57 fd ff ff       	call   8100168f <stdin_init>
81001938:	83 c4 10             	add    $0x10,%esp
8100193b:	8b 45 08             	mov    0x8(%ebp),%eax
8100193e:	8b 40 08             	mov    0x8(%eax),%eax
81001941:	83 ec 0c             	sub    $0xc,%esp
81001944:	50                   	push   %eax
81001945:	e8 60 fd ff ff       	call   810016aa <stdout_init>
8100194a:	83 c4 10             	add    $0x10,%esp
8100194d:	8b 45 08             	mov    0x8(%ebp),%eax
81001950:	8b 40 0c             	mov    0xc(%eax),%eax
81001953:	83 ec 0c             	sub    $0xc,%esp
81001956:	50                   	push   %eax
81001957:	e8 69 fd ff ff       	call   810016c5 <stderr_init>
8100195c:	83 c4 10             	add    $0x10,%esp
8100195f:	8b 45 08             	mov    0x8(%ebp),%eax
81001962:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001969:	e8 14 00 00 00       	call   81001982 <__sinit_lock_release>
8100196e:	c9                   	leave  
8100196f:	c3                   	ret    

81001970 <__sfp_lock_acquire>:
81001970:	55                   	push   %ebp
81001971:	89 e5                	mov    %esp,%ebp
81001973:	90                   	nop
81001974:	5d                   	pop    %ebp
81001975:	c3                   	ret    

81001976 <__sfp_lock_release>:
81001976:	55                   	push   %ebp
81001977:	89 e5                	mov    %esp,%ebp
81001979:	90                   	nop
8100197a:	5d                   	pop    %ebp
8100197b:	c3                   	ret    

8100197c <__sinit_lock_acquire>:
8100197c:	55                   	push   %ebp
8100197d:	89 e5                	mov    %esp,%ebp
8100197f:	90                   	nop
81001980:	5d                   	pop    %ebp
81001981:	c3                   	ret    

81001982 <__sinit_lock_release>:
81001982:	55                   	push   %ebp
81001983:	89 e5                	mov    %esp,%ebp
81001985:	90                   	nop
81001986:	5d                   	pop    %ebp
81001987:	c3                   	ret    

81001988 <__fp_lock>:
81001988:	55                   	push   %ebp
81001989:	89 e5                	mov    %esp,%ebp
8100198b:	b8 00 00 00 00       	mov    $0x0,%eax
81001990:	5d                   	pop    %ebp
81001991:	c3                   	ret    

81001992 <__fp_unlock>:
81001992:	55                   	push   %ebp
81001993:	89 e5                	mov    %esp,%ebp
81001995:	b8 00 00 00 00       	mov    $0x0,%eax
8100199a:	5d                   	pop    %ebp
8100199b:	c3                   	ret    

8100199c <__fp_lock_all>:
8100199c:	55                   	push   %ebp
8100199d:	89 e5                	mov    %esp,%ebp
8100199f:	83 ec 08             	sub    $0x8,%esp
810019a2:	e8 c9 ff ff ff       	call   81001970 <__sfp_lock_acquire>
810019a7:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810019ac:	83 ec 08             	sub    $0x8,%esp
810019af:	68 88 19 00 81       	push   $0x81001988
810019b4:	50                   	push   %eax
810019b5:	e8 fd 13 00 00       	call   81002db7 <_fwalk>
810019ba:	83 c4 10             	add    $0x10,%esp
810019bd:	90                   	nop
810019be:	c9                   	leave  
810019bf:	c3                   	ret    

810019c0 <__fp_unlock_all>:
810019c0:	55                   	push   %ebp
810019c1:	89 e5                	mov    %esp,%ebp
810019c3:	83 ec 08             	sub    $0x8,%esp
810019c6:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810019cb:	83 ec 08             	sub    $0x8,%esp
810019ce:	68 92 19 00 81       	push   $0x81001992
810019d3:	50                   	push   %eax
810019d4:	e8 de 13 00 00       	call   81002db7 <_fwalk>
810019d9:	83 c4 10             	add    $0x10,%esp
810019dc:	e8 95 ff ff ff       	call   81001976 <__sfp_lock_release>
810019e1:	90                   	nop
810019e2:	c9                   	leave  
810019e3:	c3                   	ret    

810019e4 <_fopen_r>:
810019e4:	55                   	push   %ebp
810019e5:	89 e5                	mov    %esp,%ebp
810019e7:	56                   	push   %esi
810019e8:	53                   	push   %ebx
810019e9:	83 ec 10             	sub    $0x10,%esp
810019ec:	83 ec 04             	sub    $0x4,%esp
810019ef:	8d 45 f0             	lea    -0x10(%ebp),%eax
810019f2:	50                   	push   %eax
810019f3:	ff 75 10             	pushl  0x10(%ebp)
810019f6:	ff 75 08             	pushl  0x8(%ebp)
810019f9:	e8 5c 5a 00 00       	call   8100745a <__sflags>
810019fe:	83 c4 10             	add    $0x10,%esp
81001a01:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001a04:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001a08:	75 0a                	jne    81001a14 <_fopen_r+0x30>
81001a0a:	b8 00 00 00 00       	mov    $0x0,%eax
81001a0f:	e9 9e 00 00 00       	jmp    81001ab2 <_fopen_r+0xce>
81001a14:	83 ec 0c             	sub    $0xc,%esp
81001a17:	ff 75 08             	pushl  0x8(%ebp)
81001a1a:	e8 30 fd ff ff       	call   8100174f <__sfp>
81001a1f:	83 c4 10             	add    $0x10,%esp
81001a22:	89 c3                	mov    %eax,%ebx
81001a24:	85 db                	test   %ebx,%ebx
81001a26:	75 0a                	jne    81001a32 <_fopen_r+0x4e>
81001a28:	b8 00 00 00 00       	mov    $0x0,%eax
81001a2d:	e9 80 00 00 00       	jmp    81001ab2 <_fopen_r+0xce>
81001a32:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a35:	68 b6 01 00 00       	push   $0x1b6
81001a3a:	50                   	push   %eax
81001a3b:	ff 75 0c             	pushl  0xc(%ebp)
81001a3e:	ff 75 08             	pushl  0x8(%ebp)
81001a41:	e8 2a 3d 00 00       	call   81005770 <_open_r>
81001a46:	83 c4 10             	add    $0x10,%esp
81001a49:	89 c6                	mov    %eax,%esi
81001a4b:	85 f6                	test   %esi,%esi
81001a4d:	79 17                	jns    81001a66 <_fopen_r+0x82>
81001a4f:	e8 1c ff ff ff       	call   81001970 <__sfp_lock_acquire>
81001a54:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001a5a:	e8 17 ff ff ff       	call   81001976 <__sfp_lock_release>
81001a5f:	b8 00 00 00 00       	mov    $0x0,%eax
81001a64:	eb 4c                	jmp    81001ab2 <_fopen_r+0xce>
81001a66:	89 f0                	mov    %esi,%eax
81001a68:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001a6c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a6f:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001a73:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
81001a76:	c7 43 20 22 69 00 81 	movl   $0x81006922,0x20(%ebx)
81001a7d:	c7 43 24 70 69 00 81 	movl   $0x81006970,0x24(%ebx)
81001a84:	c7 43 28 cb 69 00 81 	movl   $0x810069cb,0x28(%ebx)
81001a8b:	c7 43 2c 15 6a 00 81 	movl   $0x81006a15,0x2c(%ebx)
81001a92:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001a96:	98                   	cwtl   
81001a97:	25 00 01 00 00       	and    $0x100,%eax
81001a9c:	85 c0                	test   %eax,%eax
81001a9e:	74 10                	je     81001ab0 <_fopen_r+0xcc>
81001aa0:	6a 02                	push   $0x2
81001aa2:	6a 00                	push   $0x0
81001aa4:	53                   	push   %ebx
81001aa5:	ff 75 08             	pushl  0x8(%ebp)
81001aa8:	e8 1b 09 00 00       	call   810023c8 <_fseek_r>
81001aad:	83 c4 10             	add    $0x10,%esp
81001ab0:	89 d8                	mov    %ebx,%eax
81001ab2:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001ab5:	5b                   	pop    %ebx
81001ab6:	5e                   	pop    %esi
81001ab7:	5d                   	pop    %ebp
81001ab8:	c3                   	ret    

81001ab9 <fopen>:
81001ab9:	55                   	push   %ebp
81001aba:	89 e5                	mov    %esp,%ebp
81001abc:	83 ec 08             	sub    $0x8,%esp
81001abf:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81001ac4:	83 ec 04             	sub    $0x4,%esp
81001ac7:	ff 75 0c             	pushl  0xc(%ebp)
81001aca:	ff 75 08             	pushl  0x8(%ebp)
81001acd:	50                   	push   %eax
81001ace:	e8 11 ff ff ff       	call   810019e4 <_fopen_r>
81001ad3:	83 c4 10             	add    $0x10,%esp
81001ad6:	c9                   	leave  
81001ad7:	c3                   	ret    

81001ad8 <_fiprintf_r>:
81001ad8:	55                   	push   %ebp
81001ad9:	89 e5                	mov    %esp,%ebp
81001adb:	83 ec 18             	sub    $0x18,%esp
81001ade:	8d 45 14             	lea    0x14(%ebp),%eax
81001ae1:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ae4:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ae7:	50                   	push   %eax
81001ae8:	ff 75 10             	pushl  0x10(%ebp)
81001aeb:	ff 75 0c             	pushl  0xc(%ebp)
81001aee:	ff 75 08             	pushl  0x8(%ebp)
81001af1:	e8 3a 33 00 00       	call   81004e30 <_vfiprintf_r>
81001af6:	83 c4 10             	add    $0x10,%esp
81001af9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001afc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001aff:	c9                   	leave  
81001b00:	c3                   	ret    

81001b01 <fiprintf>:
81001b01:	55                   	push   %ebp
81001b02:	89 e5                	mov    %esp,%ebp
81001b04:	83 ec 18             	sub    $0x18,%esp
81001b07:	8d 45 10             	lea    0x10(%ebp),%eax
81001b0a:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001b0d:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001b10:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81001b15:	52                   	push   %edx
81001b16:	ff 75 0c             	pushl  0xc(%ebp)
81001b19:	ff 75 08             	pushl  0x8(%ebp)
81001b1c:	50                   	push   %eax
81001b1d:	e8 0e 33 00 00       	call   81004e30 <_vfiprintf_r>
81001b22:	83 c4 10             	add    $0x10,%esp
81001b25:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b28:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b2b:	c9                   	leave  
81001b2c:	c3                   	ret    

81001b2d <_fputs_r>:
81001b2d:	55                   	push   %ebp
81001b2e:	89 e5                	mov    %esp,%ebp
81001b30:	83 ec 28             	sub    $0x28,%esp
81001b33:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b36:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001b39:	83 ec 0c             	sub    $0xc,%esp
81001b3c:	ff 75 0c             	pushl  0xc(%ebp)
81001b3f:	e8 ac 50 00 00       	call   81006bf0 <strlen>
81001b44:	83 c4 10             	add    $0x10,%esp
81001b47:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b4a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b4d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001b50:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001b53:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001b56:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001b5d:	8b 45 08             	mov    0x8(%ebp),%eax
81001b60:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b63:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001b67:	74 18                	je     81001b81 <_fputs_r+0x54>
81001b69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b6c:	8b 40 38             	mov    0x38(%eax),%eax
81001b6f:	85 c0                	test   %eax,%eax
81001b71:	75 0e                	jne    81001b81 <_fputs_r+0x54>
81001b73:	83 ec 0c             	sub    $0xc,%esp
81001b76:	ff 75 f4             	pushl  -0xc(%ebp)
81001b79:	e8 59 fd ff ff       	call   810018d7 <__sinit>
81001b7e:	83 c4 10             	add    $0x10,%esp
81001b81:	8b 45 10             	mov    0x10(%ebp),%eax
81001b84:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b88:	98                   	cwtl   
81001b89:	25 00 20 00 00       	and    $0x2000,%eax
81001b8e:	85 c0                	test   %eax,%eax
81001b90:	75 24                	jne    81001bb6 <_fputs_r+0x89>
81001b92:	8b 45 10             	mov    0x10(%ebp),%eax
81001b95:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b99:	80 cc 20             	or     $0x20,%ah
81001b9c:	89 c2                	mov    %eax,%edx
81001b9e:	8b 45 10             	mov    0x10(%ebp),%eax
81001ba1:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001ba5:	8b 45 10             	mov    0x10(%ebp),%eax
81001ba8:	8b 40 64             	mov    0x64(%eax),%eax
81001bab:	80 e4 df             	and    $0xdf,%ah
81001bae:	89 c2                	mov    %eax,%edx
81001bb0:	8b 45 10             	mov    0x10(%ebp),%eax
81001bb3:	89 50 64             	mov    %edx,0x64(%eax)
81001bb6:	83 ec 04             	sub    $0x4,%esp
81001bb9:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81001bbc:	50                   	push   %eax
81001bbd:	ff 75 10             	pushl  0x10(%ebp)
81001bc0:	ff 75 08             	pushl  0x8(%ebp)
81001bc3:	e8 51 0d 00 00       	call   81002919 <__sfvwrite_r>
81001bc8:	83 c4 10             	add    $0x10,%esp
81001bcb:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001bce:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001bd1:	c9                   	leave  
81001bd2:	c3                   	ret    

81001bd3 <fputs>:
81001bd3:	55                   	push   %ebp
81001bd4:	89 e5                	mov    %esp,%ebp
81001bd6:	83 ec 08             	sub    $0x8,%esp
81001bd9:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81001bde:	83 ec 04             	sub    $0x4,%esp
81001be1:	ff 75 0c             	pushl  0xc(%ebp)
81001be4:	ff 75 08             	pushl  0x8(%ebp)
81001be7:	50                   	push   %eax
81001be8:	e8 40 ff ff ff       	call   81001b2d <_fputs_r>
81001bed:	83 c4 10             	add    $0x10,%esp
81001bf0:	c9                   	leave  
81001bf1:	c3                   	ret    

81001bf2 <_fread_r>:
81001bf2:	55                   	push   %ebp
81001bf3:	89 e5                	mov    %esp,%ebp
81001bf5:	57                   	push   %edi
81001bf6:	56                   	push   %esi
81001bf7:	53                   	push   %ebx
81001bf8:	83 ec 2c             	sub    $0x2c,%esp
81001bfb:	8b 45 14             	mov    0x14(%ebp),%eax
81001bfe:	0f af 45 10          	imul   0x10(%ebp),%eax
81001c02:	89 c3                	mov    %eax,%ebx
81001c04:	85 db                	test   %ebx,%ebx
81001c06:	75 0a                	jne    81001c12 <_fread_r+0x20>
81001c08:	b8 00 00 00 00       	mov    $0x0,%eax
81001c0d:	e9 4d 02 00 00       	jmp    81001e5f <_fread_r+0x26d>
81001c12:	8b 45 08             	mov    0x8(%ebp),%eax
81001c15:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001c18:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001c1c:	74 18                	je     81001c36 <_fread_r+0x44>
81001c1e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001c21:	8b 40 38             	mov    0x38(%eax),%eax
81001c24:	85 c0                	test   %eax,%eax
81001c26:	75 0e                	jne    81001c36 <_fread_r+0x44>
81001c28:	83 ec 0c             	sub    $0xc,%esp
81001c2b:	ff 75 e4             	pushl  -0x1c(%ebp)
81001c2e:	e8 a4 fc ff ff       	call   810018d7 <__sinit>
81001c33:	83 c4 10             	add    $0x10,%esp
81001c36:	8b 45 18             	mov    0x18(%ebp),%eax
81001c39:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c3d:	98                   	cwtl   
81001c3e:	25 00 20 00 00       	and    $0x2000,%eax
81001c43:	85 c0                	test   %eax,%eax
81001c45:	75 24                	jne    81001c6b <_fread_r+0x79>
81001c47:	8b 45 18             	mov    0x18(%ebp),%eax
81001c4a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c4e:	80 cc 20             	or     $0x20,%ah
81001c51:	89 c2                	mov    %eax,%edx
81001c53:	8b 45 18             	mov    0x18(%ebp),%eax
81001c56:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001c5a:	8b 45 18             	mov    0x18(%ebp),%eax
81001c5d:	8b 40 64             	mov    0x64(%eax),%eax
81001c60:	80 e4 df             	and    $0xdf,%ah
81001c63:	89 c2                	mov    %eax,%edx
81001c65:	8b 45 18             	mov    0x18(%ebp),%eax
81001c68:	89 50 64             	mov    %edx,0x64(%eax)
81001c6b:	8b 45 18             	mov    0x18(%ebp),%eax
81001c6e:	8b 40 04             	mov    0x4(%eax),%eax
81001c71:	85 c0                	test   %eax,%eax
81001c73:	79 0a                	jns    81001c7f <_fread_r+0x8d>
81001c75:	8b 45 18             	mov    0x18(%ebp),%eax
81001c78:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001c7f:	89 5d e0             	mov    %ebx,-0x20(%ebp)
81001c82:	8b 75 0c             	mov    0xc(%ebp),%esi
81001c85:	8b 45 18             	mov    0x18(%ebp),%eax
81001c88:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c8c:	98                   	cwtl   
81001c8d:	83 e0 02             	and    $0x2,%eax
81001c90:	85 c0                	test   %eax,%eax
81001c92:	0f 84 88 01 00 00    	je     81001e20 <_fread_r+0x22e>
81001c98:	8b 45 18             	mov    0x18(%ebp),%eax
81001c9b:	8b 40 04             	mov    0x4(%eax),%eax
81001c9e:	39 c3                	cmp    %eax,%ebx
81001ca0:	0f 46 c3             	cmovbe %ebx,%eax
81001ca3:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001ca6:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001ca9:	8b 45 18             	mov    0x18(%ebp),%eax
81001cac:	8b 00                	mov    (%eax),%eax
81001cae:	83 ec 04             	sub    $0x4,%esp
81001cb1:	52                   	push   %edx
81001cb2:	50                   	push   %eax
81001cb3:	56                   	push   %esi
81001cb4:	e8 ff 2d 00 00       	call   81004ab8 <memcpy>
81001cb9:	83 c4 10             	add    $0x10,%esp
81001cbc:	8b 45 18             	mov    0x18(%ebp),%eax
81001cbf:	8b 10                	mov    (%eax),%edx
81001cc1:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001cc4:	01 c2                	add    %eax,%edx
81001cc6:	8b 45 18             	mov    0x18(%ebp),%eax
81001cc9:	89 10                	mov    %edx,(%eax)
81001ccb:	8b 45 18             	mov    0x18(%ebp),%eax
81001cce:	8b 40 04             	mov    0x4(%eax),%eax
81001cd1:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001cd4:	89 c2                	mov    %eax,%edx
81001cd6:	8b 45 18             	mov    0x18(%ebp),%eax
81001cd9:	89 50 04             	mov    %edx,0x4(%eax)
81001cdc:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001cdf:	01 c6                	add    %eax,%esi
81001ce1:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ce4:	29 c3                	sub    %eax,%ebx
81001ce6:	8b 45 18             	mov    0x18(%ebp),%eax
81001ce9:	8b 40 30             	mov    0x30(%eax),%eax
81001cec:	85 c0                	test   %eax,%eax
81001cee:	0f 84 d0 00 00 00    	je     81001dc4 <_fread_r+0x1d2>
81001cf4:	85 db                	test   %ebx,%ebx
81001cf6:	0f 84 c8 00 00 00    	je     81001dc4 <_fread_r+0x1d2>
81001cfc:	8b 45 18             	mov    0x18(%ebp),%eax
81001cff:	8b 40 30             	mov    0x30(%eax),%eax
81001d02:	8b 55 18             	mov    0x18(%ebp),%edx
81001d05:	83 c2 40             	add    $0x40,%edx
81001d08:	39 d0                	cmp    %edx,%eax
81001d0a:	74 15                	je     81001d21 <_fread_r+0x12f>
81001d0c:	8b 45 18             	mov    0x18(%ebp),%eax
81001d0f:	8b 40 30             	mov    0x30(%eax),%eax
81001d12:	83 ec 08             	sub    $0x8,%esp
81001d15:	50                   	push   %eax
81001d16:	ff 75 08             	pushl  0x8(%ebp)
81001d19:	e8 6e 01 00 00       	call   81001e8c <_free_r>
81001d1e:	83 c4 10             	add    $0x10,%esp
81001d21:	8b 45 18             	mov    0x18(%ebp),%eax
81001d24:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001d2b:	e9 94 00 00 00       	jmp    81001dc4 <_fread_r+0x1d2>
81001d30:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001d37:	8b 45 18             	mov    0x18(%ebp),%eax
81001d3a:	8b 40 10             	mov    0x10(%eax),%eax
81001d3d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001d40:	8b 45 18             	mov    0x18(%ebp),%eax
81001d43:	8b 00                	mov    (%eax),%eax
81001d45:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001d48:	8b 45 18             	mov    0x18(%ebp),%eax
81001d4b:	8b 40 14             	mov    0x14(%eax),%eax
81001d4e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001d51:	8b 45 18             	mov    0x18(%ebp),%eax
81001d54:	89 70 10             	mov    %esi,0x10(%eax)
81001d57:	89 da                	mov    %ebx,%edx
81001d59:	8b 45 18             	mov    0x18(%ebp),%eax
81001d5c:	89 50 14             	mov    %edx,0x14(%eax)
81001d5f:	8b 45 18             	mov    0x18(%ebp),%eax
81001d62:	89 30                	mov    %esi,(%eax)
81001d64:	83 ec 08             	sub    $0x8,%esp
81001d67:	ff 75 18             	pushl  0x18(%ebp)
81001d6a:	ff 75 08             	pushl  0x8(%ebp)
81001d6d:	e8 36 46 00 00       	call   810063a8 <__srefill_r>
81001d72:	83 c4 10             	add    $0x10,%esp
81001d75:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001d78:	8b 45 18             	mov    0x18(%ebp),%eax
81001d7b:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001d7e:	89 50 10             	mov    %edx,0x10(%eax)
81001d81:	8b 45 18             	mov    0x18(%ebp),%eax
81001d84:	8b 55 cc             	mov    -0x34(%ebp),%edx
81001d87:	89 50 14             	mov    %edx,0x14(%eax)
81001d8a:	8b 45 18             	mov    0x18(%ebp),%eax
81001d8d:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001d90:	89 10                	mov    %edx,(%eax)
81001d92:	8b 45 18             	mov    0x18(%ebp),%eax
81001d95:	8b 40 04             	mov    0x4(%eax),%eax
81001d98:	29 c3                	sub    %eax,%ebx
81001d9a:	8b 45 18             	mov    0x18(%ebp),%eax
81001d9d:	8b 40 04             	mov    0x4(%eax),%eax
81001da0:	01 c6                	add    %eax,%esi
81001da2:	8b 45 18             	mov    0x18(%ebp),%eax
81001da5:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001dac:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81001db0:	74 12                	je     81001dc4 <_fread_r+0x1d2>
81001db2:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001db5:	29 d8                	sub    %ebx,%eax
81001db7:	ba 00 00 00 00       	mov    $0x0,%edx
81001dbc:	f7 75 10             	divl   0x10(%ebp)
81001dbf:	e9 9b 00 00 00       	jmp    81001e5f <_fread_r+0x26d>
81001dc4:	85 db                	test   %ebx,%ebx
81001dc6:	0f 85 64 ff ff ff    	jne    81001d30 <_fread_r+0x13e>
81001dcc:	e9 8b 00 00 00       	jmp    81001e5c <_fread_r+0x26a>
81001dd1:	89 fa                	mov    %edi,%edx
81001dd3:	8b 45 18             	mov    0x18(%ebp),%eax
81001dd6:	8b 00                	mov    (%eax),%eax
81001dd8:	83 ec 04             	sub    $0x4,%esp
81001ddb:	52                   	push   %edx
81001ddc:	50                   	push   %eax
81001ddd:	56                   	push   %esi
81001dde:	e8 d5 2c 00 00       	call   81004ab8 <memcpy>
81001de3:	83 c4 10             	add    $0x10,%esp
81001de6:	8b 45 18             	mov    0x18(%ebp),%eax
81001de9:	8b 00                	mov    (%eax),%eax
81001deb:	89 fa                	mov    %edi,%edx
81001ded:	01 c2                	add    %eax,%edx
81001def:	8b 45 18             	mov    0x18(%ebp),%eax
81001df2:	89 10                	mov    %edx,(%eax)
81001df4:	89 f8                	mov    %edi,%eax
81001df6:	01 c6                	add    %eax,%esi
81001df8:	89 f8                	mov    %edi,%eax
81001dfa:	29 c3                	sub    %eax,%ebx
81001dfc:	83 ec 08             	sub    $0x8,%esp
81001dff:	ff 75 18             	pushl  0x18(%ebp)
81001e02:	ff 75 08             	pushl  0x8(%ebp)
81001e05:	e8 9e 45 00 00       	call   810063a8 <__srefill_r>
81001e0a:	83 c4 10             	add    $0x10,%esp
81001e0d:	85 c0                	test   %eax,%eax
81001e0f:	74 0f                	je     81001e20 <_fread_r+0x22e>
81001e11:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e14:	29 d8                	sub    %ebx,%eax
81001e16:	ba 00 00 00 00       	mov    $0x0,%edx
81001e1b:	f7 75 10             	divl   0x10(%ebp)
81001e1e:	eb 3f                	jmp    81001e5f <_fread_r+0x26d>
81001e20:	8b 45 18             	mov    0x18(%ebp),%eax
81001e23:	8b 78 04             	mov    0x4(%eax),%edi
81001e26:	89 f8                	mov    %edi,%eax
81001e28:	39 c3                	cmp    %eax,%ebx
81001e2a:	77 a5                	ja     81001dd1 <_fread_r+0x1df>
81001e2c:	8b 45 18             	mov    0x18(%ebp),%eax
81001e2f:	8b 00                	mov    (%eax),%eax
81001e31:	83 ec 04             	sub    $0x4,%esp
81001e34:	53                   	push   %ebx
81001e35:	50                   	push   %eax
81001e36:	56                   	push   %esi
81001e37:	e8 7c 2c 00 00       	call   81004ab8 <memcpy>
81001e3c:	83 c4 10             	add    $0x10,%esp
81001e3f:	8b 45 18             	mov    0x18(%ebp),%eax
81001e42:	8b 40 04             	mov    0x4(%eax),%eax
81001e45:	29 d8                	sub    %ebx,%eax
81001e47:	89 c2                	mov    %eax,%edx
81001e49:	8b 45 18             	mov    0x18(%ebp),%eax
81001e4c:	89 50 04             	mov    %edx,0x4(%eax)
81001e4f:	8b 45 18             	mov    0x18(%ebp),%eax
81001e52:	8b 00                	mov    (%eax),%eax
81001e54:	8d 14 18             	lea    (%eax,%ebx,1),%edx
81001e57:	8b 45 18             	mov    0x18(%ebp),%eax
81001e5a:	89 10                	mov    %edx,(%eax)
81001e5c:	8b 45 14             	mov    0x14(%ebp),%eax
81001e5f:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001e62:	5b                   	pop    %ebx
81001e63:	5e                   	pop    %esi
81001e64:	5f                   	pop    %edi
81001e65:	5d                   	pop    %ebp
81001e66:	c3                   	ret    

81001e67 <fread>:
81001e67:	55                   	push   %ebp
81001e68:	89 e5                	mov    %esp,%ebp
81001e6a:	83 ec 08             	sub    $0x8,%esp
81001e6d:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81001e72:	83 ec 0c             	sub    $0xc,%esp
81001e75:	ff 75 14             	pushl  0x14(%ebp)
81001e78:	ff 75 10             	pushl  0x10(%ebp)
81001e7b:	ff 75 0c             	pushl  0xc(%ebp)
81001e7e:	ff 75 08             	pushl  0x8(%ebp)
81001e81:	50                   	push   %eax
81001e82:	e8 6b fd ff ff       	call   81001bf2 <_fread_r>
81001e87:	83 c4 20             	add    $0x20,%esp
81001e8a:	c9                   	leave  
81001e8b:	c3                   	ret    

81001e8c <_free_r>:
81001e8c:	55                   	push   %ebp
81001e8d:	89 e5                	mov    %esp,%ebp
81001e8f:	53                   	push   %ebx
81001e90:	83 ec 34             	sub    $0x34,%esp
81001e93:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001e97:	0f 84 c4 03 00 00    	je     81002261 <_free_r+0x3d5>
81001e9d:	83 ec 0c             	sub    $0xc,%esp
81001ea0:	ff 75 08             	pushl  0x8(%ebp)
81001ea3:	e8 6d 2d 00 00       	call   81004c15 <__malloc_lock>
81001ea8:	83 c4 10             	add    $0x10,%esp
81001eab:	8b 45 0c             	mov    0xc(%ebp),%eax
81001eae:	83 e8 08             	sub    $0x8,%eax
81001eb1:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001eb4:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eb7:	8b 40 04             	mov    0x4(%eax),%eax
81001eba:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001ebd:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ec0:	83 e0 fe             	and    $0xfffffffe,%eax
81001ec3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ec6:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001ec9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ecc:	01 d0                	add    %edx,%eax
81001ece:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001ed1:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ed4:	8b 40 04             	mov    0x4(%eax),%eax
81001ed7:	83 e0 fc             	and    $0xfffffffc,%eax
81001eda:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001edd:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81001ee2:	8b 40 08             	mov    0x8(%eax),%eax
81001ee5:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001ee8:	0f 85 94 00 00 00    	jne    81001f82 <_free_r+0xf6>
81001eee:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ef1:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ef4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ef7:	83 e0 01             	and    $0x1,%eax
81001efa:	85 c0                	test   %eax,%eax
81001efc:	75 3a                	jne    81001f38 <_free_r+0xac>
81001efe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f01:	8b 00                	mov    (%eax),%eax
81001f03:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001f06:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f09:	f7 d8                	neg    %eax
81001f0b:	01 45 f4             	add    %eax,-0xc(%ebp)
81001f0e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f11:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f14:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f17:	8b 40 0c             	mov    0xc(%eax),%eax
81001f1a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f20:	8b 40 08             	mov    0x8(%eax),%eax
81001f23:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f26:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f29:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001f2c:	89 50 0c             	mov    %edx,0xc(%eax)
81001f2f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f32:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f35:	89 50 08             	mov    %edx,0x8(%eax)
81001f38:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f3b:	83 c8 01             	or     $0x1,%eax
81001f3e:	89 c2                	mov    %eax,%edx
81001f40:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f43:	89 50 04             	mov    %edx,0x4(%eax)
81001f46:	ba e0 90 00 81       	mov    $0x810090e0,%edx
81001f4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f4e:	89 42 08             	mov    %eax,0x8(%edx)
81001f51:	a1 e8 94 00 81       	mov    0x810094e8,%eax
81001f56:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001f59:	72 14                	jb     81001f6f <_free_r+0xe3>
81001f5b:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
81001f60:	83 ec 08             	sub    $0x8,%esp
81001f63:	50                   	push   %eax
81001f64:	ff 75 08             	pushl  0x8(%ebp)
81001f67:	e8 fb 02 00 00       	call   81002267 <_malloc_trim_r>
81001f6c:	83 c4 10             	add    $0x10,%esp
81001f6f:	83 ec 0c             	sub    $0xc,%esp
81001f72:	ff 75 08             	pushl  0x8(%ebp)
81001f75:	e8 a1 2c 00 00       	call   81004c1b <__malloc_unlock>
81001f7a:	83 c4 10             	add    $0x10,%esp
81001f7d:	e9 e0 02 00 00       	jmp    81002262 <_free_r+0x3d6>
81001f82:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001f85:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001f88:	89 50 04             	mov    %edx,0x4(%eax)
81001f8b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001f92:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f95:	83 e0 01             	and    $0x1,%eax
81001f98:	85 c0                	test   %eax,%eax
81001f9a:	75 52                	jne    81001fee <_free_r+0x162>
81001f9c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f9f:	8b 00                	mov    (%eax),%eax
81001fa1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001fa4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001fa7:	f7 d8                	neg    %eax
81001fa9:	01 45 f4             	add    %eax,-0xc(%ebp)
81001fac:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001faf:	01 45 f0             	add    %eax,-0x10(%ebp)
81001fb2:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fb5:	8b 40 08             	mov    0x8(%eax),%eax
81001fb8:	ba e8 90 00 81       	mov    $0x810090e8,%edx
81001fbd:	39 d0                	cmp    %edx,%eax
81001fbf:	75 09                	jne    81001fca <_free_r+0x13e>
81001fc1:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001fc8:	eb 24                	jmp    81001fee <_free_r+0x162>
81001fca:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fcd:	8b 40 0c             	mov    0xc(%eax),%eax
81001fd0:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fd3:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fd6:	8b 40 08             	mov    0x8(%eax),%eax
81001fd9:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001fdc:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001fdf:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001fe2:	89 50 0c             	mov    %edx,0xc(%eax)
81001fe5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fe8:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001feb:	89 50 08             	mov    %edx,0x8(%eax)
81001fee:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001ff1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ff4:	01 d0                	add    %edx,%eax
81001ff6:	8b 40 04             	mov    0x4(%eax),%eax
81001ff9:	83 e0 01             	and    $0x1,%eax
81001ffc:	85 c0                	test   %eax,%eax
81001ffe:	75 75                	jne    81002075 <_free_r+0x1e9>
81002000:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002003:	01 45 f0             	add    %eax,-0x10(%ebp)
81002006:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100200a:	75 45                	jne    81002051 <_free_r+0x1c5>
8100200c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100200f:	8b 40 08             	mov    0x8(%eax),%eax
81002012:	ba e8 90 00 81       	mov    $0x810090e8,%edx
81002017:	39 d0                	cmp    %edx,%eax
81002019:	75 36                	jne    81002051 <_free_r+0x1c5>
8100201b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002022:	b8 e8 90 00 81       	mov    $0x810090e8,%eax
81002027:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100202a:	89 50 0c             	mov    %edx,0xc(%eax)
8100202d:	ba e8 90 00 81       	mov    $0x810090e8,%edx
81002032:	8b 40 0c             	mov    0xc(%eax),%eax
81002035:	89 42 08             	mov    %eax,0x8(%edx)
81002038:	ba e8 90 00 81       	mov    $0x810090e8,%edx
8100203d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002040:	89 50 0c             	mov    %edx,0xc(%eax)
81002043:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002046:	8b 50 0c             	mov    0xc(%eax),%edx
81002049:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100204c:	89 50 08             	mov    %edx,0x8(%eax)
8100204f:	eb 24                	jmp    81002075 <_free_r+0x1e9>
81002051:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002054:	8b 40 0c             	mov    0xc(%eax),%eax
81002057:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100205a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100205d:	8b 40 08             	mov    0x8(%eax),%eax
81002060:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002063:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002066:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002069:	89 50 0c             	mov    %edx,0xc(%eax)
8100206c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100206f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002072:	89 50 08             	mov    %edx,0x8(%eax)
81002075:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002078:	83 c8 01             	or     $0x1,%eax
8100207b:	89 c2                	mov    %eax,%edx
8100207d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002080:	89 50 04             	mov    %edx,0x4(%eax)
81002083:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002086:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002089:	01 c2                	add    %eax,%edx
8100208b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100208e:	89 02                	mov    %eax,(%edx)
81002090:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002094:	0f 85 b7 01 00 00    	jne    81002251 <_free_r+0x3c5>
8100209a:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
810020a1:	77 7f                	ja     81002122 <_free_r+0x296>
810020a3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810020a6:	c1 e8 03             	shr    $0x3,%eax
810020a9:	89 45 d0             	mov    %eax,-0x30(%ebp)
810020ac:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810020b1:	8b 58 04             	mov    0x4(%eax),%ebx
810020b4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020b7:	8d 50 03             	lea    0x3(%eax),%edx
810020ba:	85 c0                	test   %eax,%eax
810020bc:	0f 48 c2             	cmovs  %edx,%eax
810020bf:	c1 f8 02             	sar    $0x2,%eax
810020c2:	ba 01 00 00 00       	mov    $0x1,%edx
810020c7:	89 c1                	mov    %eax,%ecx
810020c9:	d3 e2                	shl    %cl,%edx
810020cb:	89 d0                	mov    %edx,%eax
810020cd:	ba e0 90 00 81       	mov    $0x810090e0,%edx
810020d2:	09 d8                	or     %ebx,%eax
810020d4:	89 42 04             	mov    %eax,0x4(%edx)
810020d7:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020da:	83 c0 01             	add    $0x1,%eax
810020dd:	01 c0                	add    %eax,%eax
810020df:	c1 e0 02             	shl    $0x2,%eax
810020e2:	05 e0 90 00 81       	add    $0x810090e0,%eax
810020e7:	83 e8 08             	sub    $0x8,%eax
810020ea:	89 45 ec             	mov    %eax,-0x14(%ebp)
810020ed:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020f0:	8b 40 08             	mov    0x8(%eax),%eax
810020f3:	89 45 e8             	mov    %eax,-0x18(%ebp)
810020f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020f9:	8b 55 ec             	mov    -0x14(%ebp),%edx
810020fc:	89 50 0c             	mov    %edx,0xc(%eax)
810020ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002102:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002105:	89 50 08             	mov    %edx,0x8(%eax)
81002108:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100210b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100210e:	89 50 08             	mov    %edx,0x8(%eax)
81002111:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002114:	8b 50 08             	mov    0x8(%eax),%edx
81002117:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100211a:	89 50 0c             	mov    %edx,0xc(%eax)
8100211d:	e9 2f 01 00 00       	jmp    81002251 <_free_r+0x3c5>
81002122:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002125:	c1 e8 09             	shr    $0x9,%eax
81002128:	85 c0                	test   %eax,%eax
8100212a:	75 08                	jne    81002134 <_free_r+0x2a8>
8100212c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100212f:	c1 e8 03             	shr    $0x3,%eax
81002132:	eb 77                	jmp    810021ab <_free_r+0x31f>
81002134:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002137:	c1 e8 09             	shr    $0x9,%eax
8100213a:	83 f8 04             	cmp    $0x4,%eax
8100213d:	77 0b                	ja     8100214a <_free_r+0x2be>
8100213f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002142:	c1 e8 06             	shr    $0x6,%eax
81002145:	83 c0 38             	add    $0x38,%eax
81002148:	eb 61                	jmp    810021ab <_free_r+0x31f>
8100214a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100214d:	c1 e8 09             	shr    $0x9,%eax
81002150:	83 f8 14             	cmp    $0x14,%eax
81002153:	77 0b                	ja     81002160 <_free_r+0x2d4>
81002155:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002158:	c1 e8 09             	shr    $0x9,%eax
8100215b:	83 c0 5b             	add    $0x5b,%eax
8100215e:	eb 4b                	jmp    810021ab <_free_r+0x31f>
81002160:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002163:	c1 e8 09             	shr    $0x9,%eax
81002166:	83 f8 54             	cmp    $0x54,%eax
81002169:	77 0b                	ja     81002176 <_free_r+0x2ea>
8100216b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100216e:	c1 e8 0c             	shr    $0xc,%eax
81002171:	83 c0 6e             	add    $0x6e,%eax
81002174:	eb 35                	jmp    810021ab <_free_r+0x31f>
81002176:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002179:	c1 e8 09             	shr    $0x9,%eax
8100217c:	3d 54 01 00 00       	cmp    $0x154,%eax
81002181:	77 0b                	ja     8100218e <_free_r+0x302>
81002183:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002186:	c1 e8 0f             	shr    $0xf,%eax
81002189:	83 c0 77             	add    $0x77,%eax
8100218c:	eb 1d                	jmp    810021ab <_free_r+0x31f>
8100218e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002191:	c1 e8 09             	shr    $0x9,%eax
81002194:	3d 54 05 00 00       	cmp    $0x554,%eax
81002199:	77 0b                	ja     810021a6 <_free_r+0x31a>
8100219b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100219e:	c1 e8 12             	shr    $0x12,%eax
810021a1:	83 c0 7c             	add    $0x7c,%eax
810021a4:	eb 05                	jmp    810021ab <_free_r+0x31f>
810021a6:	b8 7e 00 00 00       	mov    $0x7e,%eax
810021ab:	89 45 d0             	mov    %eax,-0x30(%ebp)
810021ae:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021b1:	83 c0 01             	add    $0x1,%eax
810021b4:	01 c0                	add    %eax,%eax
810021b6:	c1 e0 02             	shl    $0x2,%eax
810021b9:	05 e0 90 00 81       	add    $0x810090e0,%eax
810021be:	83 e8 08             	sub    $0x8,%eax
810021c1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810021c4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810021c7:	8b 40 08             	mov    0x8(%eax),%eax
810021ca:	89 45 e8             	mov    %eax,-0x18(%ebp)
810021cd:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021d0:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810021d3:	75 36                	jne    8100220b <_free_r+0x37f>
810021d5:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810021da:	8b 58 04             	mov    0x4(%eax),%ebx
810021dd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021e0:	8d 50 03             	lea    0x3(%eax),%edx
810021e3:	85 c0                	test   %eax,%eax
810021e5:	0f 48 c2             	cmovs  %edx,%eax
810021e8:	c1 f8 02             	sar    $0x2,%eax
810021eb:	ba 01 00 00 00       	mov    $0x1,%edx
810021f0:	89 c1                	mov    %eax,%ecx
810021f2:	d3 e2                	shl    %cl,%edx
810021f4:	89 d0                	mov    %edx,%eax
810021f6:	ba e0 90 00 81       	mov    $0x810090e0,%edx
810021fb:	09 d8                	or     %ebx,%eax
810021fd:	89 42 04             	mov    %eax,0x4(%edx)
81002200:	eb 28                	jmp    8100222a <_free_r+0x39e>
81002202:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002205:	8b 40 08             	mov    0x8(%eax),%eax
81002208:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100220b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100220e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002211:	74 0e                	je     81002221 <_free_r+0x395>
81002213:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002216:	8b 40 04             	mov    0x4(%eax),%eax
81002219:	83 e0 fc             	and    $0xfffffffc,%eax
8100221c:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100221f:	72 e1                	jb     81002202 <_free_r+0x376>
81002221:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002224:	8b 40 0c             	mov    0xc(%eax),%eax
81002227:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100222a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100222d:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002230:	89 50 0c             	mov    %edx,0xc(%eax)
81002233:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002236:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002239:	89 50 08             	mov    %edx,0x8(%eax)
8100223c:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100223f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002242:	89 50 08             	mov    %edx,0x8(%eax)
81002245:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002248:	8b 50 08             	mov    0x8(%eax),%edx
8100224b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100224e:	89 50 0c             	mov    %edx,0xc(%eax)
81002251:	83 ec 0c             	sub    $0xc,%esp
81002254:	ff 75 08             	pushl  0x8(%ebp)
81002257:	e8 bf 29 00 00       	call   81004c1b <__malloc_unlock>
8100225c:	83 c4 10             	add    $0x10,%esp
8100225f:	eb 01                	jmp    81002262 <_free_r+0x3d6>
81002261:	90                   	nop
81002262:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002265:	c9                   	leave  
81002266:	c3                   	ret    

81002267 <_malloc_trim_r>:
81002267:	55                   	push   %ebp
81002268:	89 e5                	mov    %esp,%ebp
8100226a:	83 ec 28             	sub    $0x28,%esp
8100226d:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81002274:	83 ec 0c             	sub    $0xc,%esp
81002277:	ff 75 08             	pushl  0x8(%ebp)
8100227a:	e8 96 29 00 00       	call   81004c15 <__malloc_lock>
8100227f:	83 c4 10             	add    $0x10,%esp
81002282:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81002287:	8b 40 08             	mov    0x8(%eax),%eax
8100228a:	8b 40 04             	mov    0x4(%eax),%eax
8100228d:	83 e0 fc             	and    $0xfffffffc,%eax
81002290:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002293:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002296:	2b 45 0c             	sub    0xc(%ebp),%eax
81002299:	89 c2                	mov    %eax,%edx
8100229b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100229e:	01 d0                	add    %edx,%eax
810022a0:	83 e8 11             	sub    $0x11,%eax
810022a3:	ba 00 00 00 00       	mov    $0x0,%edx
810022a8:	f7 75 f4             	divl   -0xc(%ebp)
810022ab:	83 e8 01             	sub    $0x1,%eax
810022ae:	0f af 45 f4          	imul   -0xc(%ebp),%eax
810022b2:	89 45 ec             	mov    %eax,-0x14(%ebp)
810022b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022b8:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810022bb:	7d 18                	jge    810022d5 <_malloc_trim_r+0x6e>
810022bd:	83 ec 0c             	sub    $0xc,%esp
810022c0:	ff 75 08             	pushl  0x8(%ebp)
810022c3:	e8 53 29 00 00       	call   81004c1b <__malloc_unlock>
810022c8:	83 c4 10             	add    $0x10,%esp
810022cb:	b8 00 00 00 00       	mov    $0x0,%eax
810022d0:	e9 f1 00 00 00       	jmp    810023c6 <_malloc_trim_r+0x15f>
810022d5:	83 ec 08             	sub    $0x8,%esp
810022d8:	6a 00                	push   $0x0
810022da:	ff 75 08             	pushl  0x8(%ebp)
810022dd:	e8 47 43 00 00       	call   81006629 <_sbrk_r>
810022e2:	83 c4 10             	add    $0x10,%esp
810022e5:	89 45 e8             	mov    %eax,-0x18(%ebp)
810022e8:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810022ed:	8b 50 08             	mov    0x8(%eax),%edx
810022f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810022f3:	01 d0                	add    %edx,%eax
810022f5:	39 45 e8             	cmp    %eax,-0x18(%ebp)
810022f8:	74 18                	je     81002312 <_malloc_trim_r+0xab>
810022fa:	83 ec 0c             	sub    $0xc,%esp
810022fd:	ff 75 08             	pushl  0x8(%ebp)
81002300:	e8 16 29 00 00       	call   81004c1b <__malloc_unlock>
81002305:	83 c4 10             	add    $0x10,%esp
81002308:	b8 00 00 00 00       	mov    $0x0,%eax
8100230d:	e9 b4 00 00 00       	jmp    810023c6 <_malloc_trim_r+0x15f>
81002312:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002315:	f7 d8                	neg    %eax
81002317:	83 ec 08             	sub    $0x8,%esp
8100231a:	50                   	push   %eax
8100231b:	ff 75 08             	pushl  0x8(%ebp)
8100231e:	e8 06 43 00 00       	call   81006629 <_sbrk_r>
81002323:	83 c4 10             	add    $0x10,%esp
81002326:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002329:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100232d:	75 61                	jne    81002390 <_malloc_trim_r+0x129>
8100232f:	83 ec 08             	sub    $0x8,%esp
81002332:	6a 00                	push   $0x0
81002334:	ff 75 08             	pushl  0x8(%ebp)
81002337:	e8 ed 42 00 00       	call   81006629 <_sbrk_r>
8100233c:	83 c4 10             	add    $0x10,%esp
8100233f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002342:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81002347:	8b 50 08             	mov    0x8(%eax),%edx
8100234a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100234d:	29 d0                	sub    %edx,%eax
8100234f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002352:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81002356:	7e 23                	jle    8100237b <_malloc_trim_r+0x114>
81002358:	8b 15 ec 94 00 81    	mov    0x810094ec,%edx
8100235e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002361:	29 d0                	sub    %edx,%eax
81002363:	a3 e0 9b 00 81       	mov    %eax,0x81009be0
81002368:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100236b:	83 c8 01             	or     $0x1,%eax
8100236e:	89 c2                	mov    %eax,%edx
81002370:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81002375:	8b 40 08             	mov    0x8(%eax),%eax
81002378:	89 50 04             	mov    %edx,0x4(%eax)
8100237b:	83 ec 0c             	sub    $0xc,%esp
8100237e:	ff 75 08             	pushl  0x8(%ebp)
81002381:	e8 95 28 00 00       	call   81004c1b <__malloc_unlock>
81002386:	83 c4 10             	add    $0x10,%esp
81002389:	b8 00 00 00 00       	mov    $0x0,%eax
8100238e:	eb 36                	jmp    810023c6 <_malloc_trim_r+0x15f>
81002390:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002393:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002396:	83 c8 01             	or     $0x1,%eax
81002399:	89 c2                	mov    %eax,%edx
8100239b:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810023a0:	8b 40 08             	mov    0x8(%eax),%eax
810023a3:	89 50 04             	mov    %edx,0x4(%eax)
810023a6:	a1 e0 9b 00 81       	mov    0x81009be0,%eax
810023ab:	2b 45 ec             	sub    -0x14(%ebp),%eax
810023ae:	a3 e0 9b 00 81       	mov    %eax,0x81009be0
810023b3:	83 ec 0c             	sub    $0xc,%esp
810023b6:	ff 75 08             	pushl  0x8(%ebp)
810023b9:	e8 5d 28 00 00       	call   81004c1b <__malloc_unlock>
810023be:	83 c4 10             	add    $0x10,%esp
810023c1:	b8 01 00 00 00       	mov    $0x1,%eax
810023c6:	c9                   	leave  
810023c7:	c3                   	ret    

810023c8 <_fseek_r>:
810023c8:	55                   	push   %ebp
810023c9:	89 e5                	mov    %esp,%ebp
810023cb:	83 ec 08             	sub    $0x8,%esp
810023ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810023d1:	ff 75 14             	pushl  0x14(%ebp)
810023d4:	ff 75 10             	pushl  0x10(%ebp)
810023d7:	50                   	push   %eax
810023d8:	ff 75 08             	pushl  0x8(%ebp)
810023db:	e8 25 00 00 00       	call   81002405 <_fseeko_r>
810023e0:	83 c4 10             	add    $0x10,%esp
810023e3:	c9                   	leave  
810023e4:	c3                   	ret    

810023e5 <fseek>:
810023e5:	55                   	push   %ebp
810023e6:	89 e5                	mov    %esp,%ebp
810023e8:	83 ec 08             	sub    $0x8,%esp
810023eb:	8b 55 08             	mov    0x8(%ebp),%edx
810023ee:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810023f3:	ff 75 10             	pushl  0x10(%ebp)
810023f6:	ff 75 0c             	pushl  0xc(%ebp)
810023f9:	52                   	push   %edx
810023fa:	50                   	push   %eax
810023fb:	e8 c8 ff ff ff       	call   810023c8 <_fseek_r>
81002400:	83 c4 10             	add    $0x10,%esp
81002403:	c9                   	leave  
81002404:	c3                   	ret    

81002405 <_fseeko_r>:
81002405:	55                   	push   %ebp
81002406:	89 e5                	mov    %esp,%ebp
81002408:	56                   	push   %esi
81002409:	53                   	push   %ebx
8100240a:	83 ec 60             	sub    $0x60,%esp
8100240d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002410:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002417:	8b 45 08             	mov    0x8(%ebp),%eax
8100241a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100241d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002421:	74 18                	je     8100243b <_fseeko_r+0x36>
81002423:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002426:	8b 40 38             	mov    0x38(%eax),%eax
81002429:	85 c0                	test   %eax,%eax
8100242b:	75 0e                	jne    8100243b <_fseeko_r+0x36>
8100242d:	83 ec 0c             	sub    $0xc,%esp
81002430:	ff 75 e4             	pushl  -0x1c(%ebp)
81002433:	e8 9f f4 ff ff       	call   810018d7 <__sinit>
81002438:	83 c4 10             	add    $0x10,%esp
8100243b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100243f:	98                   	cwtl   
81002440:	25 00 01 00 00       	and    $0x100,%eax
81002445:	85 c0                	test   %eax,%eax
81002447:	74 1b                	je     81002464 <_fseeko_r+0x5f>
81002449:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100244d:	98                   	cwtl   
8100244e:	83 e0 08             	and    $0x8,%eax
81002451:	85 c0                	test   %eax,%eax
81002453:	74 0f                	je     81002464 <_fseeko_r+0x5f>
81002455:	83 ec 08             	sub    $0x8,%esp
81002458:	53                   	push   %ebx
81002459:	ff 75 08             	pushl  0x8(%ebp)
8100245c:	e8 89 ee ff ff       	call   810012ea <_fflush_r>
81002461:	83 c4 10             	add    $0x10,%esp
81002464:	8b 43 28             	mov    0x28(%ebx),%eax
81002467:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100246a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100246e:	75 13                	jne    81002483 <_fseeko_r+0x7e>
81002470:	8b 45 08             	mov    0x8(%ebp),%eax
81002473:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81002479:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100247e:	e9 2c 04 00 00       	jmp    810028af <_fseeko_r+0x4aa>
81002483:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81002487:	0f 84 bc 00 00 00    	je     81002549 <_fseeko_r+0x144>
8100248d:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81002491:	0f 8f bb 00 00 00    	jg     81002552 <_fseeko_r+0x14d>
81002497:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100249b:	0f 84 a8 00 00 00    	je     81002549 <_fseeko_r+0x144>
810024a1:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
810024a5:	0f 85 a7 00 00 00    	jne    81002552 <_fseeko_r+0x14d>
810024ab:	83 ec 08             	sub    $0x8,%esp
810024ae:	53                   	push   %ebx
810024af:	ff 75 08             	pushl  0x8(%ebp)
810024b2:	e8 33 ee ff ff       	call   810012ea <_fflush_r>
810024b7:	83 c4 10             	add    $0x10,%esp
810024ba:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024be:	98                   	cwtl   
810024bf:	25 00 10 00 00       	and    $0x1000,%eax
810024c4:	85 c0                	test   %eax,%eax
810024c6:	74 08                	je     810024d0 <_fseeko_r+0xcb>
810024c8:	8b 43 50             	mov    0x50(%ebx),%eax
810024cb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024ce:	eb 26                	jmp    810024f6 <_fseeko_r+0xf1>
810024d0:	8b 43 1c             	mov    0x1c(%ebx),%eax
810024d3:	6a 01                	push   $0x1
810024d5:	6a 00                	push   $0x0
810024d7:	50                   	push   %eax
810024d8:	ff 75 08             	pushl  0x8(%ebp)
810024db:	8b 45 e0             	mov    -0x20(%ebp),%eax
810024de:	ff d0                	call   *%eax
810024e0:	83 c4 10             	add    $0x10,%esp
810024e3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024e6:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810024ea:	75 0a                	jne    810024f6 <_fseeko_r+0xf1>
810024ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810024f1:	e9 b9 03 00 00       	jmp    810028af <_fseeko_r+0x4aa>
810024f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024fa:	98                   	cwtl   
810024fb:	83 e0 04             	and    $0x4,%eax
810024fe:	85 c0                	test   %eax,%eax
81002500:	74 15                	je     81002517 <_fseeko_r+0x112>
81002502:	8b 43 04             	mov    0x4(%ebx),%eax
81002505:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002508:	8b 43 30             	mov    0x30(%ebx),%eax
8100250b:	85 c0                	test   %eax,%eax
8100250d:	74 24                	je     81002533 <_fseeko_r+0x12e>
8100250f:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002512:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002515:	eb 1c                	jmp    81002533 <_fseeko_r+0x12e>
81002517:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100251b:	98                   	cwtl   
8100251c:	83 e0 08             	and    $0x8,%eax
8100251f:	85 c0                	test   %eax,%eax
81002521:	74 10                	je     81002533 <_fseeko_r+0x12e>
81002523:	8b 03                	mov    (%ebx),%eax
81002525:	85 c0                	test   %eax,%eax
81002527:	74 0a                	je     81002533 <_fseeko_r+0x12e>
81002529:	8b 03                	mov    (%ebx),%eax
8100252b:	8b 53 10             	mov    0x10(%ebx),%edx
8100252e:	29 d0                	sub    %edx,%eax
81002530:	01 45 f0             	add    %eax,-0x10(%ebp)
81002533:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002536:	01 45 10             	add    %eax,0x10(%ebp)
81002539:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
81002540:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002547:	eb 1c                	jmp    81002565 <_fseeko_r+0x160>
81002549:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81002550:	eb 13                	jmp    81002565 <_fseeko_r+0x160>
81002552:	8b 45 08             	mov    0x8(%ebp),%eax
81002555:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
8100255b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002560:	e9 4a 03 00 00       	jmp    810028af <_fseeko_r+0x4aa>
81002565:	8b 43 10             	mov    0x10(%ebx),%eax
81002568:	85 c0                	test   %eax,%eax
8100256a:	75 0f                	jne    8100257b <_fseeko_r+0x176>
8100256c:	83 ec 08             	sub    $0x8,%esp
8100256f:	53                   	push   %ebx
81002570:	ff 75 08             	pushl  0x8(%ebp)
81002573:	e8 dd 17 00 00       	call   81003d55 <__smakebuf_r>
81002578:	83 c4 10             	add    $0x10,%esp
8100257b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100257f:	98                   	cwtl   
81002580:	25 1a 08 00 00       	and    $0x81a,%eax
81002585:	85 c0                	test   %eax,%eax
81002587:	0f 85 7d 02 00 00    	jne    8100280a <_fseeko_r+0x405>
8100258d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002591:	98                   	cwtl   
81002592:	25 00 04 00 00       	and    $0x400,%eax
81002597:	85 c0                	test   %eax,%eax
81002599:	75 5f                	jne    810025fa <_fseeko_r+0x1f5>
8100259b:	81 7d e0 cb 69 00 81 	cmpl   $0x810069cb,-0x20(%ebp)
810025a2:	75 34                	jne    810025d8 <_fseeko_r+0x1d3>
810025a4:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810025a8:	66 85 c0             	test   %ax,%ax
810025ab:	78 2b                	js     810025d8 <_fseeko_r+0x1d3>
810025ad:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810025b1:	98                   	cwtl   
810025b2:	83 ec 04             	sub    $0x4,%esp
810025b5:	8d 55 98             	lea    -0x68(%ebp),%edx
810025b8:	52                   	push   %edx
810025b9:	50                   	push   %eax
810025ba:	ff 75 08             	pushl  0x8(%ebp)
810025bd:	e8 14 03 00 00       	call   810028d6 <_fstat_r>
810025c2:	83 c4 10             	add    $0x10,%esp
810025c5:	85 c0                	test   %eax,%eax
810025c7:	75 0f                	jne    810025d8 <_fseeko_r+0x1d3>
810025c9:	8b 45 9c             	mov    -0x64(%ebp),%eax
810025cc:	25 00 f0 00 00       	and    $0xf000,%eax
810025d1:	3d 00 80 00 00       	cmp    $0x8000,%eax
810025d6:	74 10                	je     810025e8 <_fseeko_r+0x1e3>
810025d8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025dc:	80 cc 08             	or     $0x8,%ah
810025df:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025e3:	e9 2f 02 00 00       	jmp    81002817 <_fseeko_r+0x412>
810025e8:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
810025ef:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025f3:	80 cc 04             	or     $0x4,%ah
810025f6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025fa:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810025fe:	75 08                	jne    81002608 <_fseeko_r+0x203>
81002600:	8b 45 10             	mov    0x10(%ebp),%eax
81002603:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002606:	eb 2b                	jmp    81002633 <_fseeko_r+0x22e>
81002608:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100260c:	98                   	cwtl   
8100260d:	83 ec 04             	sub    $0x4,%esp
81002610:	8d 55 98             	lea    -0x68(%ebp),%edx
81002613:	52                   	push   %edx
81002614:	50                   	push   %eax
81002615:	ff 75 08             	pushl  0x8(%ebp)
81002618:	e8 b9 02 00 00       	call   810028d6 <_fstat_r>
8100261d:	83 c4 10             	add    $0x10,%esp
81002620:	85 c0                	test   %eax,%eax
81002622:	0f 85 e5 01 00 00    	jne    8100280d <_fseeko_r+0x408>
81002628:	8b 55 a8             	mov    -0x58(%ebp),%edx
8100262b:	8b 45 10             	mov    0x10(%ebp),%eax
8100262e:	01 d0                	add    %edx,%eax
81002630:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002633:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002637:	75 49                	jne    81002682 <_fseeko_r+0x27d>
81002639:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100263d:	98                   	cwtl   
8100263e:	25 00 10 00 00       	and    $0x1000,%eax
81002643:	85 c0                	test   %eax,%eax
81002645:	74 08                	je     8100264f <_fseeko_r+0x24a>
81002647:	8b 43 50             	mov    0x50(%ebx),%eax
8100264a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100264d:	eb 20                	jmp    8100266f <_fseeko_r+0x26a>
8100264f:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002652:	6a 01                	push   $0x1
81002654:	6a 00                	push   $0x0
81002656:	50                   	push   %eax
81002657:	ff 75 08             	pushl  0x8(%ebp)
8100265a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100265d:	ff d0                	call   *%eax
8100265f:	83 c4 10             	add    $0x10,%esp
81002662:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002665:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002669:	0f 84 a1 01 00 00    	je     81002810 <_fseeko_r+0x40b>
8100266f:	8b 43 04             	mov    0x4(%ebx),%eax
81002672:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002675:	8b 43 30             	mov    0x30(%ebx),%eax
81002678:	85 c0                	test   %eax,%eax
8100267a:	74 06                	je     81002682 <_fseeko_r+0x27d>
8100267c:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100267f:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002682:	8b 43 30             	mov    0x30(%ebx),%eax
81002685:	85 c0                	test   %eax,%eax
81002687:	74 22                	je     810026ab <_fseeko_r+0x2a6>
81002689:	8b 43 04             	mov    0x4(%ebx),%eax
8100268c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100268f:	8b 43 38             	mov    0x38(%ebx),%eax
81002692:	8b 53 10             	mov    0x10(%ebx),%edx
81002695:	29 d0                	sub    %edx,%eax
81002697:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100269a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100269d:	2b 45 ec             	sub    -0x14(%ebp),%eax
810026a0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810026a3:	8b 43 3c             	mov    0x3c(%ebx),%eax
810026a6:	01 45 ec             	add    %eax,-0x14(%ebp)
810026a9:	eb 19                	jmp    810026c4 <_fseeko_r+0x2bf>
810026ab:	8b 03                	mov    (%ebx),%eax
810026ad:	8b 53 10             	mov    0x10(%ebx),%edx
810026b0:	29 d0                	sub    %edx,%eax
810026b2:	89 45 ec             	mov    %eax,-0x14(%ebp)
810026b5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810026b8:	2b 45 ec             	sub    -0x14(%ebp),%eax
810026bb:	89 45 f0             	mov    %eax,-0x10(%ebp)
810026be:	8b 43 04             	mov    0x4(%ebx),%eax
810026c1:	01 45 ec             	add    %eax,-0x14(%ebp)
810026c4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026c7:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810026ca:	7c 7c                	jl     81002748 <_fseeko_r+0x343>
810026cc:	8b 55 f0             	mov    -0x10(%ebp),%edx
810026cf:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026d2:	01 c2                	add    %eax,%edx
810026d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026d7:	39 c2                	cmp    %eax,%edx
810026d9:	76 6d                	jbe    81002748 <_fseeko_r+0x343>
810026db:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026de:	2b 45 f0             	sub    -0x10(%ebp),%eax
810026e1:	89 c6                	mov    %eax,%esi
810026e3:	8b 43 10             	mov    0x10(%ebx),%eax
810026e6:	89 f2                	mov    %esi,%edx
810026e8:	01 d0                	add    %edx,%eax
810026ea:	89 03                	mov    %eax,(%ebx)
810026ec:	89 f2                	mov    %esi,%edx
810026ee:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026f1:	29 d0                	sub    %edx,%eax
810026f3:	89 43 04             	mov    %eax,0x4(%ebx)
810026f6:	8b 43 30             	mov    0x30(%ebx),%eax
810026f9:	85 c0                	test   %eax,%eax
810026fb:	74 23                	je     81002720 <_fseeko_r+0x31b>
810026fd:	8b 53 30             	mov    0x30(%ebx),%edx
81002700:	8d 43 40             	lea    0x40(%ebx),%eax
81002703:	39 c2                	cmp    %eax,%edx
81002705:	74 12                	je     81002719 <_fseeko_r+0x314>
81002707:	8b 43 30             	mov    0x30(%ebx),%eax
8100270a:	83 ec 08             	sub    $0x8,%esp
8100270d:	50                   	push   %eax
8100270e:	ff 75 08             	pushl  0x8(%ebp)
81002711:	e8 76 f7 ff ff       	call   81001e8c <_free_r>
81002716:	83 c4 10             	add    $0x10,%esp
81002719:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002720:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002724:	83 e0 df             	and    $0xffffffdf,%eax
81002727:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100272b:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100272e:	83 ec 04             	sub    $0x4,%esp
81002731:	6a 08                	push   $0x8
81002733:	6a 00                	push   $0x0
81002735:	50                   	push   %eax
81002736:	e8 52 24 00 00       	call   81004b8d <memset>
8100273b:	83 c4 10             	add    $0x10,%esp
8100273e:	b8 00 00 00 00       	mov    $0x0,%eax
81002743:	e9 67 01 00 00       	jmp    810028af <_fseeko_r+0x4aa>
81002748:	8b 43 4c             	mov    0x4c(%ebx),%eax
8100274b:	f7 d8                	neg    %eax
8100274d:	23 45 f4             	and    -0xc(%ebp),%eax
81002750:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002753:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002756:	6a 00                	push   $0x0
81002758:	ff 75 f0             	pushl  -0x10(%ebp)
8100275b:	50                   	push   %eax
8100275c:	ff 75 08             	pushl  0x8(%ebp)
8100275f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002762:	ff d0                	call   *%eax
81002764:	83 c4 10             	add    $0x10,%esp
81002767:	83 f8 ff             	cmp    $0xffffffff,%eax
8100276a:	0f 84 a3 00 00 00    	je     81002813 <_fseeko_r+0x40e>
81002770:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002777:	8b 43 10             	mov    0x10(%ebx),%eax
8100277a:	89 03                	mov    %eax,(%ebx)
8100277c:	8b 43 30             	mov    0x30(%ebx),%eax
8100277f:	85 c0                	test   %eax,%eax
81002781:	74 23                	je     810027a6 <_fseeko_r+0x3a1>
81002783:	8b 53 30             	mov    0x30(%ebx),%edx
81002786:	8d 43 40             	lea    0x40(%ebx),%eax
81002789:	39 c2                	cmp    %eax,%edx
8100278b:	74 12                	je     8100279f <_fseeko_r+0x39a>
8100278d:	8b 43 30             	mov    0x30(%ebx),%eax
81002790:	83 ec 08             	sub    $0x8,%esp
81002793:	50                   	push   %eax
81002794:	ff 75 08             	pushl  0x8(%ebp)
81002797:	e8 f0 f6 ff ff       	call   81001e8c <_free_r>
8100279c:	83 c4 10             	add    $0x10,%esp
8100279f:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810027a6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810027aa:	83 e0 df             	and    $0xffffffdf,%eax
810027ad:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810027b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027b4:	2b 45 f0             	sub    -0x10(%ebp),%eax
810027b7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027ba:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810027be:	74 2d                	je     810027ed <_fseeko_r+0x3e8>
810027c0:	83 ec 08             	sub    $0x8,%esp
810027c3:	53                   	push   %ebx
810027c4:	ff 75 08             	pushl  0x8(%ebp)
810027c7:	e8 dc 3b 00 00       	call   810063a8 <__srefill_r>
810027cc:	83 c4 10             	add    $0x10,%esp
810027cf:	85 c0                	test   %eax,%eax
810027d1:	75 43                	jne    81002816 <_fseeko_r+0x411>
810027d3:	8b 43 04             	mov    0x4(%ebx),%eax
810027d6:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810027d9:	77 3b                	ja     81002816 <_fseeko_r+0x411>
810027db:	8b 13                	mov    (%ebx),%edx
810027dd:	8b 45 ec             	mov    -0x14(%ebp),%eax
810027e0:	01 d0                	add    %edx,%eax
810027e2:	89 03                	mov    %eax,(%ebx)
810027e4:	8b 43 04             	mov    0x4(%ebx),%eax
810027e7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810027ea:	89 43 04             	mov    %eax,0x4(%ebx)
810027ed:	8d 43 5c             	lea    0x5c(%ebx),%eax
810027f0:	83 ec 04             	sub    $0x4,%esp
810027f3:	6a 08                	push   $0x8
810027f5:	6a 00                	push   $0x0
810027f7:	50                   	push   %eax
810027f8:	e8 90 23 00 00       	call   81004b8d <memset>
810027fd:	83 c4 10             	add    $0x10,%esp
81002800:	b8 00 00 00 00       	mov    $0x0,%eax
81002805:	e9 a5 00 00 00       	jmp    810028af <_fseeko_r+0x4aa>
8100280a:	90                   	nop
8100280b:	eb 0a                	jmp    81002817 <_fseeko_r+0x412>
8100280d:	90                   	nop
8100280e:	eb 07                	jmp    81002817 <_fseeko_r+0x412>
81002810:	90                   	nop
81002811:	eb 04                	jmp    81002817 <_fseeko_r+0x412>
81002813:	90                   	nop
81002814:	eb 01                	jmp    81002817 <_fseeko_r+0x412>
81002816:	90                   	nop
81002817:	83 ec 08             	sub    $0x8,%esp
8100281a:	53                   	push   %ebx
8100281b:	ff 75 08             	pushl  0x8(%ebp)
8100281e:	e8 c7 ea ff ff       	call   810012ea <_fflush_r>
81002823:	83 c4 10             	add    $0x10,%esp
81002826:	85 c0                	test   %eax,%eax
81002828:	75 1a                	jne    81002844 <_fseeko_r+0x43f>
8100282a:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100282d:	ff 75 14             	pushl  0x14(%ebp)
81002830:	ff 75 10             	pushl  0x10(%ebp)
81002833:	50                   	push   %eax
81002834:	ff 75 08             	pushl  0x8(%ebp)
81002837:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100283a:	ff d0                	call   *%eax
8100283c:	83 c4 10             	add    $0x10,%esp
8100283f:	83 f8 ff             	cmp    $0xffffffff,%eax
81002842:	75 07                	jne    8100284b <_fseeko_r+0x446>
81002844:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002849:	eb 64                	jmp    810028af <_fseeko_r+0x4aa>
8100284b:	8b 43 30             	mov    0x30(%ebx),%eax
8100284e:	85 c0                	test   %eax,%eax
81002850:	74 23                	je     81002875 <_fseeko_r+0x470>
81002852:	8b 53 30             	mov    0x30(%ebx),%edx
81002855:	8d 43 40             	lea    0x40(%ebx),%eax
81002858:	39 c2                	cmp    %eax,%edx
8100285a:	74 12                	je     8100286e <_fseeko_r+0x469>
8100285c:	8b 43 30             	mov    0x30(%ebx),%eax
8100285f:	83 ec 08             	sub    $0x8,%esp
81002862:	50                   	push   %eax
81002863:	ff 75 08             	pushl  0x8(%ebp)
81002866:	e8 21 f6 ff ff       	call   81001e8c <_free_r>
8100286b:	83 c4 10             	add    $0x10,%esp
8100286e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002875:	8b 43 10             	mov    0x10(%ebx),%eax
81002878:	89 03                	mov    %eax,(%ebx)
8100287a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002881:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002885:	83 e0 df             	and    $0xffffffdf,%eax
81002888:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100288c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002890:	80 e4 f7             	and    $0xf7,%ah
81002893:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002897:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100289a:	83 ec 04             	sub    $0x4,%esp
8100289d:	6a 08                	push   $0x8
8100289f:	6a 00                	push   $0x0
810028a1:	50                   	push   %eax
810028a2:	e8 e6 22 00 00       	call   81004b8d <memset>
810028a7:	83 c4 10             	add    $0x10,%esp
810028aa:	b8 00 00 00 00       	mov    $0x0,%eax
810028af:	8d 65 f8             	lea    -0x8(%ebp),%esp
810028b2:	5b                   	pop    %ebx
810028b3:	5e                   	pop    %esi
810028b4:	5d                   	pop    %ebp
810028b5:	c3                   	ret    

810028b6 <fseeko>:
810028b6:	55                   	push   %ebp
810028b7:	89 e5                	mov    %esp,%ebp
810028b9:	83 ec 08             	sub    $0x8,%esp
810028bc:	8b 55 08             	mov    0x8(%ebp),%edx
810028bf:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810028c4:	ff 75 10             	pushl  0x10(%ebp)
810028c7:	ff 75 0c             	pushl  0xc(%ebp)
810028ca:	52                   	push   %edx
810028cb:	50                   	push   %eax
810028cc:	e8 34 fb ff ff       	call   81002405 <_fseeko_r>
810028d1:	83 c4 10             	add    $0x10,%esp
810028d4:	c9                   	leave  
810028d5:	c3                   	ret    

810028d6 <_fstat_r>:
810028d6:	55                   	push   %ebp
810028d7:	89 e5                	mov    %esp,%ebp
810028d9:	83 ec 18             	sub    $0x18,%esp
810028dc:	c7 05 0c 9c 00 81 00 	movl   $0x0,0x81009c0c
810028e3:	00 00 00 
810028e6:	83 ec 08             	sub    $0x8,%esp
810028e9:	ff 75 10             	pushl  0x10(%ebp)
810028ec:	ff 75 0c             	pushl  0xc(%ebp)
810028ef:	e8 77 e4 ff ff       	call   81000d6b <fstat>
810028f4:	83 c4 10             	add    $0x10,%esp
810028f7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028fa:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810028fe:	75 14                	jne    81002914 <_fstat_r+0x3e>
81002900:	a1 0c 9c 00 81       	mov    0x81009c0c,%eax
81002905:	85 c0                	test   %eax,%eax
81002907:	74 0b                	je     81002914 <_fstat_r+0x3e>
81002909:	8b 15 0c 9c 00 81    	mov    0x81009c0c,%edx
8100290f:	8b 45 08             	mov    0x8(%ebp),%eax
81002912:	89 10                	mov    %edx,(%eax)
81002914:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002917:	c9                   	leave  
81002918:	c3                   	ret    

81002919 <__sfvwrite_r>:
81002919:	55                   	push   %ebp
8100291a:	89 e5                	mov    %esp,%ebp
8100291c:	57                   	push   %edi
8100291d:	56                   	push   %esi
8100291e:	53                   	push   %ebx
8100291f:	83 ec 3c             	sub    $0x3c,%esp
81002922:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002925:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
8100292c:	8b 45 10             	mov    0x10(%ebp),%eax
8100292f:	8b 78 08             	mov    0x8(%eax),%edi
81002932:	85 ff                	test   %edi,%edi
81002934:	75 0a                	jne    81002940 <__sfvwrite_r+0x27>
81002936:	b8 00 00 00 00       	mov    $0x0,%eax
8100293b:	e9 6f 04 00 00       	jmp    81002daf <__sfvwrite_r+0x496>
81002940:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002944:	98                   	cwtl   
81002945:	83 e0 08             	and    $0x8,%eax
81002948:	85 c0                	test   %eax,%eax
8100294a:	74 07                	je     81002953 <__sfvwrite_r+0x3a>
8100294c:	8b 43 10             	mov    0x10(%ebx),%eax
8100294f:	85 c0                	test   %eax,%eax
81002951:	75 1d                	jne    81002970 <__sfvwrite_r+0x57>
81002953:	83 ec 08             	sub    $0x8,%esp
81002956:	53                   	push   %ebx
81002957:	ff 75 08             	pushl  0x8(%ebp)
8100295a:	e8 41 48 00 00       	call   810071a0 <__swsetup_r>
8100295f:	83 c4 10             	add    $0x10,%esp
81002962:	85 c0                	test   %eax,%eax
81002964:	74 0a                	je     81002970 <__sfvwrite_r+0x57>
81002966:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100296b:	e9 3f 04 00 00       	jmp    81002daf <__sfvwrite_r+0x496>
81002970:	8b 45 10             	mov    0x10(%ebp),%eax
81002973:	8b 00                	mov    (%eax),%eax
81002975:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002978:	bf 00 00 00 00       	mov    $0x0,%edi
8100297d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002981:	98                   	cwtl   
81002982:	83 e0 02             	and    $0x2,%eax
81002985:	85 c0                	test   %eax,%eax
81002987:	74 68                	je     810029f1 <__sfvwrite_r+0xd8>
81002989:	eb 11                	jmp    8100299c <__sfvwrite_r+0x83>
8100298b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100298e:	8b 08                	mov    (%eax),%ecx
81002990:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002993:	8b 78 04             	mov    0x4(%eax),%edi
81002996:	83 c0 08             	add    $0x8,%eax
81002999:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100299c:	85 ff                	test   %edi,%edi
8100299e:	74 eb                	je     8100298b <__sfvwrite_r+0x72>
810029a0:	8b 4b 24             	mov    0x24(%ebx),%ecx
810029a3:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
810029a8:	39 c7                	cmp    %eax,%edi
810029aa:	0f 46 c7             	cmovbe %edi,%eax
810029ad:	89 c2                	mov    %eax,%edx
810029af:	8b 43 1c             	mov    0x1c(%ebx),%eax
810029b2:	52                   	push   %edx
810029b3:	ff 75 c4             	pushl  -0x3c(%ebp)
810029b6:	50                   	push   %eax
810029b7:	ff 75 08             	pushl  0x8(%ebp)
810029ba:	ff d1                	call   *%ecx
810029bc:	83 c4 10             	add    $0x10,%esp
810029bf:	89 c6                	mov    %eax,%esi
810029c1:	85 f6                	test   %esi,%esi
810029c3:	0f 8e cf 03 00 00    	jle    81002d98 <__sfvwrite_r+0x47f>
810029c9:	89 f0                	mov    %esi,%eax
810029cb:	01 45 c4             	add    %eax,-0x3c(%ebp)
810029ce:	89 f0                	mov    %esi,%eax
810029d0:	29 c7                	sub    %eax,%edi
810029d2:	8b 45 10             	mov    0x10(%ebp),%eax
810029d5:	8b 40 08             	mov    0x8(%eax),%eax
810029d8:	89 f2                	mov    %esi,%edx
810029da:	29 d0                	sub    %edx,%eax
810029dc:	8b 4d 10             	mov    0x10(%ebp),%ecx
810029df:	89 41 08             	mov    %eax,0x8(%ecx)
810029e2:	8b 45 10             	mov    0x10(%ebp),%eax
810029e5:	8b 40 08             	mov    0x8(%eax),%eax
810029e8:	85 c0                	test   %eax,%eax
810029ea:	75 b0                	jne    8100299c <__sfvwrite_r+0x83>
810029ec:	e9 a0 03 00 00       	jmp    81002d91 <__sfvwrite_r+0x478>
810029f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029f5:	98                   	cwtl   
810029f6:	83 e0 01             	and    $0x1,%eax
810029f9:	85 c0                	test   %eax,%eax
810029fb:	0f 85 44 02 00 00    	jne    81002c45 <__sfvwrite_r+0x32c>
81002a01:	eb 11                	jmp    81002a14 <__sfvwrite_r+0xfb>
81002a03:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002a06:	8b 08                	mov    (%eax),%ecx
81002a08:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002a0b:	8b 78 04             	mov    0x4(%eax),%edi
81002a0e:	83 c0 08             	add    $0x8,%eax
81002a11:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002a14:	85 ff                	test   %edi,%edi
81002a16:	74 eb                	je     81002a03 <__sfvwrite_r+0xea>
81002a18:	8b 73 08             	mov    0x8(%ebx),%esi
81002a1b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a1f:	98                   	cwtl   
81002a20:	25 00 02 00 00       	and    $0x200,%eax
81002a25:	85 c0                	test   %eax,%eax
81002a27:	0f 84 4f 01 00 00    	je     81002b7c <__sfvwrite_r+0x263>
81002a2d:	89 f0                	mov    %esi,%eax
81002a2f:	39 c7                	cmp    %eax,%edi
81002a31:	0f 82 12 01 00 00    	jb     81002b49 <__sfvwrite_r+0x230>
81002a37:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a3b:	98                   	cwtl   
81002a3c:	25 80 04 00 00       	and    $0x480,%eax
81002a41:	85 c0                	test   %eax,%eax
81002a43:	0f 84 00 01 00 00    	je     81002b49 <__sfvwrite_r+0x230>
81002a49:	8b 03                	mov    (%ebx),%eax
81002a4b:	8b 53 10             	mov    0x10(%ebx),%edx
81002a4e:	29 d0                	sub    %edx,%eax
81002a50:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002a53:	8b 53 14             	mov    0x14(%ebx),%edx
81002a56:	89 d0                	mov    %edx,%eax
81002a58:	01 c0                	add    %eax,%eax
81002a5a:	01 d0                	add    %edx,%eax
81002a5c:	89 c2                	mov    %eax,%edx
81002a5e:	c1 ea 1f             	shr    $0x1f,%edx
81002a61:	01 d0                	add    %edx,%eax
81002a63:	d1 f8                	sar    %eax
81002a65:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a68:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a6b:	01 f8                	add    %edi,%eax
81002a6d:	8d 50 01             	lea    0x1(%eax),%edx
81002a70:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a73:	39 c2                	cmp    %eax,%edx
81002a75:	76 0b                	jbe    81002a82 <__sfvwrite_r+0x169>
81002a77:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a7a:	01 f8                	add    %edi,%eax
81002a7c:	83 c0 01             	add    $0x1,%eax
81002a7f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a82:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a86:	98                   	cwtl   
81002a87:	25 00 04 00 00       	and    $0x400,%eax
81002a8c:	85 c0                	test   %eax,%eax
81002a8e:	74 4f                	je     81002adf <__sfvwrite_r+0x1c6>
81002a90:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a93:	83 ec 08             	sub    $0x8,%esp
81002a96:	50                   	push   %eax
81002a97:	ff 75 08             	pushl  0x8(%ebp)
81002a9a:	e8 02 17 00 00       	call   810041a1 <_malloc_r>
81002a9f:	83 c4 10             	add    $0x10,%esp
81002aa2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002aa5:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002aa9:	75 0e                	jne    81002ab9 <__sfvwrite_r+0x1a0>
81002aab:	8b 45 08             	mov    0x8(%ebp),%eax
81002aae:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002ab4:	e9 e6 02 00 00       	jmp    81002d9f <__sfvwrite_r+0x486>
81002ab9:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002abc:	8b 43 10             	mov    0x10(%ebx),%eax
81002abf:	83 ec 04             	sub    $0x4,%esp
81002ac2:	52                   	push   %edx
81002ac3:	50                   	push   %eax
81002ac4:	ff 75 dc             	pushl  -0x24(%ebp)
81002ac7:	e8 ec 1f 00 00       	call   81004ab8 <memcpy>
81002acc:	83 c4 10             	add    $0x10,%esp
81002acf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ad3:	66 25 7f fb          	and    $0xfb7f,%ax
81002ad7:	0c 80                	or     $0x80,%al
81002ad9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002add:	eb 49                	jmp    81002b28 <__sfvwrite_r+0x20f>
81002adf:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002ae2:	8b 43 10             	mov    0x10(%ebx),%eax
81002ae5:	83 ec 04             	sub    $0x4,%esp
81002ae8:	52                   	push   %edx
81002ae9:	50                   	push   %eax
81002aea:	ff 75 08             	pushl  0x8(%ebp)
81002aed:	e8 18 2e 00 00       	call   8100590a <_realloc_r>
81002af2:	83 c4 10             	add    $0x10,%esp
81002af5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002af8:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002afc:	75 2a                	jne    81002b28 <__sfvwrite_r+0x20f>
81002afe:	8b 43 10             	mov    0x10(%ebx),%eax
81002b01:	83 ec 08             	sub    $0x8,%esp
81002b04:	50                   	push   %eax
81002b05:	ff 75 08             	pushl  0x8(%ebp)
81002b08:	e8 7f f3 ff ff       	call   81001e8c <_free_r>
81002b0d:	83 c4 10             	add    $0x10,%esp
81002b10:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b14:	24 7f                	and    $0x7f,%al
81002b16:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002b1a:	8b 45 08             	mov    0x8(%ebp),%eax
81002b1d:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002b23:	e9 77 02 00 00       	jmp    81002d9f <__sfvwrite_r+0x486>
81002b28:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b2b:	89 43 10             	mov    %eax,0x10(%ebx)
81002b2e:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002b31:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b34:	01 d0                	add    %edx,%eax
81002b36:	89 03                	mov    %eax,(%ebx)
81002b38:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b3b:	89 43 14             	mov    %eax,0x14(%ebx)
81002b3e:	89 fe                	mov    %edi,%esi
81002b40:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b43:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002b46:	89 43 08             	mov    %eax,0x8(%ebx)
81002b49:	89 f0                	mov    %esi,%eax
81002b4b:	39 c7                	cmp    %eax,%edi
81002b4d:	73 02                	jae    81002b51 <__sfvwrite_r+0x238>
81002b4f:	89 fe                	mov    %edi,%esi
81002b51:	89 f2                	mov    %esi,%edx
81002b53:	8b 03                	mov    (%ebx),%eax
81002b55:	83 ec 04             	sub    $0x4,%esp
81002b58:	52                   	push   %edx
81002b59:	ff 75 c4             	pushl  -0x3c(%ebp)
81002b5c:	50                   	push   %eax
81002b5d:	e8 9e 1f 00 00       	call   81004b00 <memmove>
81002b62:	83 c4 10             	add    $0x10,%esp
81002b65:	8b 43 08             	mov    0x8(%ebx),%eax
81002b68:	29 f0                	sub    %esi,%eax
81002b6a:	89 43 08             	mov    %eax,0x8(%ebx)
81002b6d:	8b 03                	mov    (%ebx),%eax
81002b6f:	89 f2                	mov    %esi,%edx
81002b71:	01 d0                	add    %edx,%eax
81002b73:	89 03                	mov    %eax,(%ebx)
81002b75:	89 fe                	mov    %edi,%esi
81002b77:	e9 9d 00 00 00       	jmp    81002c19 <__sfvwrite_r+0x300>
81002b7c:	8b 13                	mov    (%ebx),%edx
81002b7e:	8b 43 10             	mov    0x10(%ebx),%eax
81002b81:	39 c2                	cmp    %eax,%edx
81002b83:	77 07                	ja     81002b8c <__sfvwrite_r+0x273>
81002b85:	8b 43 14             	mov    0x14(%ebx),%eax
81002b88:	39 c7                	cmp    %eax,%edi
81002b8a:	73 4c                	jae    81002bd8 <__sfvwrite_r+0x2bf>
81002b8c:	89 f0                	mov    %esi,%eax
81002b8e:	39 c7                	cmp    %eax,%edi
81002b90:	0f 46 c7             	cmovbe %edi,%eax
81002b93:	89 c6                	mov    %eax,%esi
81002b95:	89 f2                	mov    %esi,%edx
81002b97:	8b 03                	mov    (%ebx),%eax
81002b99:	83 ec 04             	sub    $0x4,%esp
81002b9c:	52                   	push   %edx
81002b9d:	ff 75 c4             	pushl  -0x3c(%ebp)
81002ba0:	50                   	push   %eax
81002ba1:	e8 5a 1f 00 00       	call   81004b00 <memmove>
81002ba6:	83 c4 10             	add    $0x10,%esp
81002ba9:	8b 43 08             	mov    0x8(%ebx),%eax
81002bac:	29 f0                	sub    %esi,%eax
81002bae:	89 43 08             	mov    %eax,0x8(%ebx)
81002bb1:	8b 03                	mov    (%ebx),%eax
81002bb3:	89 f2                	mov    %esi,%edx
81002bb5:	01 d0                	add    %edx,%eax
81002bb7:	89 03                	mov    %eax,(%ebx)
81002bb9:	8b 43 08             	mov    0x8(%ebx),%eax
81002bbc:	85 c0                	test   %eax,%eax
81002bbe:	75 58                	jne    81002c18 <__sfvwrite_r+0x2ff>
81002bc0:	83 ec 08             	sub    $0x8,%esp
81002bc3:	53                   	push   %ebx
81002bc4:	ff 75 08             	pushl  0x8(%ebp)
81002bc7:	e8 1e e7 ff ff       	call   810012ea <_fflush_r>
81002bcc:	83 c4 10             	add    $0x10,%esp
81002bcf:	85 c0                	test   %eax,%eax
81002bd1:	74 45                	je     81002c18 <__sfvwrite_r+0x2ff>
81002bd3:	e9 c7 01 00 00       	jmp    81002d9f <__sfvwrite_r+0x486>
81002bd8:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81002bde:	77 04                	ja     81002be4 <__sfvwrite_r+0x2cb>
81002be0:	89 f8                	mov    %edi,%eax
81002be2:	eb 05                	jmp    81002be9 <__sfvwrite_r+0x2d0>
81002be4:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81002be9:	8b 4b 14             	mov    0x14(%ebx),%ecx
81002bec:	99                   	cltd   
81002bed:	f7 f9                	idiv   %ecx
81002bef:	89 c2                	mov    %eax,%edx
81002bf1:	8b 43 14             	mov    0x14(%ebx),%eax
81002bf4:	89 d6                	mov    %edx,%esi
81002bf6:	0f af f0             	imul   %eax,%esi
81002bf9:	8b 53 24             	mov    0x24(%ebx),%edx
81002bfc:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002bff:	56                   	push   %esi
81002c00:	ff 75 c4             	pushl  -0x3c(%ebp)
81002c03:	50                   	push   %eax
81002c04:	ff 75 08             	pushl  0x8(%ebp)
81002c07:	ff d2                	call   *%edx
81002c09:	83 c4 10             	add    $0x10,%esp
81002c0c:	89 c6                	mov    %eax,%esi
81002c0e:	85 f6                	test   %esi,%esi
81002c10:	0f 8e 85 01 00 00    	jle    81002d9b <__sfvwrite_r+0x482>
81002c16:	eb 01                	jmp    81002c19 <__sfvwrite_r+0x300>
81002c18:	90                   	nop
81002c19:	89 f0                	mov    %esi,%eax
81002c1b:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002c1e:	89 f0                	mov    %esi,%eax
81002c20:	29 c7                	sub    %eax,%edi
81002c22:	8b 45 10             	mov    0x10(%ebp),%eax
81002c25:	8b 40 08             	mov    0x8(%eax),%eax
81002c28:	89 f2                	mov    %esi,%edx
81002c2a:	29 d0                	sub    %edx,%eax
81002c2c:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002c2f:	89 41 08             	mov    %eax,0x8(%ecx)
81002c32:	8b 45 10             	mov    0x10(%ebp),%eax
81002c35:	8b 40 08             	mov    0x8(%eax),%eax
81002c38:	85 c0                	test   %eax,%eax
81002c3a:	0f 85 d4 fd ff ff    	jne    81002a14 <__sfvwrite_r+0xfb>
81002c40:	e9 4c 01 00 00       	jmp    81002d91 <__sfvwrite_r+0x478>
81002c45:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c4c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002c53:	eb 18                	jmp    81002c6d <__sfvwrite_r+0x354>
81002c55:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c5c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002c5f:	8b 08                	mov    (%eax),%ecx
81002c61:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002c64:	8b 78 04             	mov    0x4(%eax),%edi
81002c67:	83 c0 08             	add    $0x8,%eax
81002c6a:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002c6d:	85 ff                	test   %edi,%edi
81002c6f:	74 e4                	je     81002c55 <__sfvwrite_r+0x33c>
81002c71:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c75:	75 32                	jne    81002ca9 <__sfvwrite_r+0x390>
81002c77:	83 ec 04             	sub    $0x4,%esp
81002c7a:	57                   	push   %edi
81002c7b:	6a 0a                	push   $0xa
81002c7d:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81002c80:	56                   	push   %esi
81002c81:	e8 4a 1d 00 00       	call   810049d0 <memchr>
81002c86:	83 c4 10             	add    $0x10,%esp
81002c89:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c8c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002c90:	74 0a                	je     81002c9c <__sfvwrite_r+0x383>
81002c92:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002c95:	83 c0 01             	add    $0x1,%eax
81002c98:	29 f0                	sub    %esi,%eax
81002c9a:	eb 03                	jmp    81002c9f <__sfvwrite_r+0x386>
81002c9c:	8d 47 01             	lea    0x1(%edi),%eax
81002c9f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002ca2:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002ca9:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002cac:	39 c7                	cmp    %eax,%edi
81002cae:	0f 46 c7             	cmovbe %edi,%eax
81002cb1:	89 c1                	mov    %eax,%ecx
81002cb3:	8b 53 08             	mov    0x8(%ebx),%edx
81002cb6:	8b 43 14             	mov    0x14(%ebx),%eax
81002cb9:	8d 34 02             	lea    (%edx,%eax,1),%esi
81002cbc:	8b 13                	mov    (%ebx),%edx
81002cbe:	8b 43 10             	mov    0x10(%ebx),%eax
81002cc1:	39 c2                	cmp    %eax,%edx
81002cc3:	76 38                	jbe    81002cfd <__sfvwrite_r+0x3e4>
81002cc5:	39 f1                	cmp    %esi,%ecx
81002cc7:	7e 34                	jle    81002cfd <__sfvwrite_r+0x3e4>
81002cc9:	89 f2                	mov    %esi,%edx
81002ccb:	8b 03                	mov    (%ebx),%eax
81002ccd:	83 ec 04             	sub    $0x4,%esp
81002cd0:	52                   	push   %edx
81002cd1:	ff 75 c4             	pushl  -0x3c(%ebp)
81002cd4:	50                   	push   %eax
81002cd5:	e8 26 1e 00 00       	call   81004b00 <memmove>
81002cda:	83 c4 10             	add    $0x10,%esp
81002cdd:	8b 03                	mov    (%ebx),%eax
81002cdf:	89 f2                	mov    %esi,%edx
81002ce1:	01 d0                	add    %edx,%eax
81002ce3:	89 03                	mov    %eax,(%ebx)
81002ce5:	83 ec 08             	sub    $0x8,%esp
81002ce8:	53                   	push   %ebx
81002ce9:	ff 75 08             	pushl  0x8(%ebp)
81002cec:	e8 f9 e5 ff ff       	call   810012ea <_fflush_r>
81002cf1:	83 c4 10             	add    $0x10,%esp
81002cf4:	85 c0                	test   %eax,%eax
81002cf6:	74 4f                	je     81002d47 <__sfvwrite_r+0x42e>
81002cf8:	e9 a2 00 00 00       	jmp    81002d9f <__sfvwrite_r+0x486>
81002cfd:	8b 73 14             	mov    0x14(%ebx),%esi
81002d00:	89 c8                	mov    %ecx,%eax
81002d02:	39 c6                	cmp    %eax,%esi
81002d04:	7f 1b                	jg     81002d21 <__sfvwrite_r+0x408>
81002d06:	8b 53 24             	mov    0x24(%ebx),%edx
81002d09:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002d0c:	56                   	push   %esi
81002d0d:	ff 75 c4             	pushl  -0x3c(%ebp)
81002d10:	50                   	push   %eax
81002d11:	ff 75 08             	pushl  0x8(%ebp)
81002d14:	ff d2                	call   *%edx
81002d16:	83 c4 10             	add    $0x10,%esp
81002d19:	89 c6                	mov    %eax,%esi
81002d1b:	85 f6                	test   %esi,%esi
81002d1d:	7f 28                	jg     81002d47 <__sfvwrite_r+0x42e>
81002d1f:	eb 7e                	jmp    81002d9f <__sfvwrite_r+0x486>
81002d21:	89 ce                	mov    %ecx,%esi
81002d23:	89 f2                	mov    %esi,%edx
81002d25:	8b 03                	mov    (%ebx),%eax
81002d27:	83 ec 04             	sub    $0x4,%esp
81002d2a:	52                   	push   %edx
81002d2b:	ff 75 c4             	pushl  -0x3c(%ebp)
81002d2e:	50                   	push   %eax
81002d2f:	e8 cc 1d 00 00       	call   81004b00 <memmove>
81002d34:	83 c4 10             	add    $0x10,%esp
81002d37:	8b 43 08             	mov    0x8(%ebx),%eax
81002d3a:	29 f0                	sub    %esi,%eax
81002d3c:	89 43 08             	mov    %eax,0x8(%ebx)
81002d3f:	8b 03                	mov    (%ebx),%eax
81002d41:	89 f2                	mov    %esi,%edx
81002d43:	01 d0                	add    %edx,%eax
81002d45:	89 03                	mov    %eax,(%ebx)
81002d47:	29 75 e0             	sub    %esi,-0x20(%ebp)
81002d4a:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002d4e:	75 1a                	jne    81002d6a <__sfvwrite_r+0x451>
81002d50:	83 ec 08             	sub    $0x8,%esp
81002d53:	53                   	push   %ebx
81002d54:	ff 75 08             	pushl  0x8(%ebp)
81002d57:	e8 8e e5 ff ff       	call   810012ea <_fflush_r>
81002d5c:	83 c4 10             	add    $0x10,%esp
81002d5f:	85 c0                	test   %eax,%eax
81002d61:	75 3b                	jne    81002d9e <__sfvwrite_r+0x485>
81002d63:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002d6a:	89 f0                	mov    %esi,%eax
81002d6c:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002d6f:	89 f0                	mov    %esi,%eax
81002d71:	29 c7                	sub    %eax,%edi
81002d73:	8b 45 10             	mov    0x10(%ebp),%eax
81002d76:	8b 40 08             	mov    0x8(%eax),%eax
81002d79:	89 f2                	mov    %esi,%edx
81002d7b:	29 d0                	sub    %edx,%eax
81002d7d:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002d80:	89 41 08             	mov    %eax,0x8(%ecx)
81002d83:	8b 45 10             	mov    0x10(%ebp),%eax
81002d86:	8b 40 08             	mov    0x8(%eax),%eax
81002d89:	85 c0                	test   %eax,%eax
81002d8b:	0f 85 dc fe ff ff    	jne    81002c6d <__sfvwrite_r+0x354>
81002d91:	b8 00 00 00 00       	mov    $0x0,%eax
81002d96:	eb 17                	jmp    81002daf <__sfvwrite_r+0x496>
81002d98:	90                   	nop
81002d99:	eb 04                	jmp    81002d9f <__sfvwrite_r+0x486>
81002d9b:	90                   	nop
81002d9c:	eb 01                	jmp    81002d9f <__sfvwrite_r+0x486>
81002d9e:	90                   	nop
81002d9f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002da3:	83 c8 40             	or     $0x40,%eax
81002da6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002daa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002daf:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002db2:	5b                   	pop    %ebx
81002db3:	5e                   	pop    %esi
81002db4:	5f                   	pop    %edi
81002db5:	5d                   	pop    %ebp
81002db6:	c3                   	ret    

81002db7 <_fwalk>:
81002db7:	55                   	push   %ebp
81002db8:	89 e5                	mov    %esp,%ebp
81002dba:	57                   	push   %edi
81002dbb:	56                   	push   %esi
81002dbc:	53                   	push   %ebx
81002dbd:	83 ec 1c             	sub    $0x1c,%esp
81002dc0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002dc7:	8b 45 08             	mov    0x8(%ebp),%eax
81002dca:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002dd0:	eb 3e                	jmp    81002e10 <_fwalk+0x59>
81002dd2:	8b 5e 08             	mov    0x8(%esi),%ebx
81002dd5:	8b 7e 04             	mov    0x4(%esi),%edi
81002dd8:	eb 2d                	jmp    81002e07 <_fwalk+0x50>
81002dda:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dde:	66 85 c0             	test   %ax,%ax
81002de1:	74 21                	je     81002e04 <_fwalk+0x4d>
81002de3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002de7:	66 83 f8 01          	cmp    $0x1,%ax
81002deb:	74 17                	je     81002e04 <_fwalk+0x4d>
81002ded:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002df1:	66 83 f8 ff          	cmp    $0xffff,%ax
81002df5:	74 0d                	je     81002e04 <_fwalk+0x4d>
81002df7:	83 ec 0c             	sub    $0xc,%esp
81002dfa:	53                   	push   %ebx
81002dfb:	ff 55 0c             	call   *0xc(%ebp)
81002dfe:	83 c4 10             	add    $0x10,%esp
81002e01:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002e04:	83 c3 68             	add    $0x68,%ebx
81002e07:	83 ef 01             	sub    $0x1,%edi
81002e0a:	85 ff                	test   %edi,%edi
81002e0c:	79 cc                	jns    81002dda <_fwalk+0x23>
81002e0e:	8b 36                	mov    (%esi),%esi
81002e10:	85 f6                	test   %esi,%esi
81002e12:	75 be                	jne    81002dd2 <_fwalk+0x1b>
81002e14:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e17:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e1a:	5b                   	pop    %ebx
81002e1b:	5e                   	pop    %esi
81002e1c:	5f                   	pop    %edi
81002e1d:	5d                   	pop    %ebp
81002e1e:	c3                   	ret    

81002e1f <_fwalk_reent>:
81002e1f:	55                   	push   %ebp
81002e20:	89 e5                	mov    %esp,%ebp
81002e22:	57                   	push   %edi
81002e23:	56                   	push   %esi
81002e24:	53                   	push   %ebx
81002e25:	83 ec 1c             	sub    $0x1c,%esp
81002e28:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002e2f:	8b 45 08             	mov    0x8(%ebp),%eax
81002e32:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002e38:	eb 41                	jmp    81002e7b <_fwalk_reent+0x5c>
81002e3a:	8b 5e 08             	mov    0x8(%esi),%ebx
81002e3d:	8b 7e 04             	mov    0x4(%esi),%edi
81002e40:	eb 30                	jmp    81002e72 <_fwalk_reent+0x53>
81002e42:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e46:	66 85 c0             	test   %ax,%ax
81002e49:	74 24                	je     81002e6f <_fwalk_reent+0x50>
81002e4b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e4f:	66 83 f8 01          	cmp    $0x1,%ax
81002e53:	74 1a                	je     81002e6f <_fwalk_reent+0x50>
81002e55:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002e59:	66 83 f8 ff          	cmp    $0xffff,%ax
81002e5d:	74 10                	je     81002e6f <_fwalk_reent+0x50>
81002e5f:	83 ec 08             	sub    $0x8,%esp
81002e62:	53                   	push   %ebx
81002e63:	ff 75 08             	pushl  0x8(%ebp)
81002e66:	ff 55 0c             	call   *0xc(%ebp)
81002e69:	83 c4 10             	add    $0x10,%esp
81002e6c:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002e6f:	83 c3 68             	add    $0x68,%ebx
81002e72:	83 ef 01             	sub    $0x1,%edi
81002e75:	85 ff                	test   %edi,%edi
81002e77:	79 c9                	jns    81002e42 <_fwalk_reent+0x23>
81002e79:	8b 36                	mov    (%esi),%esi
81002e7b:	85 f6                	test   %esi,%esi
81002e7d:	75 bb                	jne    81002e3a <_fwalk_reent+0x1b>
81002e7f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e82:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e85:	5b                   	pop    %ebx
81002e86:	5e                   	pop    %esi
81002e87:	5f                   	pop    %edi
81002e88:	5d                   	pop    %ebp
81002e89:	c3                   	ret    

81002e8a <_fwrite_r>:
81002e8a:	55                   	push   %ebp
81002e8b:	89 e5                	mov    %esp,%ebp
81002e8d:	83 ec 28             	sub    $0x28,%esp
81002e90:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e93:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e96:	8b 45 14             	mov    0x14(%ebp),%eax
81002e99:	0f af 45 10          	imul   0x10(%ebp),%eax
81002e9d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002ea0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ea3:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002ea6:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002ea9:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002eac:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002eaf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002eb2:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002eb9:	8b 45 08             	mov    0x8(%ebp),%eax
81002ebc:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002ebf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002ec3:	74 18                	je     81002edd <_fwrite_r+0x53>
81002ec5:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ec8:	8b 40 38             	mov    0x38(%eax),%eax
81002ecb:	85 c0                	test   %eax,%eax
81002ecd:	75 0e                	jne    81002edd <_fwrite_r+0x53>
81002ecf:	83 ec 0c             	sub    $0xc,%esp
81002ed2:	ff 75 f0             	pushl  -0x10(%ebp)
81002ed5:	e8 fd e9 ff ff       	call   810018d7 <__sinit>
81002eda:	83 c4 10             	add    $0x10,%esp
81002edd:	8b 45 18             	mov    0x18(%ebp),%eax
81002ee0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002ee4:	98                   	cwtl   
81002ee5:	25 00 20 00 00       	and    $0x2000,%eax
81002eea:	85 c0                	test   %eax,%eax
81002eec:	75 24                	jne    81002f12 <_fwrite_r+0x88>
81002eee:	8b 45 18             	mov    0x18(%ebp),%eax
81002ef1:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002ef5:	80 cc 20             	or     $0x20,%ah
81002ef8:	89 c2                	mov    %eax,%edx
81002efa:	8b 45 18             	mov    0x18(%ebp),%eax
81002efd:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002f01:	8b 45 18             	mov    0x18(%ebp),%eax
81002f04:	8b 40 64             	mov    0x64(%eax),%eax
81002f07:	80 e4 df             	and    $0xdf,%ah
81002f0a:	89 c2                	mov    %eax,%edx
81002f0c:	8b 45 18             	mov    0x18(%ebp),%eax
81002f0f:	89 50 64             	mov    %edx,0x64(%eax)
81002f12:	83 ec 04             	sub    $0x4,%esp
81002f15:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002f18:	50                   	push   %eax
81002f19:	ff 75 18             	pushl  0x18(%ebp)
81002f1c:	ff 75 08             	pushl  0x8(%ebp)
81002f1f:	e8 f5 f9 ff ff       	call   81002919 <__sfvwrite_r>
81002f24:	83 c4 10             	add    $0x10,%esp
81002f27:	85 c0                	test   %eax,%eax
81002f29:	75 05                	jne    81002f30 <_fwrite_r+0xa6>
81002f2b:	8b 45 14             	mov    0x14(%ebp),%eax
81002f2e:	eb 10                	jmp    81002f40 <_fwrite_r+0xb6>
81002f30:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002f33:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f36:	29 d0                	sub    %edx,%eax
81002f38:	ba 00 00 00 00       	mov    $0x0,%edx
81002f3d:	f7 75 10             	divl   0x10(%ebp)
81002f40:	c9                   	leave  
81002f41:	c3                   	ret    

81002f42 <fwrite>:
81002f42:	55                   	push   %ebp
81002f43:	89 e5                	mov    %esp,%ebp
81002f45:	83 ec 08             	sub    $0x8,%esp
81002f48:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81002f4d:	83 ec 0c             	sub    $0xc,%esp
81002f50:	ff 75 14             	pushl  0x14(%ebp)
81002f53:	ff 75 10             	pushl  0x10(%ebp)
81002f56:	ff 75 0c             	pushl  0xc(%ebp)
81002f59:	ff 75 08             	pushl  0x8(%ebp)
81002f5c:	50                   	push   %eax
81002f5d:	e8 28 ff ff ff       	call   81002e8a <_fwrite_r>
81002f62:	83 c4 20             	add    $0x20,%esp
81002f65:	c9                   	leave  
81002f66:	c3                   	ret    

81002f67 <reverse_argv_elements>:
81002f67:	55                   	push   %ebp
81002f68:	89 e5                	mov    %esp,%ebp
81002f6a:	83 ec 10             	sub    $0x10,%esp
81002f6d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002f74:	eb 5e                	jmp    81002fd4 <reverse_argv_elements+0x6d>
81002f76:	8b 45 fc             	mov    -0x4(%ebp),%eax
81002f79:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f80:	8b 45 08             	mov    0x8(%ebp),%eax
81002f83:	01 d0                	add    %edx,%eax
81002f85:	8b 00                	mov    (%eax),%eax
81002f87:	89 45 f8             	mov    %eax,-0x8(%ebp)
81002f8a:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f8d:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002f90:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002f95:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f9c:	8b 45 08             	mov    0x8(%ebp),%eax
81002f9f:	01 d0                	add    %edx,%eax
81002fa1:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002fa4:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002fab:	8b 55 08             	mov    0x8(%ebp),%edx
81002fae:	01 ca                	add    %ecx,%edx
81002fb0:	8b 00                	mov    (%eax),%eax
81002fb2:	89 02                	mov    %eax,(%edx)
81002fb4:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fb7:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002fba:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002fbf:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002fc6:	8b 45 08             	mov    0x8(%ebp),%eax
81002fc9:	01 c2                	add    %eax,%edx
81002fcb:	8b 45 f8             	mov    -0x8(%ebp),%eax
81002fce:	89 02                	mov    %eax,(%edx)
81002fd0:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002fd4:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fd7:	d1 f8                	sar    %eax
81002fd9:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81002fdc:	7c 98                	jl     81002f76 <reverse_argv_elements+0xf>
81002fde:	90                   	nop
81002fdf:	90                   	nop
81002fe0:	c9                   	leave  
81002fe1:	c3                   	ret    

81002fe2 <permute>:
81002fe2:	55                   	push   %ebp
81002fe3:	89 e5                	mov    %esp,%ebp
81002fe5:	ff 75 0c             	pushl  0xc(%ebp)
81002fe8:	ff 75 08             	pushl  0x8(%ebp)
81002feb:	e8 77 ff ff ff       	call   81002f67 <reverse_argv_elements>
81002ff0:	83 c4 08             	add    $0x8,%esp
81002ff3:	8b 55 0c             	mov    0xc(%ebp),%edx
81002ff6:	8b 45 10             	mov    0x10(%ebp),%eax
81002ff9:	01 d0                	add    %edx,%eax
81002ffb:	50                   	push   %eax
81002ffc:	ff 75 08             	pushl  0x8(%ebp)
81002fff:	e8 63 ff ff ff       	call   81002f67 <reverse_argv_elements>
81003004:	83 c4 08             	add    $0x8,%esp
81003007:	ff 75 10             	pushl  0x10(%ebp)
8100300a:	ff 75 08             	pushl  0x8(%ebp)
8100300d:	e8 55 ff ff ff       	call   81002f67 <reverse_argv_elements>
81003012:	83 c4 08             	add    $0x8,%esp
81003015:	90                   	nop
81003016:	c9                   	leave  
81003017:	c3                   	ret    

81003018 <is_option>:
81003018:	55                   	push   %ebp
81003019:	89 e5                	mov    %esp,%ebp
8100301b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100301f:	74 1a                	je     8100303b <is_option+0x23>
81003021:	8b 45 08             	mov    0x8(%ebp),%eax
81003024:	0f b6 00             	movzbl (%eax),%eax
81003027:	3c 2d                	cmp    $0x2d,%al
81003029:	74 10                	je     8100303b <is_option+0x23>
8100302b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100302f:	74 11                	je     81003042 <is_option+0x2a>
81003031:	8b 45 08             	mov    0x8(%ebp),%eax
81003034:	0f b6 00             	movzbl (%eax),%eax
81003037:	3c 2b                	cmp    $0x2b,%al
81003039:	75 07                	jne    81003042 <is_option+0x2a>
8100303b:	b8 01 00 00 00       	mov    $0x1,%eax
81003040:	eb 05                	jmp    81003047 <is_option+0x2f>
81003042:	b8 00 00 00 00       	mov    $0x0,%eax
81003047:	5d                   	pop    %ebp
81003048:	c3                   	ret    

81003049 <read_globals>:
81003049:	55                   	push   %ebp
8100304a:	89 e5                	mov    %esp,%ebp
8100304c:	8b 15 a8 9b 00 81    	mov    0x81009ba8,%edx
81003052:	8b 45 08             	mov    0x8(%ebp),%eax
81003055:	89 10                	mov    %edx,(%eax)
81003057:	8b 15 ac 9b 00 81    	mov    0x81009bac,%edx
8100305d:	8b 45 08             	mov    0x8(%ebp),%eax
81003060:	89 50 04             	mov    %edx,0x4(%eax)
81003063:	8b 15 84 8c 00 81    	mov    0x81008c84,%edx
81003069:	8b 45 08             	mov    0x8(%ebp),%eax
8100306c:	89 50 08             	mov    %edx,0x8(%eax)
8100306f:	8b 15 88 8c 00 81    	mov    0x81008c88,%edx
81003075:	8b 45 08             	mov    0x8(%ebp),%eax
81003078:	89 50 0c             	mov    %edx,0xc(%eax)
8100307b:	8b 15 b0 9b 00 81    	mov    0x81009bb0,%edx
81003081:	8b 45 08             	mov    0x8(%ebp),%eax
81003084:	89 50 10             	mov    %edx,0x10(%eax)
81003087:	8b 15 b4 9b 00 81    	mov    0x81009bb4,%edx
8100308d:	8b 45 08             	mov    0x8(%ebp),%eax
81003090:	89 50 14             	mov    %edx,0x14(%eax)
81003093:	8b 15 b8 9b 00 81    	mov    0x81009bb8,%edx
81003099:	8b 45 08             	mov    0x8(%ebp),%eax
8100309c:	89 50 18             	mov    %edx,0x18(%eax)
8100309f:	90                   	nop
810030a0:	5d                   	pop    %ebp
810030a1:	c3                   	ret    

810030a2 <write_globals>:
810030a2:	55                   	push   %ebp
810030a3:	89 e5                	mov    %esp,%ebp
810030a5:	8b 45 08             	mov    0x8(%ebp),%eax
810030a8:	8b 00                	mov    (%eax),%eax
810030aa:	a3 a8 9b 00 81       	mov    %eax,0x81009ba8
810030af:	8b 45 08             	mov    0x8(%ebp),%eax
810030b2:	8b 40 04             	mov    0x4(%eax),%eax
810030b5:	a3 ac 9b 00 81       	mov    %eax,0x81009bac
810030ba:	8b 45 08             	mov    0x8(%ebp),%eax
810030bd:	8b 40 08             	mov    0x8(%eax),%eax
810030c0:	a3 84 8c 00 81       	mov    %eax,0x81008c84
810030c5:	8b 45 08             	mov    0x8(%ebp),%eax
810030c8:	8b 40 0c             	mov    0xc(%eax),%eax
810030cb:	a3 88 8c 00 81       	mov    %eax,0x81008c88
810030d0:	8b 45 08             	mov    0x8(%ebp),%eax
810030d3:	8b 40 10             	mov    0x10(%eax),%eax
810030d6:	a3 b0 9b 00 81       	mov    %eax,0x81009bb0
810030db:	8b 45 08             	mov    0x8(%ebp),%eax
810030de:	8b 40 14             	mov    0x14(%eax),%eax
810030e1:	a3 b4 9b 00 81       	mov    %eax,0x81009bb4
810030e6:	8b 45 08             	mov    0x8(%ebp),%eax
810030e9:	8b 40 18             	mov    0x18(%eax),%eax
810030ec:	a3 b8 9b 00 81       	mov    %eax,0x81009bb8
810030f1:	90                   	nop
810030f2:	5d                   	pop    %ebp
810030f3:	c3                   	ret    

810030f4 <getopt_internal>:
810030f4:	55                   	push   %ebp
810030f5:	89 e5                	mov    %esp,%ebp
810030f7:	53                   	push   %ebx
810030f8:	83 ec 34             	sub    $0x34,%esp
810030fb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003102:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003109:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81003110:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81003117:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8100311e:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81003125:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
8100312c:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003133:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
8100313a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100313e:	74 35                	je     81003175 <getopt_internal+0x81>
81003140:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003144:	74 2f                	je     81003175 <getopt_internal+0x81>
81003146:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100314a:	75 06                	jne    81003152 <getopt_internal+0x5e>
8100314c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81003150:	74 23                	je     81003175 <getopt_internal+0x81>
81003152:	8b 45 20             	mov    0x20(%ebp),%eax
81003155:	8b 40 04             	mov    0x4(%eax),%eax
81003158:	39 45 08             	cmp    %eax,0x8(%ebp)
8100315b:	7e 18                	jle    81003175 <getopt_internal+0x81>
8100315d:	8b 45 20             	mov    0x20(%ebp),%eax
81003160:	8b 40 04             	mov    0x4(%eax),%eax
81003163:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100316a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100316d:	01 d0                	add    %edx,%eax
8100316f:	8b 00                	mov    (%eax),%eax
81003171:	85 c0                	test   %eax,%eax
81003173:	75 0a                	jne    8100317f <getopt_internal+0x8b>
81003175:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100317a:	e9 85 0a 00 00       	jmp    81003c04 <getopt_internal+0xb10>
8100317f:	8b 45 20             	mov    0x20(%ebp),%eax
81003182:	8b 40 04             	mov    0x4(%eax),%eax
81003185:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100318c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100318f:	01 d0                	add    %edx,%eax
81003191:	8b 00                	mov    (%eax),%eax
81003193:	83 ec 08             	sub    $0x8,%esp
81003196:	68 7c 88 00 81       	push   $0x8100887c
8100319b:	50                   	push   %eax
8100319c:	e8 9b 39 00 00       	call   81006b3c <strcmp>
810031a1:	83 c4 10             	add    $0x10,%esp
810031a4:	85 c0                	test   %eax,%eax
810031a6:	75 19                	jne    810031c1 <getopt_internal+0xcd>
810031a8:	8b 45 20             	mov    0x20(%ebp),%eax
810031ab:	8b 40 04             	mov    0x4(%eax),%eax
810031ae:	8d 50 01             	lea    0x1(%eax),%edx
810031b1:	8b 45 20             	mov    0x20(%ebp),%eax
810031b4:	89 50 04             	mov    %edx,0x4(%eax)
810031b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810031bc:	e9 43 0a 00 00       	jmp    81003c04 <getopt_internal+0xb10>
810031c1:	8b 45 20             	mov    0x20(%ebp),%eax
810031c4:	8b 40 04             	mov    0x4(%eax),%eax
810031c7:	85 c0                	test   %eax,%eax
810031c9:	75 28                	jne    810031f3 <getopt_internal+0xff>
810031cb:	8b 45 20             	mov    0x20(%ebp),%eax
810031ce:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810031d5:	8b 45 20             	mov    0x20(%ebp),%eax
810031d8:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810031df:	8b 45 20             	mov    0x20(%ebp),%eax
810031e2:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810031e9:	8b 45 20             	mov    0x20(%ebp),%eax
810031ec:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810031f3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810031f7:	74 33                	je     8100322c <getopt_internal+0x138>
810031f9:	8b 45 10             	mov    0x10(%ebp),%eax
810031fc:	0f b6 00             	movzbl (%eax),%eax
810031ff:	3c 2d                	cmp    $0x2d,%al
81003201:	74 0a                	je     8100320d <getopt_internal+0x119>
81003203:	8b 45 10             	mov    0x10(%ebp),%eax
81003206:	0f b6 00             	movzbl (%eax),%eax
81003209:	3c 2b                	cmp    $0x2b,%al
8100320b:	75 1f                	jne    8100322c <getopt_internal+0x138>
8100320d:	8b 45 10             	mov    0x10(%ebp),%eax
81003210:	0f b6 00             	movzbl (%eax),%eax
81003213:	3c 2d                	cmp    $0x2d,%al
81003215:	75 07                	jne    8100321e <getopt_internal+0x12a>
81003217:	b8 01 00 00 00       	mov    $0x1,%eax
8100321c:	eb 05                	jmp    81003223 <getopt_internal+0x12f>
8100321e:	b8 02 00 00 00       	mov    $0x2,%eax
81003223:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003226:	83 45 10 01          	addl   $0x1,0x10(%ebp)
8100322a:	eb 23                	jmp    8100324f <getopt_internal+0x15b>
8100322c:	83 ec 0c             	sub    $0xc,%esp
8100322f:	68 7f 88 00 81       	push   $0x8100887f
81003234:	e8 44 45 00 00       	call   8100777d <getenv>
81003239:	83 c4 10             	add    $0x10,%esp
8100323c:	85 c0                	test   %eax,%eax
8100323e:	74 07                	je     81003247 <getopt_internal+0x153>
81003240:	b8 02 00 00 00       	mov    $0x2,%eax
81003245:	eb 05                	jmp    8100324c <getopt_internal+0x158>
81003247:	b8 00 00 00 00       	mov    $0x0,%eax
8100324c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100324f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003253:	74 15                	je     8100326a <getopt_internal+0x176>
81003255:	8b 45 10             	mov    0x10(%ebp),%eax
81003258:	0f b6 00             	movzbl (%eax),%eax
8100325b:	3c 3a                	cmp    $0x3a,%al
8100325d:	75 0b                	jne    8100326a <getopt_internal+0x176>
8100325f:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81003263:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
8100326a:	8b 45 20             	mov    0x20(%ebp),%eax
8100326d:	8b 40 10             	mov    0x10(%eax),%eax
81003270:	83 f8 01             	cmp    $0x1,%eax
81003273:	0f 85 a2 01 00 00    	jne    8100341b <getopt_internal+0x327>
81003279:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
8100327d:	0f 84 02 01 00 00    	je     81003385 <getopt_internal+0x291>
81003283:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81003287:	0f 84 56 01 00 00    	je     810033e3 <getopt_internal+0x2ef>
8100328d:	8b 45 20             	mov    0x20(%ebp),%eax
81003290:	8b 50 04             	mov    0x4(%eax),%edx
81003293:	8b 45 20             	mov    0x20(%ebp),%eax
81003296:	89 50 14             	mov    %edx,0x14(%eax)
81003299:	8b 45 20             	mov    0x20(%ebp),%eax
8100329c:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810032a3:	eb 1e                	jmp    810032c3 <getopt_internal+0x1cf>
810032a5:	8b 45 20             	mov    0x20(%ebp),%eax
810032a8:	8b 40 04             	mov    0x4(%eax),%eax
810032ab:	8d 50 01             	lea    0x1(%eax),%edx
810032ae:	8b 45 20             	mov    0x20(%ebp),%eax
810032b1:	89 50 04             	mov    %edx,0x4(%eax)
810032b4:	8b 45 20             	mov    0x20(%ebp),%eax
810032b7:	8b 40 18             	mov    0x18(%eax),%eax
810032ba:	8d 50 01             	lea    0x1(%eax),%edx
810032bd:	8b 45 20             	mov    0x20(%ebp),%eax
810032c0:	89 50 18             	mov    %edx,0x18(%eax)
810032c3:	8b 45 20             	mov    0x20(%ebp),%eax
810032c6:	8b 40 04             	mov    0x4(%eax),%eax
810032c9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032d0:	8b 45 0c             	mov    0xc(%ebp),%eax
810032d3:	01 d0                	add    %edx,%eax
810032d5:	8b 00                	mov    (%eax),%eax
810032d7:	83 ec 08             	sub    $0x8,%esp
810032da:	ff 75 1c             	pushl  0x1c(%ebp)
810032dd:	50                   	push   %eax
810032de:	e8 35 fd ff ff       	call   81003018 <is_option>
810032e3:	83 c4 10             	add    $0x10,%esp
810032e6:	85 c0                	test   %eax,%eax
810032e8:	74 bb                	je     810032a5 <getopt_internal+0x1b1>
810032ea:	8b 45 20             	mov    0x20(%ebp),%eax
810032ed:	8b 40 04             	mov    0x4(%eax),%eax
810032f0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032f7:	8b 45 0c             	mov    0xc(%ebp),%eax
810032fa:	01 d0                	add    %edx,%eax
810032fc:	8b 00                	mov    (%eax),%eax
810032fe:	85 c0                	test   %eax,%eax
81003300:	75 16                	jne    81003318 <getopt_internal+0x224>
81003302:	8b 45 20             	mov    0x20(%ebp),%eax
81003305:	8b 50 14             	mov    0x14(%eax),%edx
81003308:	8b 45 20             	mov    0x20(%ebp),%eax
8100330b:	89 50 04             	mov    %edx,0x4(%eax)
8100330e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003313:	e9 ec 08 00 00       	jmp    81003c04 <getopt_internal+0xb10>
81003318:	8b 45 20             	mov    0x20(%ebp),%eax
8100331b:	8b 40 04             	mov    0x4(%eax),%eax
8100331e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003325:	8b 45 0c             	mov    0xc(%ebp),%eax
81003328:	01 d0                	add    %edx,%eax
8100332a:	8b 00                	mov    (%eax),%eax
8100332c:	83 ec 08             	sub    $0x8,%esp
8100332f:	68 7c 88 00 81       	push   $0x8100887c
81003334:	50                   	push   %eax
81003335:	e8 02 38 00 00       	call   81006b3c <strcmp>
8100333a:	83 c4 10             	add    $0x10,%esp
8100333d:	85 c0                	test   %eax,%eax
8100333f:	0f 85 cf 00 00 00    	jne    81003414 <getopt_internal+0x320>
81003345:	8b 45 20             	mov    0x20(%ebp),%eax
81003348:	8b 40 18             	mov    0x18(%eax),%eax
8100334b:	8b 55 20             	mov    0x20(%ebp),%edx
8100334e:	8b 52 14             	mov    0x14(%edx),%edx
81003351:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81003358:	8b 55 0c             	mov    0xc(%ebp),%edx
8100335b:	01 ca                	add    %ecx,%edx
8100335d:	83 ec 04             	sub    $0x4,%esp
81003360:	6a 01                	push   $0x1
81003362:	50                   	push   %eax
81003363:	52                   	push   %edx
81003364:	e8 79 fc ff ff       	call   81002fe2 <permute>
81003369:	83 c4 10             	add    $0x10,%esp
8100336c:	8b 45 20             	mov    0x20(%ebp),%eax
8100336f:	8b 40 14             	mov    0x14(%eax),%eax
81003372:	8d 50 01             	lea    0x1(%eax),%edx
81003375:	8b 45 20             	mov    0x20(%ebp),%eax
81003378:	89 50 04             	mov    %edx,0x4(%eax)
8100337b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003380:	e9 7f 08 00 00       	jmp    81003c04 <getopt_internal+0xb10>
81003385:	8b 45 20             	mov    0x20(%ebp),%eax
81003388:	8b 40 04             	mov    0x4(%eax),%eax
8100338b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003392:	8b 45 0c             	mov    0xc(%ebp),%eax
81003395:	01 d0                	add    %edx,%eax
81003397:	8b 00                	mov    (%eax),%eax
81003399:	83 ec 08             	sub    $0x8,%esp
8100339c:	ff 75 1c             	pushl  0x1c(%ebp)
8100339f:	50                   	push   %eax
810033a0:	e8 73 fc ff ff       	call   81003018 <is_option>
810033a5:	83 c4 10             	add    $0x10,%esp
810033a8:	85 c0                	test   %eax,%eax
810033aa:	75 6b                	jne    81003417 <getopt_internal+0x323>
810033ac:	8b 45 20             	mov    0x20(%ebp),%eax
810033af:	8b 40 04             	mov    0x4(%eax),%eax
810033b2:	8d 48 01             	lea    0x1(%eax),%ecx
810033b5:	8b 55 20             	mov    0x20(%ebp),%edx
810033b8:	89 4a 04             	mov    %ecx,0x4(%edx)
810033bb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033c2:	8b 45 0c             	mov    0xc(%ebp),%eax
810033c5:	01 d0                	add    %edx,%eax
810033c7:	8b 10                	mov    (%eax),%edx
810033c9:	8b 45 20             	mov    0x20(%ebp),%eax
810033cc:	89 10                	mov    %edx,(%eax)
810033ce:	8b 45 20             	mov    0x20(%ebp),%eax
810033d1:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
810033d8:	8b 45 20             	mov    0x20(%ebp),%eax
810033db:	8b 40 0c             	mov    0xc(%eax),%eax
810033de:	e9 21 08 00 00       	jmp    81003c04 <getopt_internal+0xb10>
810033e3:	8b 45 20             	mov    0x20(%ebp),%eax
810033e6:	8b 40 04             	mov    0x4(%eax),%eax
810033e9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033f0:	8b 45 0c             	mov    0xc(%ebp),%eax
810033f3:	01 d0                	add    %edx,%eax
810033f5:	8b 00                	mov    (%eax),%eax
810033f7:	83 ec 08             	sub    $0x8,%esp
810033fa:	ff 75 1c             	pushl  0x1c(%ebp)
810033fd:	50                   	push   %eax
810033fe:	e8 15 fc ff ff       	call   81003018 <is_option>
81003403:	83 c4 10             	add    $0x10,%esp
81003406:	85 c0                	test   %eax,%eax
81003408:	75 10                	jne    8100341a <getopt_internal+0x326>
8100340a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100340f:	e9 f0 07 00 00       	jmp    81003c04 <getopt_internal+0xb10>
81003414:	90                   	nop
81003415:	eb 04                	jmp    8100341b <getopt_internal+0x327>
81003417:	90                   	nop
81003418:	eb 01                	jmp    8100341b <getopt_internal+0x327>
8100341a:	90                   	nop
8100341b:	8b 45 20             	mov    0x20(%ebp),%eax
8100341e:	8b 40 04             	mov    0x4(%eax),%eax
81003421:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003428:	8b 45 0c             	mov    0xc(%ebp),%eax
8100342b:	01 d0                	add    %edx,%eax
8100342d:	8b 00                	mov    (%eax),%eax
8100342f:	85 c0                	test   %eax,%eax
81003431:	75 0a                	jne    8100343d <getopt_internal+0x349>
81003433:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003438:	e9 c7 07 00 00       	jmp    81003c04 <getopt_internal+0xb10>
8100343d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81003441:	0f 84 15 03 00 00    	je     8100375c <getopt_internal+0x668>
81003447:	8b 45 20             	mov    0x20(%ebp),%eax
8100344a:	8b 40 04             	mov    0x4(%eax),%eax
8100344d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003454:	8b 45 0c             	mov    0xc(%ebp),%eax
81003457:	01 d0                	add    %edx,%eax
81003459:	8b 00                	mov    (%eax),%eax
8100345b:	83 ec 04             	sub    $0x4,%esp
8100345e:	6a 02                	push   $0x2
81003460:	68 7c 88 00 81       	push   $0x8100887c
81003465:	50                   	push   %eax
81003466:	e8 fa 15 00 00       	call   81004a65 <memcmp>
8100346b:	83 c4 10             	add    $0x10,%esp
8100346e:	85 c0                	test   %eax,%eax
81003470:	74 29                	je     8100349b <getopt_internal+0x3a7>
81003472:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81003476:	0f 84 e0 02 00 00    	je     8100375c <getopt_internal+0x668>
8100347c:	8b 45 20             	mov    0x20(%ebp),%eax
8100347f:	8b 40 04             	mov    0x4(%eax),%eax
81003482:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003489:	8b 45 0c             	mov    0xc(%ebp),%eax
8100348c:	01 d0                	add    %edx,%eax
8100348e:	8b 00                	mov    (%eax),%eax
81003490:	0f b6 00             	movzbl (%eax),%eax
81003493:	3c 2b                	cmp    $0x2b,%al
81003495:	0f 85 c1 02 00 00    	jne    8100375c <getopt_internal+0x668>
8100349b:	8b 45 20             	mov    0x20(%ebp),%eax
8100349e:	8b 40 10             	mov    0x10(%eax),%eax
810034a1:	83 f8 01             	cmp    $0x1,%eax
810034a4:	0f 85 b2 02 00 00    	jne    8100375c <getopt_internal+0x668>
810034aa:	8b 45 20             	mov    0x20(%ebp),%eax
810034ad:	8b 40 04             	mov    0x4(%eax),%eax
810034b0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810034ba:	01 d0                	add    %edx,%eax
810034bc:	8b 00                	mov    (%eax),%eax
810034be:	83 ec 04             	sub    $0x4,%esp
810034c1:	6a 02                	push   $0x2
810034c3:	68 7c 88 00 81       	push   $0x8100887c
810034c8:	50                   	push   %eax
810034c9:	e8 97 15 00 00       	call   81004a65 <memcmp>
810034ce:	83 c4 10             	add    $0x10,%esp
810034d1:	85 c0                	test   %eax,%eax
810034d3:	75 0a                	jne    810034df <getopt_internal+0x3eb>
810034d5:	8b 45 20             	mov    0x20(%ebp),%eax
810034d8:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
810034df:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810034e6:	8b 45 20             	mov    0x20(%ebp),%eax
810034e9:	8b 40 04             	mov    0x4(%eax),%eax
810034ec:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810034f6:	01 d0                	add    %edx,%eax
810034f8:	8b 10                	mov    (%eax),%edx
810034fa:	8b 45 20             	mov    0x20(%ebp),%eax
810034fd:	8b 40 10             	mov    0x10(%eax),%eax
81003500:	01 d0                	add    %edx,%eax
81003502:	83 ec 08             	sub    $0x8,%esp
81003505:	6a 3d                	push   $0x3d
81003507:	50                   	push   %eax
81003508:	e8 33 35 00 00       	call   81006a40 <strchr>
8100350d:	83 c4 10             	add    $0x10,%esp
81003510:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003513:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003517:	75 4a                	jne    81003563 <getopt_internal+0x46f>
81003519:	8b 45 20             	mov    0x20(%ebp),%eax
8100351c:	8b 40 04             	mov    0x4(%eax),%eax
8100351f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003526:	8b 45 0c             	mov    0xc(%ebp),%eax
81003529:	01 d0                	add    %edx,%eax
8100352b:	8b 00                	mov    (%eax),%eax
8100352d:	83 ec 0c             	sub    $0xc,%esp
81003530:	50                   	push   %eax
81003531:	e8 ba 36 00 00       	call   81006bf0 <strlen>
81003536:	83 c4 10             	add    $0x10,%esp
81003539:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100353c:	8b 45 20             	mov    0x20(%ebp),%eax
8100353f:	8b 40 04             	mov    0x4(%eax),%eax
81003542:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003549:	8b 45 0c             	mov    0xc(%ebp),%eax
8100354c:	01 d0                	add    %edx,%eax
8100354e:	8b 10                	mov    (%eax),%edx
81003550:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003553:	01 d0                	add    %edx,%eax
81003555:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003558:	8b 45 20             	mov    0x20(%ebp),%eax
8100355b:	8b 40 10             	mov    0x10(%eax),%eax
8100355e:	29 45 ec             	sub    %eax,-0x14(%ebp)
81003561:	eb 28                	jmp    8100358b <getopt_internal+0x497>
81003563:	8b 45 20             	mov    0x20(%ebp),%eax
81003566:	8b 40 04             	mov    0x4(%eax),%eax
81003569:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003570:	8b 45 0c             	mov    0xc(%ebp),%eax
81003573:	01 d0                	add    %edx,%eax
81003575:	8b 08                	mov    (%eax),%ecx
81003577:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100357a:	29 c8                	sub    %ecx,%eax
8100357c:	89 c2                	mov    %eax,%edx
8100357e:	8b 45 20             	mov    0x20(%ebp),%eax
81003581:	8b 48 10             	mov    0x10(%eax),%ecx
81003584:	89 d0                	mov    %edx,%eax
81003586:	29 c8                	sub    %ecx,%eax
81003588:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100358b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81003592:	e9 95 01 00 00       	jmp    8100372c <getopt_internal+0x638>
81003597:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100359a:	c1 e0 04             	shl    $0x4,%eax
8100359d:	89 c2                	mov    %eax,%edx
8100359f:	8b 45 14             	mov    0x14(%ebp),%eax
810035a2:	01 d0                	add    %edx,%eax
810035a4:	8b 00                	mov    (%eax),%eax
810035a6:	8b 55 20             	mov    0x20(%ebp),%edx
810035a9:	8b 52 04             	mov    0x4(%edx),%edx
810035ac:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810035b3:	8b 55 0c             	mov    0xc(%ebp),%edx
810035b6:	01 ca                	add    %ecx,%edx
810035b8:	8b 0a                	mov    (%edx),%ecx
810035ba:	8b 55 20             	mov    0x20(%ebp),%edx
810035bd:	8b 52 10             	mov    0x10(%edx),%edx
810035c0:	01 ca                	add    %ecx,%edx
810035c2:	83 ec 04             	sub    $0x4,%esp
810035c5:	ff 75 ec             	pushl  -0x14(%ebp)
810035c8:	50                   	push   %eax
810035c9:	52                   	push   %edx
810035ca:	e8 96 14 00 00       	call   81004a65 <memcmp>
810035cf:	83 c4 10             	add    $0x10,%esp
810035d2:	85 c0                	test   %eax,%eax
810035d4:	0f 85 4e 01 00 00    	jne    81003728 <getopt_internal+0x634>
810035da:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035dd:	c1 e0 04             	shl    $0x4,%eax
810035e0:	89 c2                	mov    %eax,%edx
810035e2:	8b 45 14             	mov    0x14(%ebp),%eax
810035e5:	01 d0                	add    %edx,%eax
810035e7:	8b 00                	mov    (%eax),%eax
810035e9:	83 ec 0c             	sub    $0xc,%esp
810035ec:	50                   	push   %eax
810035ed:	e8 fe 35 00 00       	call   81006bf0 <strlen>
810035f2:	83 c4 10             	add    $0x10,%esp
810035f5:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810035f8:	75 0b                	jne    81003605 <getopt_internal+0x511>
810035fa:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035fd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003600:	e9 3e 01 00 00       	jmp    81003743 <getopt_internal+0x64f>
81003605:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003609:	79 0b                	jns    81003616 <getopt_internal+0x522>
8100360b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100360e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003611:	e9 12 01 00 00       	jmp    81003728 <getopt_internal+0x634>
81003616:	8b 45 20             	mov    0x20(%ebp),%eax
81003619:	8b 40 08             	mov    0x8(%eax),%eax
8100361c:	85 c0                	test   %eax,%eax
8100361e:	0f 84 ef 00 00 00    	je     81003713 <getopt_internal+0x61f>
81003624:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81003629:	8b 50 0c             	mov    0xc(%eax),%edx
8100362c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100362f:	8b 00                	mov    (%eax),%eax
81003631:	83 ec 08             	sub    $0x8,%esp
81003634:	52                   	push   %edx
81003635:	50                   	push   %eax
81003636:	e8 98 e5 ff ff       	call   81001bd3 <fputs>
8100363b:	83 c4 10             	add    $0x10,%esp
8100363e:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81003643:	8b 40 0c             	mov    0xc(%eax),%eax
81003646:	83 ec 08             	sub    $0x8,%esp
81003649:	50                   	push   %eax
8100364a:	68 8f 88 00 81       	push   $0x8100888f
8100364f:	e8 7f e5 ff ff       	call   81001bd3 <fputs>
81003654:	83 c4 10             	add    $0x10,%esp
81003657:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100365c:	8b 50 0c             	mov    0xc(%eax),%edx
8100365f:	8b 45 20             	mov    0x20(%ebp),%eax
81003662:	8b 40 04             	mov    0x4(%eax),%eax
81003665:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
8100366c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100366f:	01 c8                	add    %ecx,%eax
81003671:	8b 00                	mov    (%eax),%eax
81003673:	83 ec 08             	sub    $0x8,%esp
81003676:	52                   	push   %edx
81003677:	50                   	push   %eax
81003678:	e8 56 e5 ff ff       	call   81001bd3 <fputs>
8100367d:	83 c4 10             	add    $0x10,%esp
81003680:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81003685:	8b 40 0c             	mov    0xc(%eax),%eax
81003688:	83 ec 08             	sub    $0x8,%esp
8100368b:	50                   	push   %eax
8100368c:	68 9a 88 00 81       	push   $0x8100889a
81003691:	e8 3d e5 ff ff       	call   81001bd3 <fputs>
81003696:	83 c4 10             	add    $0x10,%esp
81003699:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100369e:	8b 50 0c             	mov    0xc(%eax),%edx
810036a1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810036a4:	c1 e0 04             	shl    $0x4,%eax
810036a7:	89 c1                	mov    %eax,%ecx
810036a9:	8b 45 14             	mov    0x14(%ebp),%eax
810036ac:	01 c8                	add    %ecx,%eax
810036ae:	8b 00                	mov    (%eax),%eax
810036b0:	83 ec 08             	sub    $0x8,%esp
810036b3:	52                   	push   %edx
810036b4:	50                   	push   %eax
810036b5:	e8 19 e5 ff ff       	call   81001bd3 <fputs>
810036ba:	83 c4 10             	add    $0x10,%esp
810036bd:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810036c2:	8b 40 0c             	mov    0xc(%eax),%eax
810036c5:	83 ec 08             	sub    $0x8,%esp
810036c8:	50                   	push   %eax
810036c9:	68 b7 88 00 81       	push   $0x810088b7
810036ce:	e8 00 e5 ff ff       	call   81001bd3 <fputs>
810036d3:	83 c4 10             	add    $0x10,%esp
810036d6:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810036db:	8b 50 0c             	mov    0xc(%eax),%edx
810036de:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036e1:	c1 e0 04             	shl    $0x4,%eax
810036e4:	89 c1                	mov    %eax,%ecx
810036e6:	8b 45 14             	mov    0x14(%ebp),%eax
810036e9:	01 c8                	add    %ecx,%eax
810036eb:	8b 00                	mov    (%eax),%eax
810036ed:	83 ec 08             	sub    $0x8,%esp
810036f0:	52                   	push   %edx
810036f1:	50                   	push   %eax
810036f2:	e8 dc e4 ff ff       	call   81001bd3 <fputs>
810036f7:	83 c4 10             	add    $0x10,%esp
810036fa:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810036ff:	8b 40 0c             	mov    0xc(%eax),%eax
81003702:	83 ec 08             	sub    $0x8,%esp
81003705:	50                   	push   %eax
81003706:	68 c0 88 00 81       	push   $0x810088c0
8100370b:	e8 c3 e4 ff ff       	call   81001bd3 <fputs>
81003710:	83 c4 10             	add    $0x10,%esp
81003713:	8b 45 20             	mov    0x20(%ebp),%eax
81003716:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100371d:	8b 45 20             	mov    0x20(%ebp),%eax
81003720:	8b 40 0c             	mov    0xc(%eax),%eax
81003723:	e9 dc 04 00 00       	jmp    81003c04 <getopt_internal+0xb10>
81003728:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100372c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100372f:	c1 e0 04             	shl    $0x4,%eax
81003732:	89 c2                	mov    %eax,%edx
81003734:	8b 45 14             	mov    0x14(%ebp),%eax
81003737:	01 d0                	add    %edx,%eax
81003739:	8b 00                	mov    (%eax),%eax
8100373b:	85 c0                	test   %eax,%eax
8100373d:	0f 85 54 fe ff ff    	jne    81003597 <getopt_internal+0x4a3>
81003743:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003747:	78 13                	js     8100375c <getopt_internal+0x668>
81003749:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100374c:	c1 e0 04             	shl    $0x4,%eax
8100374f:	89 c2                	mov    %eax,%edx
81003751:	8b 45 14             	mov    0x14(%ebp),%eax
81003754:	01 d0                	add    %edx,%eax
81003756:	8b 40 04             	mov    0x4(%eax),%eax
81003759:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100375c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003760:	0f 89 9a 01 00 00    	jns    81003900 <getopt_internal+0x80c>
81003766:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100376a:	0f 84 90 01 00 00    	je     81003900 <getopt_internal+0x80c>
81003770:	8b 45 20             	mov    0x20(%ebp),%eax
81003773:	8b 40 04             	mov    0x4(%eax),%eax
81003776:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100377d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003780:	01 d0                	add    %edx,%eax
81003782:	8b 10                	mov    (%eax),%edx
81003784:	8b 45 20             	mov    0x20(%ebp),%eax
81003787:	8b 40 10             	mov    0x10(%eax),%eax
8100378a:	01 d0                	add    %edx,%eax
8100378c:	0f b6 00             	movzbl (%eax),%eax
8100378f:	0f be c0             	movsbl %al,%eax
81003792:	83 ec 08             	sub    $0x8,%esp
81003795:	50                   	push   %eax
81003796:	ff 75 10             	pushl  0x10(%ebp)
81003799:	e8 a2 32 00 00       	call   81006a40 <strchr>
8100379e:	83 c4 10             	add    $0x10,%esp
810037a1:	89 45 dc             	mov    %eax,-0x24(%ebp)
810037a4:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
810037a8:	0f 85 f1 00 00 00    	jne    8100389f <getopt_internal+0x7ab>
810037ae:	8b 45 20             	mov    0x20(%ebp),%eax
810037b1:	8b 40 08             	mov    0x8(%eax),%eax
810037b4:	85 c0                	test   %eax,%eax
810037b6:	0f 84 83 00 00 00    	je     8100383f <getopt_internal+0x74b>
810037bc:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810037c1:	8b 50 0c             	mov    0xc(%eax),%edx
810037c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810037c7:	8b 00                	mov    (%eax),%eax
810037c9:	83 ec 08             	sub    $0x8,%esp
810037cc:	52                   	push   %edx
810037cd:	50                   	push   %eax
810037ce:	e8 00 e4 ff ff       	call   81001bd3 <fputs>
810037d3:	83 c4 10             	add    $0x10,%esp
810037d6:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810037db:	8b 40 0c             	mov    0xc(%eax),%eax
810037de:	83 ec 08             	sub    $0x8,%esp
810037e1:	50                   	push   %eax
810037e2:	68 c4 88 00 81       	push   $0x810088c4
810037e7:	e8 e7 e3 ff ff       	call   81001bd3 <fputs>
810037ec:	83 c4 10             	add    $0x10,%esp
810037ef:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810037f4:	8b 50 0c             	mov    0xc(%eax),%edx
810037f7:	8b 45 20             	mov    0x20(%ebp),%eax
810037fa:	8b 40 04             	mov    0x4(%eax),%eax
810037fd:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003804:	8b 45 0c             	mov    0xc(%ebp),%eax
81003807:	01 c8                	add    %ecx,%eax
81003809:	8b 08                	mov    (%eax),%ecx
8100380b:	8b 45 20             	mov    0x20(%ebp),%eax
8100380e:	8b 40 10             	mov    0x10(%eax),%eax
81003811:	01 c8                	add    %ecx,%eax
81003813:	0f b6 00             	movzbl (%eax),%eax
81003816:	0f be c0             	movsbl %al,%eax
81003819:	83 ec 08             	sub    $0x8,%esp
8100381c:	52                   	push   %edx
8100381d:	50                   	push   %eax
8100381e:	e8 37 3d 00 00       	call   8100755a <fputc>
81003823:	83 c4 10             	add    $0x10,%esp
81003826:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100382b:	8b 40 0c             	mov    0xc(%eax),%eax
8100382e:	83 ec 08             	sub    $0x8,%esp
81003831:	50                   	push   %eax
81003832:	68 db 88 00 81       	push   $0x810088db
81003837:	e8 97 e3 ff ff       	call   81001bd3 <fputs>
8100383c:	83 c4 10             	add    $0x10,%esp
8100383f:	8b 45 20             	mov    0x20(%ebp),%eax
81003842:	8b 40 10             	mov    0x10(%eax),%eax
81003845:	8d 50 01             	lea    0x1(%eax),%edx
81003848:	8b 45 20             	mov    0x20(%ebp),%eax
8100384b:	89 50 10             	mov    %edx,0x10(%eax)
8100384e:	8b 45 20             	mov    0x20(%ebp),%eax
81003851:	8b 40 04             	mov    0x4(%eax),%eax
81003854:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100385b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100385e:	01 d0                	add    %edx,%eax
81003860:	8b 10                	mov    (%eax),%edx
81003862:	8b 45 20             	mov    0x20(%ebp),%eax
81003865:	8b 40 10             	mov    0x10(%eax),%eax
81003868:	01 d0                	add    %edx,%eax
8100386a:	0f b6 00             	movzbl (%eax),%eax
8100386d:	84 c0                	test   %al,%al
8100386f:	75 19                	jne    8100388a <getopt_internal+0x796>
81003871:	8b 45 20             	mov    0x20(%ebp),%eax
81003874:	8b 40 04             	mov    0x4(%eax),%eax
81003877:	8d 50 01             	lea    0x1(%eax),%edx
8100387a:	8b 45 20             	mov    0x20(%ebp),%eax
8100387d:	89 50 04             	mov    %edx,0x4(%eax)
81003880:	8b 45 20             	mov    0x20(%ebp),%eax
81003883:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
8100388a:	8b 45 20             	mov    0x20(%ebp),%eax
8100388d:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003894:	8b 45 20             	mov    0x20(%ebp),%eax
81003897:	8b 40 0c             	mov    0xc(%eax),%eax
8100389a:	e9 65 03 00 00       	jmp    81003c04 <getopt_internal+0xb10>
8100389f:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038a2:	83 c0 01             	add    $0x1,%eax
810038a5:	0f b6 00             	movzbl (%eax),%eax
810038a8:	3c 3a                	cmp    $0x3a,%al
810038aa:	75 1b                	jne    810038c7 <getopt_internal+0x7d3>
810038ac:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038af:	83 c0 02             	add    $0x2,%eax
810038b2:	0f b6 00             	movzbl (%eax),%eax
810038b5:	3c 3a                	cmp    $0x3a,%al
810038b7:	75 07                	jne    810038c0 <getopt_internal+0x7cc>
810038b9:	b8 02 00 00 00       	mov    $0x2,%eax
810038be:	eb 0c                	jmp    810038cc <getopt_internal+0x7d8>
810038c0:	b8 01 00 00 00       	mov    $0x1,%eax
810038c5:	eb 05                	jmp    810038cc <getopt_internal+0x7d8>
810038c7:	b8 00 00 00 00       	mov    $0x0,%eax
810038cc:	89 45 e0             	mov    %eax,-0x20(%ebp)
810038cf:	8b 45 20             	mov    0x20(%ebp),%eax
810038d2:	8b 40 04             	mov    0x4(%eax),%eax
810038d5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810038dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810038df:	01 d0                	add    %edx,%eax
810038e1:	8b 10                	mov    (%eax),%edx
810038e3:	8b 45 20             	mov    0x20(%ebp),%eax
810038e6:	8b 40 10             	mov    0x10(%eax),%eax
810038e9:	83 c0 01             	add    $0x1,%eax
810038ec:	01 d0                	add    %edx,%eax
810038ee:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038f1:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038f4:	0f b6 00             	movzbl (%eax),%eax
810038f7:	0f be d0             	movsbl %al,%edx
810038fa:	8b 45 20             	mov    0x20(%ebp),%eax
810038fd:	89 50 0c             	mov    %edx,0xc(%eax)
81003900:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003907:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
8100390b:	74 40                	je     8100394d <getopt_internal+0x859>
8100390d:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
81003911:	0f 85 b0 01 00 00    	jne    81003ac7 <getopt_internal+0x9d3>
81003917:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100391a:	0f b6 00             	movzbl (%eax),%eax
8100391d:	3c 3d                	cmp    $0x3d,%al
8100391f:	75 04                	jne    81003925 <getopt_internal+0x831>
81003921:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003925:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003928:	0f b6 00             	movzbl (%eax),%eax
8100392b:	84 c0                	test   %al,%al
8100392d:	74 05                	je     81003934 <getopt_internal+0x840>
8100392f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003932:	eb 05                	jmp    81003939 <getopt_internal+0x845>
81003934:	b8 00 00 00 00       	mov    $0x0,%eax
81003939:	8b 55 20             	mov    0x20(%ebp),%edx
8100393c:	89 02                	mov    %eax,(%edx)
8100393e:	8b 45 20             	mov    0x20(%ebp),%eax
81003941:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003948:	e9 d2 01 00 00       	jmp    81003b1f <getopt_internal+0xa2b>
8100394d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003950:	0f b6 00             	movzbl (%eax),%eax
81003953:	3c 3d                	cmp    $0x3d,%al
81003955:	75 04                	jne    8100395b <getopt_internal+0x867>
81003957:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
8100395b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100395e:	0f b6 00             	movzbl (%eax),%eax
81003961:	84 c0                	test   %al,%al
81003963:	74 17                	je     8100397c <getopt_internal+0x888>
81003965:	8b 45 20             	mov    0x20(%ebp),%eax
81003968:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100396b:	89 10                	mov    %edx,(%eax)
8100396d:	8b 45 20             	mov    0x20(%ebp),%eax
81003970:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003977:	e9 a3 01 00 00       	jmp    81003b1f <getopt_internal+0xa2b>
8100397c:	8b 45 20             	mov    0x20(%ebp),%eax
8100397f:	8b 40 04             	mov    0x4(%eax),%eax
81003982:	83 c0 01             	add    $0x1,%eax
81003985:	39 45 08             	cmp    %eax,0x8(%ebp)
81003988:	0f 8f 0a 01 00 00    	jg     81003a98 <getopt_internal+0x9a4>
8100398e:	8b 45 20             	mov    0x20(%ebp),%eax
81003991:	8b 40 08             	mov    0x8(%eax),%eax
81003994:	85 c0                	test   %eax,%eax
81003996:	0f 84 d3 00 00 00    	je     81003a6f <getopt_internal+0x97b>
8100399c:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810039a1:	8b 50 0c             	mov    0xc(%eax),%edx
810039a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810039a7:	8b 00                	mov    (%eax),%eax
810039a9:	83 ec 08             	sub    $0x8,%esp
810039ac:	52                   	push   %edx
810039ad:	50                   	push   %eax
810039ae:	e8 20 e2 ff ff       	call   81001bd3 <fputs>
810039b3:	83 c4 10             	add    $0x10,%esp
810039b6:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810039bb:	8b 40 0c             	mov    0xc(%eax),%eax
810039be:	83 ec 08             	sub    $0x8,%esp
810039c1:	50                   	push   %eax
810039c2:	68 e0 88 00 81       	push   $0x810088e0
810039c7:	e8 07 e2 ff ff       	call   81001bd3 <fputs>
810039cc:	83 c4 10             	add    $0x10,%esp
810039cf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810039d3:	78 54                	js     81003a29 <getopt_internal+0x935>
810039d5:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810039da:	8b 40 0c             	mov    0xc(%eax),%eax
810039dd:	83 ec 08             	sub    $0x8,%esp
810039e0:	50                   	push   %eax
810039e1:	6a 2d                	push   $0x2d
810039e3:	e8 72 3b 00 00       	call   8100755a <fputc>
810039e8:	83 c4 10             	add    $0x10,%esp
810039eb:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810039f0:	8b 50 0c             	mov    0xc(%eax),%edx
810039f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810039f6:	c1 e0 04             	shl    $0x4,%eax
810039f9:	89 c1                	mov    %eax,%ecx
810039fb:	8b 45 14             	mov    0x14(%ebp),%eax
810039fe:	01 c8                	add    %ecx,%eax
81003a00:	8b 00                	mov    (%eax),%eax
81003a02:	83 ec 08             	sub    $0x8,%esp
81003a05:	52                   	push   %edx
81003a06:	50                   	push   %eax
81003a07:	e8 c7 e1 ff ff       	call   81001bd3 <fputs>
81003a0c:	83 c4 10             	add    $0x10,%esp
81003a0f:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003a13:	74 07                	je     81003a1c <getopt_internal+0x928>
81003a15:	ba 3a 00 00 00       	mov    $0x3a,%edx
81003a1a:	eb 05                	jmp    81003a21 <getopt_internal+0x92d>
81003a1c:	ba 3f 00 00 00       	mov    $0x3f,%edx
81003a21:	8b 45 20             	mov    0x20(%ebp),%eax
81003a24:	89 50 0c             	mov    %edx,0xc(%eax)
81003a27:	eb 2d                	jmp    81003a56 <getopt_internal+0x962>
81003a29:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81003a2e:	8b 50 0c             	mov    0xc(%eax),%edx
81003a31:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a34:	0f b6 00             	movzbl (%eax),%eax
81003a37:	0f be c0             	movsbl %al,%eax
81003a3a:	83 ec 08             	sub    $0x8,%esp
81003a3d:	52                   	push   %edx
81003a3e:	50                   	push   %eax
81003a3f:	e8 16 3b 00 00       	call   8100755a <fputc>
81003a44:	83 c4 10             	add    $0x10,%esp
81003a47:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a4a:	0f b6 00             	movzbl (%eax),%eax
81003a4d:	0f be d0             	movsbl %al,%edx
81003a50:	8b 45 20             	mov    0x20(%ebp),%eax
81003a53:	89 50 0c             	mov    %edx,0xc(%eax)
81003a56:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81003a5b:	8b 40 0c             	mov    0xc(%eax),%eax
81003a5e:	83 ec 08             	sub    $0x8,%esp
81003a61:	50                   	push   %eax
81003a62:	68 db 88 00 81       	push   $0x810088db
81003a67:	e8 67 e1 ff ff       	call   81001bd3 <fputs>
81003a6c:	83 c4 10             	add    $0x10,%esp
81003a6f:	8b 45 20             	mov    0x20(%ebp),%eax
81003a72:	8b 40 04             	mov    0x4(%eax),%eax
81003a75:	8d 50 01             	lea    0x1(%eax),%edx
81003a78:	8b 45 20             	mov    0x20(%ebp),%eax
81003a7b:	89 50 04             	mov    %edx,0x4(%eax)
81003a7e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003a82:	74 0a                	je     81003a8e <getopt_internal+0x99a>
81003a84:	b8 3a 00 00 00       	mov    $0x3a,%eax
81003a89:	e9 76 01 00 00       	jmp    81003c04 <getopt_internal+0xb10>
81003a8e:	b8 3f 00 00 00       	mov    $0x3f,%eax
81003a93:	e9 6c 01 00 00       	jmp    81003c04 <getopt_internal+0xb10>
81003a98:	8b 45 20             	mov    0x20(%ebp),%eax
81003a9b:	8b 40 04             	mov    0x4(%eax),%eax
81003a9e:	83 c0 01             	add    $0x1,%eax
81003aa1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003aa8:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aab:	01 d0                	add    %edx,%eax
81003aad:	8b 10                	mov    (%eax),%edx
81003aaf:	8b 45 20             	mov    0x20(%ebp),%eax
81003ab2:	89 10                	mov    %edx,(%eax)
81003ab4:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003abb:	8b 45 20             	mov    0x20(%ebp),%eax
81003abe:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003ac5:	eb 58                	jmp    81003b1f <getopt_internal+0xa2b>
81003ac7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003acb:	79 3e                	jns    81003b0b <getopt_internal+0xa17>
81003acd:	8b 45 20             	mov    0x20(%ebp),%eax
81003ad0:	8b 40 10             	mov    0x10(%eax),%eax
81003ad3:	8d 50 01             	lea    0x1(%eax),%edx
81003ad6:	8b 45 20             	mov    0x20(%ebp),%eax
81003ad9:	89 50 10             	mov    %edx,0x10(%eax)
81003adc:	8b 45 20             	mov    0x20(%ebp),%eax
81003adf:	8b 40 04             	mov    0x4(%eax),%eax
81003ae2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003ae9:	8b 45 0c             	mov    0xc(%ebp),%eax
81003aec:	01 d0                	add    %edx,%eax
81003aee:	8b 10                	mov    (%eax),%edx
81003af0:	8b 45 20             	mov    0x20(%ebp),%eax
81003af3:	8b 40 10             	mov    0x10(%eax),%eax
81003af6:	01 d0                	add    %edx,%eax
81003af8:	0f b6 00             	movzbl (%eax),%eax
81003afb:	84 c0                	test   %al,%al
81003afd:	75 16                	jne    81003b15 <getopt_internal+0xa21>
81003aff:	8b 45 20             	mov    0x20(%ebp),%eax
81003b02:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003b09:	eb 0a                	jmp    81003b15 <getopt_internal+0xa21>
81003b0b:	8b 45 20             	mov    0x20(%ebp),%eax
81003b0e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003b15:	8b 45 20             	mov    0x20(%ebp),%eax
81003b18:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003b1e:	90                   	nop
81003b1f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003b23:	75 57                	jne    81003b7c <getopt_internal+0xa88>
81003b25:	8b 45 20             	mov    0x20(%ebp),%eax
81003b28:	8b 40 10             	mov    0x10(%eax),%eax
81003b2b:	83 f8 01             	cmp    $0x1,%eax
81003b2e:	75 4c                	jne    81003b7c <getopt_internal+0xa88>
81003b30:	8b 45 20             	mov    0x20(%ebp),%eax
81003b33:	8b 40 18             	mov    0x18(%eax),%eax
81003b36:	85 c0                	test   %eax,%eax
81003b38:	74 42                	je     81003b7c <getopt_internal+0xa88>
81003b3a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b3d:	8d 48 01             	lea    0x1(%eax),%ecx
81003b40:	8b 45 20             	mov    0x20(%ebp),%eax
81003b43:	8b 40 18             	mov    0x18(%eax),%eax
81003b46:	8b 55 20             	mov    0x20(%ebp),%edx
81003b49:	8b 52 14             	mov    0x14(%edx),%edx
81003b4c:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81003b53:	8b 55 0c             	mov    0xc(%ebp),%edx
81003b56:	01 da                	add    %ebx,%edx
81003b58:	83 ec 04             	sub    $0x4,%esp
81003b5b:	51                   	push   %ecx
81003b5c:	50                   	push   %eax
81003b5d:	52                   	push   %edx
81003b5e:	e8 7f f4 ff ff       	call   81002fe2 <permute>
81003b63:	83 c4 10             	add    $0x10,%esp
81003b66:	8b 45 20             	mov    0x20(%ebp),%eax
81003b69:	8b 40 14             	mov    0x14(%eax),%eax
81003b6c:	8d 50 01             	lea    0x1(%eax),%edx
81003b6f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b72:	01 c2                	add    %eax,%edx
81003b74:	8b 45 20             	mov    0x20(%ebp),%eax
81003b77:	89 50 04             	mov    %edx,0x4(%eax)
81003b7a:	eb 1f                	jmp    81003b9b <getopt_internal+0xaa7>
81003b7c:	8b 45 20             	mov    0x20(%ebp),%eax
81003b7f:	8b 40 10             	mov    0x10(%eax),%eax
81003b82:	83 f8 01             	cmp    $0x1,%eax
81003b85:	75 14                	jne    81003b9b <getopt_internal+0xaa7>
81003b87:	8b 45 20             	mov    0x20(%ebp),%eax
81003b8a:	8b 40 04             	mov    0x4(%eax),%eax
81003b8d:	8d 50 01             	lea    0x1(%eax),%edx
81003b90:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b93:	01 c2                	add    %eax,%edx
81003b95:	8b 45 20             	mov    0x20(%ebp),%eax
81003b98:	89 50 04             	mov    %edx,0x4(%eax)
81003b9b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003b9f:	78 5d                	js     81003bfe <getopt_internal+0xb0a>
81003ba1:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003ba5:	74 08                	je     81003baf <getopt_internal+0xabb>
81003ba7:	8b 45 18             	mov    0x18(%ebp),%eax
81003baa:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003bad:	89 10                	mov    %edx,(%eax)
81003baf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bb2:	c1 e0 04             	shl    $0x4,%eax
81003bb5:	89 c2                	mov    %eax,%edx
81003bb7:	8b 45 14             	mov    0x14(%ebp),%eax
81003bba:	01 d0                	add    %edx,%eax
81003bbc:	8b 40 08             	mov    0x8(%eax),%eax
81003bbf:	85 c0                	test   %eax,%eax
81003bc1:	74 29                	je     81003bec <getopt_internal+0xaf8>
81003bc3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bc6:	c1 e0 04             	shl    $0x4,%eax
81003bc9:	89 c2                	mov    %eax,%edx
81003bcb:	8b 45 14             	mov    0x14(%ebp),%eax
81003bce:	01 c2                	add    %eax,%edx
81003bd0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bd3:	c1 e0 04             	shl    $0x4,%eax
81003bd6:	89 c1                	mov    %eax,%ecx
81003bd8:	8b 45 14             	mov    0x14(%ebp),%eax
81003bdb:	01 c8                	add    %ecx,%eax
81003bdd:	8b 40 08             	mov    0x8(%eax),%eax
81003be0:	8b 52 0c             	mov    0xc(%edx),%edx
81003be3:	89 10                	mov    %edx,(%eax)
81003be5:	b8 00 00 00 00       	mov    $0x0,%eax
81003bea:	eb 18                	jmp    81003c04 <getopt_internal+0xb10>
81003bec:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bef:	c1 e0 04             	shl    $0x4,%eax
81003bf2:	89 c2                	mov    %eax,%edx
81003bf4:	8b 45 14             	mov    0x14(%ebp),%eax
81003bf7:	01 d0                	add    %edx,%eax
81003bf9:	8b 40 0c             	mov    0xc(%eax),%eax
81003bfc:	eb 06                	jmp    81003c04 <getopt_internal+0xb10>
81003bfe:	8b 45 20             	mov    0x20(%ebp),%eax
81003c01:	8b 40 0c             	mov    0xc(%eax),%eax
81003c04:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003c07:	c9                   	leave  
81003c08:	c3                   	ret    

81003c09 <getopt>:
81003c09:	55                   	push   %ebp
81003c0a:	89 e5                	mov    %esp,%ebp
81003c0c:	83 ec 28             	sub    $0x28,%esp
81003c0f:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c12:	50                   	push   %eax
81003c13:	e8 31 f4 ff ff       	call   81003049 <read_globals>
81003c18:	83 c4 04             	add    $0x4,%esp
81003c1b:	83 ec 04             	sub    $0x4,%esp
81003c1e:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c21:	50                   	push   %eax
81003c22:	6a 00                	push   $0x0
81003c24:	6a 00                	push   $0x0
81003c26:	6a 00                	push   $0x0
81003c28:	ff 75 10             	pushl  0x10(%ebp)
81003c2b:	ff 75 0c             	pushl  0xc(%ebp)
81003c2e:	ff 75 08             	pushl  0x8(%ebp)
81003c31:	e8 be f4 ff ff       	call   810030f4 <getopt_internal>
81003c36:	83 c4 20             	add    $0x20,%esp
81003c39:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c3c:	83 ec 0c             	sub    $0xc,%esp
81003c3f:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c42:	50                   	push   %eax
81003c43:	e8 5a f4 ff ff       	call   810030a2 <write_globals>
81003c48:	83 c4 10             	add    $0x10,%esp
81003c4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c4e:	c9                   	leave  
81003c4f:	c3                   	ret    

81003c50 <getopt_long>:
81003c50:	55                   	push   %ebp
81003c51:	89 e5                	mov    %esp,%ebp
81003c53:	83 ec 28             	sub    $0x28,%esp
81003c56:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c59:	50                   	push   %eax
81003c5a:	e8 ea f3 ff ff       	call   81003049 <read_globals>
81003c5f:	83 c4 04             	add    $0x4,%esp
81003c62:	83 ec 04             	sub    $0x4,%esp
81003c65:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c68:	50                   	push   %eax
81003c69:	6a 00                	push   $0x0
81003c6b:	ff 75 18             	pushl  0x18(%ebp)
81003c6e:	ff 75 14             	pushl  0x14(%ebp)
81003c71:	ff 75 10             	pushl  0x10(%ebp)
81003c74:	ff 75 0c             	pushl  0xc(%ebp)
81003c77:	ff 75 08             	pushl  0x8(%ebp)
81003c7a:	e8 75 f4 ff ff       	call   810030f4 <getopt_internal>
81003c7f:	83 c4 20             	add    $0x20,%esp
81003c82:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c85:	83 ec 0c             	sub    $0xc,%esp
81003c88:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c8b:	50                   	push   %eax
81003c8c:	e8 11 f4 ff ff       	call   810030a2 <write_globals>
81003c91:	83 c4 10             	add    $0x10,%esp
81003c94:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c97:	c9                   	leave  
81003c98:	c3                   	ret    

81003c99 <getopt_long_only>:
81003c99:	55                   	push   %ebp
81003c9a:	89 e5                	mov    %esp,%ebp
81003c9c:	83 ec 28             	sub    $0x28,%esp
81003c9f:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003ca2:	50                   	push   %eax
81003ca3:	e8 a1 f3 ff ff       	call   81003049 <read_globals>
81003ca8:	83 c4 04             	add    $0x4,%esp
81003cab:	83 ec 04             	sub    $0x4,%esp
81003cae:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003cb1:	50                   	push   %eax
81003cb2:	6a 01                	push   $0x1
81003cb4:	ff 75 18             	pushl  0x18(%ebp)
81003cb7:	ff 75 14             	pushl  0x14(%ebp)
81003cba:	ff 75 10             	pushl  0x10(%ebp)
81003cbd:	ff 75 0c             	pushl  0xc(%ebp)
81003cc0:	ff 75 08             	pushl  0x8(%ebp)
81003cc3:	e8 2c f4 ff ff       	call   810030f4 <getopt_internal>
81003cc8:	83 c4 20             	add    $0x20,%esp
81003ccb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003cce:	83 ec 0c             	sub    $0xc,%esp
81003cd1:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003cd4:	50                   	push   %eax
81003cd5:	e8 c8 f3 ff ff       	call   810030a2 <write_globals>
81003cda:	83 c4 10             	add    $0x10,%esp
81003cdd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ce0:	c9                   	leave  
81003ce1:	c3                   	ret    

81003ce2 <__getopt_r>:
81003ce2:	55                   	push   %ebp
81003ce3:	89 e5                	mov    %esp,%ebp
81003ce5:	83 ec 08             	sub    $0x8,%esp
81003ce8:	83 ec 04             	sub    $0x4,%esp
81003ceb:	ff 75 14             	pushl  0x14(%ebp)
81003cee:	6a 00                	push   $0x0
81003cf0:	6a 00                	push   $0x0
81003cf2:	6a 00                	push   $0x0
81003cf4:	ff 75 10             	pushl  0x10(%ebp)
81003cf7:	ff 75 0c             	pushl  0xc(%ebp)
81003cfa:	ff 75 08             	pushl  0x8(%ebp)
81003cfd:	e8 f2 f3 ff ff       	call   810030f4 <getopt_internal>
81003d02:	83 c4 20             	add    $0x20,%esp
81003d05:	c9                   	leave  
81003d06:	c3                   	ret    

81003d07 <__getopt_long_r>:
81003d07:	55                   	push   %ebp
81003d08:	89 e5                	mov    %esp,%ebp
81003d0a:	83 ec 08             	sub    $0x8,%esp
81003d0d:	83 ec 04             	sub    $0x4,%esp
81003d10:	ff 75 1c             	pushl  0x1c(%ebp)
81003d13:	6a 00                	push   $0x0
81003d15:	ff 75 18             	pushl  0x18(%ebp)
81003d18:	ff 75 14             	pushl  0x14(%ebp)
81003d1b:	ff 75 10             	pushl  0x10(%ebp)
81003d1e:	ff 75 0c             	pushl  0xc(%ebp)
81003d21:	ff 75 08             	pushl  0x8(%ebp)
81003d24:	e8 cb f3 ff ff       	call   810030f4 <getopt_internal>
81003d29:	83 c4 20             	add    $0x20,%esp
81003d2c:	c9                   	leave  
81003d2d:	c3                   	ret    

81003d2e <__getopt_long_only_r>:
81003d2e:	55                   	push   %ebp
81003d2f:	89 e5                	mov    %esp,%ebp
81003d31:	83 ec 08             	sub    $0x8,%esp
81003d34:	83 ec 04             	sub    $0x4,%esp
81003d37:	ff 75 1c             	pushl  0x1c(%ebp)
81003d3a:	6a 01                	push   $0x1
81003d3c:	ff 75 18             	pushl  0x18(%ebp)
81003d3f:	ff 75 14             	pushl  0x14(%ebp)
81003d42:	ff 75 10             	pushl  0x10(%ebp)
81003d45:	ff 75 0c             	pushl  0xc(%ebp)
81003d48:	ff 75 08             	pushl  0x8(%ebp)
81003d4b:	e8 a4 f3 ff ff       	call   810030f4 <getopt_internal>
81003d50:	83 c4 20             	add    $0x20,%esp
81003d53:	c9                   	leave  
81003d54:	c3                   	ret    

81003d55 <__smakebuf_r>:
81003d55:	55                   	push   %ebp
81003d56:	89 e5                	mov    %esp,%ebp
81003d58:	56                   	push   %esi
81003d59:	53                   	push   %ebx
81003d5a:	83 ec 10             	sub    $0x10,%esp
81003d5d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003d60:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003d64:	98                   	cwtl   
81003d65:	83 e0 02             	and    $0x2,%eax
81003d68:	85 c0                	test   %eax,%eax
81003d6a:	74 16                	je     81003d82 <__smakebuf_r+0x2d>
81003d6c:	8d 43 43             	lea    0x43(%ebx),%eax
81003d6f:	89 03                	mov    %eax,(%ebx)
81003d71:	8b 03                	mov    (%ebx),%eax
81003d73:	89 43 10             	mov    %eax,0x10(%ebx)
81003d76:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003d7d:	e9 b9 00 00 00       	jmp    81003e3b <__smakebuf_r+0xe6>
81003d82:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003d85:	50                   	push   %eax
81003d86:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003d89:	50                   	push   %eax
81003d8a:	53                   	push   %ebx
81003d8b:	ff 75 08             	pushl  0x8(%ebp)
81003d8e:	e8 af 00 00 00       	call   81003e42 <__swhatbuf_r>
81003d93:	83 c4 10             	add    $0x10,%esp
81003d96:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d99:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d9c:	83 ec 08             	sub    $0x8,%esp
81003d9f:	50                   	push   %eax
81003da0:	ff 75 08             	pushl  0x8(%ebp)
81003da3:	e8 f9 03 00 00       	call   810041a1 <_malloc_r>
81003da8:	83 c4 10             	add    $0x10,%esp
81003dab:	89 c6                	mov    %eax,%esi
81003dad:	85 f6                	test   %esi,%esi
81003daf:	75 2f                	jne    81003de0 <__smakebuf_r+0x8b>
81003db1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003db5:	98                   	cwtl   
81003db6:	25 00 02 00 00       	and    $0x200,%eax
81003dbb:	85 c0                	test   %eax,%eax
81003dbd:	75 7c                	jne    81003e3b <__smakebuf_r+0xe6>
81003dbf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003dc3:	83 e0 fc             	and    $0xfffffffc,%eax
81003dc6:	83 c8 02             	or     $0x2,%eax
81003dc9:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003dcd:	8d 43 43             	lea    0x43(%ebx),%eax
81003dd0:	89 03                	mov    %eax,(%ebx)
81003dd2:	8b 03                	mov    (%ebx),%eax
81003dd4:	89 43 10             	mov    %eax,0x10(%ebx)
81003dd7:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003dde:	eb 5b                	jmp    81003e3b <__smakebuf_r+0xe6>
81003de0:	8b 45 08             	mov    0x8(%ebp),%eax
81003de3:	c7 40 3c 9c 18 00 81 	movl   $0x8100189c,0x3c(%eax)
81003dea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003dee:	0c 80                	or     $0x80,%al
81003df0:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003df4:	89 33                	mov    %esi,(%ebx)
81003df6:	8b 03                	mov    (%ebx),%eax
81003df8:	89 43 10             	mov    %eax,0x10(%ebx)
81003dfb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003dfe:	89 43 14             	mov    %eax,0x14(%ebx)
81003e01:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003e04:	85 c0                	test   %eax,%eax
81003e06:	74 26                	je     81003e2e <__smakebuf_r+0xd9>
81003e08:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003e0c:	98                   	cwtl   
81003e0d:	83 ec 08             	sub    $0x8,%esp
81003e10:	50                   	push   %eax
81003e11:	ff 75 08             	pushl  0x8(%ebp)
81003e14:	e8 8e 3a 00 00       	call   810078a7 <_isatty_r>
81003e19:	83 c4 10             	add    $0x10,%esp
81003e1c:	85 c0                	test   %eax,%eax
81003e1e:	74 0e                	je     81003e2e <__smakebuf_r+0xd9>
81003e20:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003e24:	83 e0 fc             	and    $0xfffffffc,%eax
81003e27:	83 c8 01             	or     $0x1,%eax
81003e2a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e2e:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003e32:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e35:	09 d0                	or     %edx,%eax
81003e37:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e3b:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003e3e:	5b                   	pop    %ebx
81003e3f:	5e                   	pop    %esi
81003e40:	5d                   	pop    %ebp
81003e41:	c3                   	ret    

81003e42 <__swhatbuf_r>:
81003e42:	55                   	push   %ebp
81003e43:	89 e5                	mov    %esp,%ebp
81003e45:	83 ec 58             	sub    $0x58,%esp
81003e48:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003e4f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e52:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e56:	66 85 c0             	test   %ax,%ax
81003e59:	78 1f                	js     81003e7a <__swhatbuf_r+0x38>
81003e5b:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e5e:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e62:	98                   	cwtl   
81003e63:	83 ec 04             	sub    $0x4,%esp
81003e66:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003e69:	52                   	push   %edx
81003e6a:	50                   	push   %eax
81003e6b:	ff 75 08             	pushl  0x8(%ebp)
81003e6e:	e8 63 ea ff ff       	call   810028d6 <_fstat_r>
81003e73:	83 c4 10             	add    $0x10,%esp
81003e76:	85 c0                	test   %eax,%eax
81003e78:	79 35                	jns    81003eaf <__swhatbuf_r+0x6d>
81003e7a:	8b 45 14             	mov    0x14(%ebp),%eax
81003e7d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003e83:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e86:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003e8a:	98                   	cwtl   
81003e8b:	25 80 00 00 00       	and    $0x80,%eax
81003e90:	85 c0                	test   %eax,%eax
81003e92:	74 0b                	je     81003e9f <__swhatbuf_r+0x5d>
81003e94:	8b 45 10             	mov    0x10(%ebp),%eax
81003e97:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003e9d:	eb 09                	jmp    81003ea8 <__swhatbuf_r+0x66>
81003e9f:	8b 45 10             	mov    0x10(%ebp),%eax
81003ea2:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003ea8:	b8 00 00 00 00       	mov    $0x0,%eax
81003ead:	eb 24                	jmp    81003ed3 <__swhatbuf_r+0x91>
81003eaf:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003eb2:	25 00 f0 00 00       	and    $0xf000,%eax
81003eb7:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003ebc:	0f 94 c0             	sete   %al
81003ebf:	0f b6 d0             	movzbl %al,%edx
81003ec2:	8b 45 14             	mov    0x14(%ebp),%eax
81003ec5:	89 10                	mov    %edx,(%eax)
81003ec7:	8b 45 10             	mov    0x10(%ebp),%eax
81003eca:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003ed0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ed3:	c9                   	leave  
81003ed4:	c3                   	ret    

81003ed5 <malloc>:
81003ed5:	55                   	push   %ebp
81003ed6:	89 e5                	mov    %esp,%ebp
81003ed8:	83 ec 08             	sub    $0x8,%esp
81003edb:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81003ee0:	83 ec 08             	sub    $0x8,%esp
81003ee3:	ff 75 08             	pushl  0x8(%ebp)
81003ee6:	50                   	push   %eax
81003ee7:	e8 b5 02 00 00       	call   810041a1 <_malloc_r>
81003eec:	83 c4 10             	add    $0x10,%esp
81003eef:	c9                   	leave  
81003ef0:	c3                   	ret    

81003ef1 <free>:
81003ef1:	55                   	push   %ebp
81003ef2:	89 e5                	mov    %esp,%ebp
81003ef4:	83 ec 08             	sub    $0x8,%esp
81003ef7:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81003efc:	83 ec 08             	sub    $0x8,%esp
81003eff:	ff 75 08             	pushl  0x8(%ebp)
81003f02:	50                   	push   %eax
81003f03:	e8 84 df ff ff       	call   81001e8c <_free_r>
81003f08:	83 c4 10             	add    $0x10,%esp
81003f0b:	90                   	nop
81003f0c:	c9                   	leave  
81003f0d:	c3                   	ret    

81003f0e <malloc_extend_top>:
81003f0e:	55                   	push   %ebp
81003f0f:	89 e5                	mov    %esp,%ebp
81003f11:	83 ec 38             	sub    $0x38,%esp
81003f14:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003f1b:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81003f20:	8b 40 08             	mov    0x8(%eax),%eax
81003f23:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003f26:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003f29:	8b 40 04             	mov    0x4(%eax),%eax
81003f2c:	83 e0 fc             	and    $0xfffffffc,%eax
81003f2f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f32:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003f35:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f38:	01 d0                	add    %edx,%eax
81003f3a:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003f3d:	8b 15 c0 9b 00 81    	mov    0x81009bc0,%edx
81003f43:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f46:	01 d0                	add    %edx,%eax
81003f48:	83 c0 10             	add    $0x10,%eax
81003f4b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f4e:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003f55:	a1 ec 94 00 81       	mov    0x810094ec,%eax
81003f5a:	83 f8 ff             	cmp    $0xffffffff,%eax
81003f5d:	74 15                	je     81003f74 <malloc_extend_top+0x66>
81003f5f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f62:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f65:	01 d0                	add    %edx,%eax
81003f67:	8d 50 ff             	lea    -0x1(%eax),%edx
81003f6a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003f6d:	f7 d8                	neg    %eax
81003f6f:	21 d0                	and    %edx,%eax
81003f71:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f74:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f77:	83 ec 08             	sub    $0x8,%esp
81003f7a:	50                   	push   %eax
81003f7b:	ff 75 08             	pushl  0x8(%ebp)
81003f7e:	e8 a6 26 00 00       	call   81006629 <_sbrk_r>
81003f83:	83 c4 10             	add    $0x10,%esp
81003f86:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f89:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003f8d:	0f 84 0b 02 00 00    	je     8100419e <malloc_extend_top+0x290>
81003f93:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f96:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003f99:	73 0e                	jae    81003fa9 <malloc_extend_top+0x9b>
81003f9b:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81003fa0:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003fa3:	0f 85 f5 01 00 00    	jne    8100419e <malloc_extend_top+0x290>
81003fa9:	a1 e0 9b 00 81       	mov    0x81009be0,%eax
81003fae:	89 c2                	mov    %eax,%edx
81003fb0:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003fb3:	01 d0                	add    %edx,%eax
81003fb5:	a3 e0 9b 00 81       	mov    %eax,0x81009be0
81003fba:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fbd:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003fc0:	75 30                	jne    81003ff2 <malloc_extend_top+0xe4>
81003fc2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003fc5:	8d 50 ff             	lea    -0x1(%eax),%edx
81003fc8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003fcb:	21 d0                	and    %edx,%eax
81003fcd:	85 c0                	test   %eax,%eax
81003fcf:	75 21                	jne    81003ff2 <malloc_extend_top+0xe4>
81003fd1:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003fd4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fd7:	01 d0                	add    %edx,%eax
81003fd9:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003fdc:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81003fe1:	8b 40 08             	mov    0x8(%eax),%eax
81003fe4:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003fe7:	83 ca 01             	or     $0x1,%edx
81003fea:	89 50 04             	mov    %edx,0x4(%eax)
81003fed:	e9 76 01 00 00       	jmp    81004168 <malloc_extend_top+0x25a>
81003ff2:	a1 ec 94 00 81       	mov    0x810094ec,%eax
81003ff7:	83 f8 ff             	cmp    $0xffffffff,%eax
81003ffa:	75 0a                	jne    81004006 <malloc_extend_top+0xf8>
81003ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fff:	a3 ec 94 00 81       	mov    %eax,0x810094ec
81004004:	eb 13                	jmp    81004019 <malloc_extend_top+0x10b>
81004006:	8b 15 e0 9b 00 81    	mov    0x81009be0,%edx
8100400c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100400f:	2b 45 d8             	sub    -0x28(%ebp),%eax
81004012:	01 d0                	add    %edx,%eax
81004014:	a3 e0 9b 00 81       	mov    %eax,0x81009be0
81004019:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100401c:	83 c0 08             	add    $0x8,%eax
8100401f:	83 e0 07             	and    $0x7,%eax
81004022:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004025:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81004029:	74 13                	je     8100403e <malloc_extend_top+0x130>
8100402b:	b8 08 00 00 00       	mov    $0x8,%eax
81004030:	2b 45 cc             	sub    -0x34(%ebp),%eax
81004033:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004036:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004039:	01 45 f4             	add    %eax,-0xc(%ebp)
8100403c:	eb 07                	jmp    81004045 <malloc_extend_top+0x137>
8100403e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004045:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004048:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100404b:	01 d0                	add    %edx,%eax
8100404d:	89 c2                	mov    %eax,%edx
8100404f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004052:	83 e8 01             	sub    $0x1,%eax
81004055:	21 c2                	and    %eax,%edx
81004057:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100405a:	29 d0                	sub    %edx,%eax
8100405c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100405f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004062:	83 e8 01             	sub    $0x1,%eax
81004065:	21 45 f0             	and    %eax,-0x10(%ebp)
81004068:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100406b:	83 ec 08             	sub    $0x8,%esp
8100406e:	50                   	push   %eax
8100406f:	ff 75 08             	pushl  0x8(%ebp)
81004072:	e8 b2 25 00 00       	call   81006629 <_sbrk_r>
81004077:	83 c4 10             	add    $0x10,%esp
8100407a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100407d:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81004081:	75 28                	jne    810040ab <malloc_extend_top+0x19d>
81004083:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100408a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81004091:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004094:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004097:	01 d0                	add    %edx,%eax
81004099:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100409c:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
810040a0:	74 09                	je     810040ab <malloc_extend_top+0x19d>
810040a2:	8b 45 cc             	mov    -0x34(%ebp),%eax
810040a5:	83 e8 08             	sub    $0x8,%eax
810040a8:	01 45 ec             	add    %eax,-0x14(%ebp)
810040ab:	a1 e0 9b 00 81       	mov    0x81009be0,%eax
810040b0:	89 c2                	mov    %eax,%edx
810040b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040b5:	01 d0                	add    %edx,%eax
810040b7:	a3 e0 9b 00 81       	mov    %eax,0x81009be0
810040bc:	ba e0 90 00 81       	mov    $0x810090e0,%edx
810040c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040c4:	89 42 08             	mov    %eax,0x8(%edx)
810040c7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040ca:	2b 45 f4             	sub    -0xc(%ebp),%eax
810040cd:	89 c2                	mov    %eax,%edx
810040cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040d2:	01 d0                	add    %edx,%eax
810040d4:	89 45 d0             	mov    %eax,-0x30(%ebp)
810040d7:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810040dc:	8b 40 08             	mov    0x8(%eax),%eax
810040df:	8b 55 d0             	mov    -0x30(%ebp),%edx
810040e2:	83 ca 01             	or     $0x1,%edx
810040e5:	89 50 04             	mov    %edx,0x4(%eax)
810040e8:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810040ed:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810040f0:	74 76                	je     81004168 <malloc_extend_top+0x25a>
810040f2:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810040f6:	77 14                	ja     8100410c <malloc_extend_top+0x1fe>
810040f8:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810040fd:	8b 40 08             	mov    0x8(%eax),%eax
81004100:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81004107:	e9 93 00 00 00       	jmp    8100419f <malloc_extend_top+0x291>
8100410c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100410f:	83 e8 0c             	sub    $0xc,%eax
81004112:	83 e0 f8             	and    $0xfffffff8,%eax
81004115:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004118:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100411b:	8b 40 04             	mov    0x4(%eax),%eax
8100411e:	83 e0 01             	and    $0x1,%eax
81004121:	0b 45 dc             	or     -0x24(%ebp),%eax
81004124:	89 c2                	mov    %eax,%edx
81004126:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004129:	89 50 04             	mov    %edx,0x4(%eax)
8100412c:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100412f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004132:	01 d0                	add    %edx,%eax
81004134:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100413b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100413e:	8d 50 04             	lea    0x4(%eax),%edx
81004141:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004144:	01 d0                	add    %edx,%eax
81004146:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100414d:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81004151:	76 15                	jbe    81004168 <malloc_extend_top+0x25a>
81004153:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004156:	83 c0 08             	add    $0x8,%eax
81004159:	83 ec 08             	sub    $0x8,%esp
8100415c:	50                   	push   %eax
8100415d:	ff 75 08             	pushl  0x8(%ebp)
81004160:	e8 27 dd ff ff       	call   81001e8c <_free_r>
81004165:	83 c4 10             	add    $0x10,%esp
81004168:	a1 e0 9b 00 81       	mov    0x81009be0,%eax
8100416d:	89 c2                	mov    %eax,%edx
8100416f:	a1 c4 9b 00 81       	mov    0x81009bc4,%eax
81004174:	39 c2                	cmp    %eax,%edx
81004176:	76 0a                	jbe    81004182 <malloc_extend_top+0x274>
81004178:	a1 e0 9b 00 81       	mov    0x81009be0,%eax
8100417d:	a3 c4 9b 00 81       	mov    %eax,0x81009bc4
81004182:	a1 e0 9b 00 81       	mov    0x81009be0,%eax
81004187:	89 c2                	mov    %eax,%edx
81004189:	a1 c8 9b 00 81       	mov    0x81009bc8,%eax
8100418e:	39 c2                	cmp    %eax,%edx
81004190:	76 0d                	jbe    8100419f <malloc_extend_top+0x291>
81004192:	a1 e0 9b 00 81       	mov    0x81009be0,%eax
81004197:	a3 c8 9b 00 81       	mov    %eax,0x81009bc8
8100419c:	eb 01                	jmp    8100419f <malloc_extend_top+0x291>
8100419e:	90                   	nop
8100419f:	c9                   	leave  
810041a0:	c3                   	ret    

810041a1 <_malloc_r>:
810041a1:	55                   	push   %ebp
810041a2:	89 e5                	mov    %esp,%ebp
810041a4:	53                   	push   %ebx
810041a5:	83 ec 44             	sub    $0x44,%esp
810041a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810041ab:	83 c0 0b             	add    $0xb,%eax
810041ae:	83 f8 16             	cmp    $0x16,%eax
810041b1:	76 0b                	jbe    810041be <_malloc_r+0x1d>
810041b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810041b6:	83 c0 0b             	add    $0xb,%eax
810041b9:	83 e0 f8             	and    $0xfffffff8,%eax
810041bc:	eb 05                	jmp    810041c3 <_malloc_r+0x22>
810041be:	b8 10 00 00 00       	mov    $0x10,%eax
810041c3:	89 45 d0             	mov    %eax,-0x30(%ebp)
810041c6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041c9:	85 c0                	test   %eax,%eax
810041cb:	78 08                	js     810041d5 <_malloc_r+0x34>
810041cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041d0:	3b 45 0c             	cmp    0xc(%ebp),%eax
810041d3:	73 13                	jae    810041e8 <_malloc_r+0x47>
810041d5:	8b 45 08             	mov    0x8(%ebp),%eax
810041d8:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810041de:	b8 00 00 00 00       	mov    $0x0,%eax
810041e3:	e9 d6 07 00 00       	jmp    810049be <_malloc_r+0x81d>
810041e8:	83 ec 0c             	sub    $0xc,%esp
810041eb:	ff 75 08             	pushl  0x8(%ebp)
810041ee:	e8 22 0a 00 00       	call   81004c15 <__malloc_lock>
810041f3:	83 c4 10             	add    $0x10,%esp
810041f6:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810041fd:	0f 87 b0 00 00 00    	ja     810042b3 <_malloc_r+0x112>
81004203:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004206:	c1 e8 03             	shr    $0x3,%eax
81004209:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100420c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100420f:	83 c0 01             	add    $0x1,%eax
81004212:	01 c0                	add    %eax,%eax
81004214:	c1 e0 02             	shl    $0x2,%eax
81004217:	05 e0 90 00 81       	add    $0x810090e0,%eax
8100421c:	83 e8 08             	sub    $0x8,%eax
8100421f:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004222:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004225:	8b 40 0c             	mov    0xc(%eax),%eax
81004228:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100422b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100422e:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81004231:	75 0d                	jne    81004240 <_malloc_r+0x9f>
81004233:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81004237:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100423a:	8b 40 0c             	mov    0xc(%eax),%eax
8100423d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004240:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004243:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81004246:	74 62                	je     810042aa <_malloc_r+0x109>
81004248:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100424b:	8b 40 04             	mov    0x4(%eax),%eax
8100424e:	83 e0 fc             	and    $0xfffffffc,%eax
81004251:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004254:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004257:	8b 40 0c             	mov    0xc(%eax),%eax
8100425a:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100425d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004260:	8b 40 08             	mov    0x8(%eax),%eax
81004263:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004266:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004269:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100426c:	89 50 0c             	mov    %edx,0xc(%eax)
8100426f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004272:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004275:	89 50 08             	mov    %edx,0x8(%eax)
81004278:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100427b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100427e:	01 d0                	add    %edx,%eax
81004280:	8b 50 04             	mov    0x4(%eax),%edx
81004283:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004286:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004289:	01 c8                	add    %ecx,%eax
8100428b:	83 ca 01             	or     $0x1,%edx
8100428e:	89 50 04             	mov    %edx,0x4(%eax)
81004291:	83 ec 0c             	sub    $0xc,%esp
81004294:	ff 75 08             	pushl  0x8(%ebp)
81004297:	e8 7f 09 00 00       	call   81004c1b <__malloc_unlock>
8100429c:	83 c4 10             	add    $0x10,%esp
8100429f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810042a2:	83 c0 08             	add    $0x8,%eax
810042a5:	e9 14 07 00 00       	jmp    810049be <_malloc_r+0x81d>
810042aa:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810042ae:	e9 46 01 00 00       	jmp    810043f9 <_malloc_r+0x258>
810042b3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042b6:	c1 e8 09             	shr    $0x9,%eax
810042b9:	85 c0                	test   %eax,%eax
810042bb:	75 08                	jne    810042c5 <_malloc_r+0x124>
810042bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042c0:	c1 e8 03             	shr    $0x3,%eax
810042c3:	eb 77                	jmp    8100433c <_malloc_r+0x19b>
810042c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042c8:	c1 e8 09             	shr    $0x9,%eax
810042cb:	83 f8 04             	cmp    $0x4,%eax
810042ce:	77 0b                	ja     810042db <_malloc_r+0x13a>
810042d0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042d3:	c1 e8 06             	shr    $0x6,%eax
810042d6:	83 c0 38             	add    $0x38,%eax
810042d9:	eb 61                	jmp    8100433c <_malloc_r+0x19b>
810042db:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042de:	c1 e8 09             	shr    $0x9,%eax
810042e1:	83 f8 14             	cmp    $0x14,%eax
810042e4:	77 0b                	ja     810042f1 <_malloc_r+0x150>
810042e6:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042e9:	c1 e8 09             	shr    $0x9,%eax
810042ec:	83 c0 5b             	add    $0x5b,%eax
810042ef:	eb 4b                	jmp    8100433c <_malloc_r+0x19b>
810042f1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042f4:	c1 e8 09             	shr    $0x9,%eax
810042f7:	83 f8 54             	cmp    $0x54,%eax
810042fa:	77 0b                	ja     81004307 <_malloc_r+0x166>
810042fc:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042ff:	c1 e8 0c             	shr    $0xc,%eax
81004302:	83 c0 6e             	add    $0x6e,%eax
81004305:	eb 35                	jmp    8100433c <_malloc_r+0x19b>
81004307:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100430a:	c1 e8 09             	shr    $0x9,%eax
8100430d:	3d 54 01 00 00       	cmp    $0x154,%eax
81004312:	77 0b                	ja     8100431f <_malloc_r+0x17e>
81004314:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004317:	c1 e8 0f             	shr    $0xf,%eax
8100431a:	83 c0 77             	add    $0x77,%eax
8100431d:	eb 1d                	jmp    8100433c <_malloc_r+0x19b>
8100431f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004322:	c1 e8 09             	shr    $0x9,%eax
81004325:	3d 54 05 00 00       	cmp    $0x554,%eax
8100432a:	77 0b                	ja     81004337 <_malloc_r+0x196>
8100432c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100432f:	c1 e8 12             	shr    $0x12,%eax
81004332:	83 c0 7c             	add    $0x7c,%eax
81004335:	eb 05                	jmp    8100433c <_malloc_r+0x19b>
81004337:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100433c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100433f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004342:	83 c0 01             	add    $0x1,%eax
81004345:	01 c0                	add    %eax,%eax
81004347:	c1 e0 02             	shl    $0x2,%eax
8100434a:	05 e0 90 00 81       	add    $0x810090e0,%eax
8100434f:	83 e8 08             	sub    $0x8,%eax
81004352:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004355:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004358:	8b 40 0c             	mov    0xc(%eax),%eax
8100435b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100435e:	e9 86 00 00 00       	jmp    810043e9 <_malloc_r+0x248>
81004363:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004366:	8b 40 04             	mov    0x4(%eax),%eax
81004369:	83 e0 fc             	and    $0xfffffffc,%eax
8100436c:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100436f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004372:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004375:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004378:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100437c:	7e 06                	jle    81004384 <_malloc_r+0x1e3>
8100437e:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81004382:	eb 71                	jmp    810043f5 <_malloc_r+0x254>
81004384:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004388:	78 56                	js     810043e0 <_malloc_r+0x23f>
8100438a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100438d:	8b 40 0c             	mov    0xc(%eax),%eax
81004390:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004393:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004396:	8b 40 08             	mov    0x8(%eax),%eax
81004399:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100439c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100439f:	8b 55 d8             	mov    -0x28(%ebp),%edx
810043a2:	89 50 0c             	mov    %edx,0xc(%eax)
810043a5:	8b 45 d8             	mov    -0x28(%ebp),%eax
810043a8:	8b 55 dc             	mov    -0x24(%ebp),%edx
810043ab:	89 50 08             	mov    %edx,0x8(%eax)
810043ae:	8b 55 f4             	mov    -0xc(%ebp),%edx
810043b1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043b4:	01 d0                	add    %edx,%eax
810043b6:	8b 50 04             	mov    0x4(%eax),%edx
810043b9:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810043bc:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043bf:	01 c8                	add    %ecx,%eax
810043c1:	83 ca 01             	or     $0x1,%edx
810043c4:	89 50 04             	mov    %edx,0x4(%eax)
810043c7:	83 ec 0c             	sub    $0xc,%esp
810043ca:	ff 75 08             	pushl  0x8(%ebp)
810043cd:	e8 49 08 00 00       	call   81004c1b <__malloc_unlock>
810043d2:	83 c4 10             	add    $0x10,%esp
810043d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043d8:	83 c0 08             	add    $0x8,%eax
810043db:	e9 de 05 00 00       	jmp    810049be <_malloc_r+0x81d>
810043e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043e3:	8b 40 0c             	mov    0xc(%eax),%eax
810043e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043ec:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810043ef:	0f 85 6e ff ff ff    	jne    81004363 <_malloc_r+0x1c2>
810043f5:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810043f9:	b8 e8 90 00 81       	mov    $0x810090e8,%eax
810043fe:	8b 40 08             	mov    0x8(%eax),%eax
81004401:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004404:	b8 e8 90 00 81       	mov    $0x810090e8,%eax
81004409:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100440c:	0f 84 9c 02 00 00    	je     810046ae <_malloc_r+0x50d>
81004412:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004415:	8b 40 04             	mov    0x4(%eax),%eax
81004418:	83 e0 fc             	and    $0xfffffffc,%eax
8100441b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100441e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004421:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004424:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004427:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100442b:	7e 7a                	jle    810044a7 <_malloc_r+0x306>
8100442d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004430:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004433:	01 d0                	add    %edx,%eax
81004435:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81004438:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100443b:	83 c8 01             	or     $0x1,%eax
8100443e:	89 c2                	mov    %eax,%edx
81004440:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004443:	89 50 04             	mov    %edx,0x4(%eax)
81004446:	b8 e8 90 00 81       	mov    $0x810090e8,%eax
8100444b:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100444e:	89 50 0c             	mov    %edx,0xc(%eax)
81004451:	ba e8 90 00 81       	mov    $0x810090e8,%edx
81004456:	8b 40 0c             	mov    0xc(%eax),%eax
81004459:	89 42 08             	mov    %eax,0x8(%edx)
8100445c:	ba e8 90 00 81       	mov    $0x810090e8,%edx
81004461:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004464:	89 50 0c             	mov    %edx,0xc(%eax)
81004467:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100446a:	8b 50 0c             	mov    0xc(%eax),%edx
8100446d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004470:	89 50 08             	mov    %edx,0x8(%eax)
81004473:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004476:	83 c8 01             	or     $0x1,%eax
81004479:	89 c2                	mov    %eax,%edx
8100447b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100447e:	89 50 04             	mov    %edx,0x4(%eax)
81004481:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004484:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004487:	01 c2                	add    %eax,%edx
81004489:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100448c:	89 02                	mov    %eax,(%edx)
8100448e:	83 ec 0c             	sub    $0xc,%esp
81004491:	ff 75 08             	pushl  0x8(%ebp)
81004494:	e8 82 07 00 00       	call   81004c1b <__malloc_unlock>
81004499:	83 c4 10             	add    $0x10,%esp
8100449c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100449f:	83 c0 08             	add    $0x8,%eax
810044a2:	e9 17 05 00 00       	jmp    810049be <_malloc_r+0x81d>
810044a7:	b8 e8 90 00 81       	mov    $0x810090e8,%eax
810044ac:	ba e8 90 00 81       	mov    $0x810090e8,%edx
810044b1:	89 50 0c             	mov    %edx,0xc(%eax)
810044b4:	ba e8 90 00 81       	mov    $0x810090e8,%edx
810044b9:	8b 40 0c             	mov    0xc(%eax),%eax
810044bc:	89 42 08             	mov    %eax,0x8(%edx)
810044bf:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810044c3:	78 32                	js     810044f7 <_malloc_r+0x356>
810044c5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810044c8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044cb:	01 d0                	add    %edx,%eax
810044cd:	8b 50 04             	mov    0x4(%eax),%edx
810044d0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810044d3:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044d6:	01 c8                	add    %ecx,%eax
810044d8:	83 ca 01             	or     $0x1,%edx
810044db:	89 50 04             	mov    %edx,0x4(%eax)
810044de:	83 ec 0c             	sub    $0xc,%esp
810044e1:	ff 75 08             	pushl  0x8(%ebp)
810044e4:	e8 32 07 00 00       	call   81004c1b <__malloc_unlock>
810044e9:	83 c4 10             	add    $0x10,%esp
810044ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810044ef:	83 c0 08             	add    $0x8,%eax
810044f2:	e9 c7 04 00 00       	jmp    810049be <_malloc_r+0x81d>
810044f7:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
810044fe:	77 7f                	ja     8100457f <_malloc_r+0x3de>
81004500:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004503:	c1 e8 03             	shr    $0x3,%eax
81004506:	89 45 c8             	mov    %eax,-0x38(%ebp)
81004509:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
8100450e:	8b 58 04             	mov    0x4(%eax),%ebx
81004511:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004514:	8d 50 03             	lea    0x3(%eax),%edx
81004517:	85 c0                	test   %eax,%eax
81004519:	0f 48 c2             	cmovs  %edx,%eax
8100451c:	c1 f8 02             	sar    $0x2,%eax
8100451f:	ba 01 00 00 00       	mov    $0x1,%edx
81004524:	89 c1                	mov    %eax,%ecx
81004526:	d3 e2                	shl    %cl,%edx
81004528:	89 d0                	mov    %edx,%eax
8100452a:	ba e0 90 00 81       	mov    $0x810090e0,%edx
8100452f:	09 d8                	or     %ebx,%eax
81004531:	89 42 04             	mov    %eax,0x4(%edx)
81004534:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004537:	83 c0 01             	add    $0x1,%eax
8100453a:	01 c0                	add    %eax,%eax
8100453c:	c1 e0 02             	shl    $0x2,%eax
8100453f:	05 e0 90 00 81       	add    $0x810090e0,%eax
81004544:	83 e8 08             	sub    $0x8,%eax
81004547:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100454a:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100454d:	8b 40 08             	mov    0x8(%eax),%eax
81004550:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004553:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004556:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004559:	89 50 0c             	mov    %edx,0xc(%eax)
8100455c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100455f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004562:	89 50 08             	mov    %edx,0x8(%eax)
81004565:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004568:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100456b:	89 50 08             	mov    %edx,0x8(%eax)
8100456e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004571:	8b 50 08             	mov    0x8(%eax),%edx
81004574:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004577:	89 50 0c             	mov    %edx,0xc(%eax)
8100457a:	e9 2f 01 00 00       	jmp    810046ae <_malloc_r+0x50d>
8100457f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004582:	c1 e8 09             	shr    $0x9,%eax
81004585:	85 c0                	test   %eax,%eax
81004587:	75 08                	jne    81004591 <_malloc_r+0x3f0>
81004589:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100458c:	c1 e8 03             	shr    $0x3,%eax
8100458f:	eb 77                	jmp    81004608 <_malloc_r+0x467>
81004591:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004594:	c1 e8 09             	shr    $0x9,%eax
81004597:	83 f8 04             	cmp    $0x4,%eax
8100459a:	77 0b                	ja     810045a7 <_malloc_r+0x406>
8100459c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100459f:	c1 e8 06             	shr    $0x6,%eax
810045a2:	83 c0 38             	add    $0x38,%eax
810045a5:	eb 61                	jmp    81004608 <_malloc_r+0x467>
810045a7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045aa:	c1 e8 09             	shr    $0x9,%eax
810045ad:	83 f8 14             	cmp    $0x14,%eax
810045b0:	77 0b                	ja     810045bd <_malloc_r+0x41c>
810045b2:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045b5:	c1 e8 09             	shr    $0x9,%eax
810045b8:	83 c0 5b             	add    $0x5b,%eax
810045bb:	eb 4b                	jmp    81004608 <_malloc_r+0x467>
810045bd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045c0:	c1 e8 09             	shr    $0x9,%eax
810045c3:	83 f8 54             	cmp    $0x54,%eax
810045c6:	77 0b                	ja     810045d3 <_malloc_r+0x432>
810045c8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045cb:	c1 e8 0c             	shr    $0xc,%eax
810045ce:	83 c0 6e             	add    $0x6e,%eax
810045d1:	eb 35                	jmp    81004608 <_malloc_r+0x467>
810045d3:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045d6:	c1 e8 09             	shr    $0x9,%eax
810045d9:	3d 54 01 00 00       	cmp    $0x154,%eax
810045de:	77 0b                	ja     810045eb <_malloc_r+0x44a>
810045e0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045e3:	c1 e8 0f             	shr    $0xf,%eax
810045e6:	83 c0 77             	add    $0x77,%eax
810045e9:	eb 1d                	jmp    81004608 <_malloc_r+0x467>
810045eb:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045ee:	c1 e8 09             	shr    $0x9,%eax
810045f1:	3d 54 05 00 00       	cmp    $0x554,%eax
810045f6:	77 0b                	ja     81004603 <_malloc_r+0x462>
810045f8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045fb:	c1 e8 12             	shr    $0x12,%eax
810045fe:	83 c0 7c             	add    $0x7c,%eax
81004601:	eb 05                	jmp    81004608 <_malloc_r+0x467>
81004603:	b8 7e 00 00 00       	mov    $0x7e,%eax
81004608:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100460b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100460e:	83 c0 01             	add    $0x1,%eax
81004611:	01 c0                	add    %eax,%eax
81004613:	c1 e0 02             	shl    $0x2,%eax
81004616:	05 e0 90 00 81       	add    $0x810090e0,%eax
8100461b:	83 e8 08             	sub    $0x8,%eax
8100461e:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004621:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004624:	8b 40 08             	mov    0x8(%eax),%eax
81004627:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100462a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100462d:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81004630:	75 36                	jne    81004668 <_malloc_r+0x4c7>
81004632:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81004637:	8b 58 04             	mov    0x4(%eax),%ebx
8100463a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100463d:	8d 50 03             	lea    0x3(%eax),%edx
81004640:	85 c0                	test   %eax,%eax
81004642:	0f 48 c2             	cmovs  %edx,%eax
81004645:	c1 f8 02             	sar    $0x2,%eax
81004648:	ba 01 00 00 00       	mov    $0x1,%edx
8100464d:	89 c1                	mov    %eax,%ecx
8100464f:	d3 e2                	shl    %cl,%edx
81004651:	89 d0                	mov    %edx,%eax
81004653:	ba e0 90 00 81       	mov    $0x810090e0,%edx
81004658:	09 d8                	or     %ebx,%eax
8100465a:	89 42 04             	mov    %eax,0x4(%edx)
8100465d:	eb 28                	jmp    81004687 <_malloc_r+0x4e6>
8100465f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004662:	8b 40 08             	mov    0x8(%eax),%eax
81004665:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004668:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100466b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100466e:	74 0e                	je     8100467e <_malloc_r+0x4dd>
81004670:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004673:	8b 40 04             	mov    0x4(%eax),%eax
81004676:	83 e0 fc             	and    $0xfffffffc,%eax
81004679:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100467c:	72 e1                	jb     8100465f <_malloc_r+0x4be>
8100467e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004681:	8b 40 0c             	mov    0xc(%eax),%eax
81004684:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004687:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100468a:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100468d:	89 50 0c             	mov    %edx,0xc(%eax)
81004690:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004693:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004696:	89 50 08             	mov    %edx,0x8(%eax)
81004699:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100469c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100469f:	89 50 08             	mov    %edx,0x8(%eax)
810046a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810046a5:	8b 50 08             	mov    0x8(%eax),%edx
810046a8:	8b 45 dc             	mov    -0x24(%ebp),%eax
810046ab:	89 50 0c             	mov    %edx,0xc(%eax)
810046ae:	8b 45 f0             	mov    -0x10(%ebp),%eax
810046b1:	8d 50 03             	lea    0x3(%eax),%edx
810046b4:	85 c0                	test   %eax,%eax
810046b6:	0f 48 c2             	cmovs  %edx,%eax
810046b9:	c1 f8 02             	sar    $0x2,%eax
810046bc:	ba 01 00 00 00       	mov    $0x1,%edx
810046c1:	89 c1                	mov    %eax,%ecx
810046c3:	d3 e2                	shl    %cl,%edx
810046c5:	89 d0                	mov    %edx,%eax
810046c7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810046ca:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810046cf:	8b 40 04             	mov    0x4(%eax),%eax
810046d2:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810046d5:	0f 87 13 02 00 00    	ja     810048ee <_malloc_r+0x74d>
810046db:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810046e0:	8b 40 04             	mov    0x4(%eax),%eax
810046e3:	23 45 e4             	and    -0x1c(%ebp),%eax
810046e6:	85 c0                	test   %eax,%eax
810046e8:	75 27                	jne    81004711 <_malloc_r+0x570>
810046ea:	8b 45 f0             	mov    -0x10(%ebp),%eax
810046ed:	83 e0 fc             	and    $0xfffffffc,%eax
810046f0:	83 c0 04             	add    $0x4,%eax
810046f3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810046f6:	d1 65 e4             	shll   -0x1c(%ebp)
810046f9:	eb 07                	jmp    81004702 <_malloc_r+0x561>
810046fb:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810046ff:	d1 65 e4             	shll   -0x1c(%ebp)
81004702:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81004707:	8b 40 04             	mov    0x4(%eax),%eax
8100470a:	23 45 e4             	and    -0x1c(%ebp),%eax
8100470d:	85 c0                	test   %eax,%eax
8100470f:	74 ea                	je     810046fb <_malloc_r+0x55a>
81004711:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004714:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004717:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100471a:	83 c0 01             	add    $0x1,%eax
8100471d:	01 c0                	add    %eax,%eax
8100471f:	c1 e0 02             	shl    $0x2,%eax
81004722:	05 e0 90 00 81       	add    $0x810090e0,%eax
81004727:	83 e8 08             	sub    $0x8,%eax
8100472a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100472d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004730:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004733:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004736:	8b 40 0c             	mov    0xc(%eax),%eax
81004739:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100473c:	e9 22 01 00 00       	jmp    81004863 <_malloc_r+0x6c2>
81004741:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004744:	8b 40 04             	mov    0x4(%eax),%eax
81004747:	83 e0 fc             	and    $0xfffffffc,%eax
8100474a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100474d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004750:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004753:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004756:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100475a:	0f 8e 9e 00 00 00    	jle    810047fe <_malloc_r+0x65d>
81004760:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004763:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004766:	01 d0                	add    %edx,%eax
81004768:	89 45 c4             	mov    %eax,-0x3c(%ebp)
8100476b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100476e:	83 c8 01             	or     $0x1,%eax
81004771:	89 c2                	mov    %eax,%edx
81004773:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004776:	89 50 04             	mov    %edx,0x4(%eax)
81004779:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100477c:	8b 40 0c             	mov    0xc(%eax),%eax
8100477f:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004782:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004785:	8b 40 08             	mov    0x8(%eax),%eax
81004788:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100478b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100478e:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004791:	89 50 0c             	mov    %edx,0xc(%eax)
81004794:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004797:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100479a:	89 50 08             	mov    %edx,0x8(%eax)
8100479d:	b8 e8 90 00 81       	mov    $0x810090e8,%eax
810047a2:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810047a5:	89 50 0c             	mov    %edx,0xc(%eax)
810047a8:	ba e8 90 00 81       	mov    $0x810090e8,%edx
810047ad:	8b 40 0c             	mov    0xc(%eax),%eax
810047b0:	89 42 08             	mov    %eax,0x8(%edx)
810047b3:	ba e8 90 00 81       	mov    $0x810090e8,%edx
810047b8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047bb:	89 50 0c             	mov    %edx,0xc(%eax)
810047be:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047c1:	8b 50 0c             	mov    0xc(%eax),%edx
810047c4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047c7:	89 50 08             	mov    %edx,0x8(%eax)
810047ca:	8b 45 e8             	mov    -0x18(%ebp),%eax
810047cd:	83 c8 01             	or     $0x1,%eax
810047d0:	89 c2                	mov    %eax,%edx
810047d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047d5:	89 50 04             	mov    %edx,0x4(%eax)
810047d8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810047db:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047de:	01 c2                	add    %eax,%edx
810047e0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810047e3:	89 02                	mov    %eax,(%edx)
810047e5:	83 ec 0c             	sub    $0xc,%esp
810047e8:	ff 75 08             	pushl  0x8(%ebp)
810047eb:	e8 2b 04 00 00       	call   81004c1b <__malloc_unlock>
810047f0:	83 c4 10             	add    $0x10,%esp
810047f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047f6:	83 c0 08             	add    $0x8,%eax
810047f9:	e9 c0 01 00 00       	jmp    810049be <_malloc_r+0x81d>
810047fe:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004802:	78 56                	js     8100485a <_malloc_r+0x6b9>
81004804:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004807:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100480a:	01 d0                	add    %edx,%eax
8100480c:	8b 50 04             	mov    0x4(%eax),%edx
8100480f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004812:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004815:	01 c8                	add    %ecx,%eax
81004817:	83 ca 01             	or     $0x1,%edx
8100481a:	89 50 04             	mov    %edx,0x4(%eax)
8100481d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004820:	8b 40 0c             	mov    0xc(%eax),%eax
81004823:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004826:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004829:	8b 40 08             	mov    0x8(%eax),%eax
8100482c:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100482f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004832:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004835:	89 50 0c             	mov    %edx,0xc(%eax)
81004838:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100483b:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100483e:	89 50 08             	mov    %edx,0x8(%eax)
81004841:	83 ec 0c             	sub    $0xc,%esp
81004844:	ff 75 08             	pushl  0x8(%ebp)
81004847:	e8 cf 03 00 00       	call   81004c1b <__malloc_unlock>
8100484c:	83 c4 10             	add    $0x10,%esp
8100484f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004852:	83 c0 08             	add    $0x8,%eax
81004855:	e9 64 01 00 00       	jmp    810049be <_malloc_r+0x81d>
8100485a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100485d:	8b 40 0c             	mov    0xc(%eax),%eax
81004860:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004863:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004866:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81004869:	0f 85 d2 fe ff ff    	jne    81004741 <_malloc_r+0x5a0>
8100486f:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81004873:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004877:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100487a:	83 e0 03             	and    $0x3,%eax
8100487d:	85 c0                	test   %eax,%eax
8100487f:	0f 85 ae fe ff ff    	jne    81004733 <_malloc_r+0x592>
81004885:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004888:	83 e0 03             	and    $0x3,%eax
8100488b:	85 c0                	test   %eax,%eax
8100488d:	75 19                	jne    810048a8 <_malloc_r+0x707>
8100488f:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81004894:	8b 48 04             	mov    0x4(%eax),%ecx
81004897:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100489a:	f7 d0                	not    %eax
8100489c:	ba e0 90 00 81       	mov    $0x810090e0,%edx
810048a1:	21 c8                	and    %ecx,%eax
810048a3:	89 42 04             	mov    %eax,0x4(%edx)
810048a6:	eb 13                	jmp    810048bb <_malloc_r+0x71a>
810048a8:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810048ac:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810048b0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810048b3:	8b 40 08             	mov    0x8(%eax),%eax
810048b6:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810048b9:	74 ca                	je     81004885 <_malloc_r+0x6e4>
810048bb:	d1 65 e4             	shll   -0x1c(%ebp)
810048be:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810048c3:	8b 40 04             	mov    0x4(%eax),%eax
810048c6:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810048c9:	77 23                	ja     810048ee <_malloc_r+0x74d>
810048cb:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810048cf:	74 1d                	je     810048ee <_malloc_r+0x74d>
810048d1:	eb 07                	jmp    810048da <_malloc_r+0x739>
810048d3:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810048d7:	d1 65 e4             	shll   -0x1c(%ebp)
810048da:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810048df:	8b 40 04             	mov    0x4(%eax),%eax
810048e2:	23 45 e4             	and    -0x1c(%ebp),%eax
810048e5:	85 c0                	test   %eax,%eax
810048e7:	74 ea                	je     810048d3 <_malloc_r+0x732>
810048e9:	e9 23 fe ff ff       	jmp    81004711 <_malloc_r+0x570>
810048ee:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810048f3:	8b 40 08             	mov    0x8(%eax),%eax
810048f6:	8b 40 04             	mov    0x4(%eax),%eax
810048f9:	83 e0 fc             	and    $0xfffffffc,%eax
810048fc:	2b 45 d0             	sub    -0x30(%ebp),%eax
810048ff:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004902:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81004907:	8b 40 08             	mov    0x8(%eax),%eax
8100490a:	8b 40 04             	mov    0x4(%eax),%eax
8100490d:	83 e0 fc             	and    $0xfffffffc,%eax
81004910:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004913:	77 06                	ja     8100491b <_malloc_r+0x77a>
81004915:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004919:	7f 53                	jg     8100496e <_malloc_r+0x7cd>
8100491b:	83 ec 08             	sub    $0x8,%esp
8100491e:	ff 75 d0             	pushl  -0x30(%ebp)
81004921:	ff 75 08             	pushl  0x8(%ebp)
81004924:	e8 e5 f5 ff ff       	call   81003f0e <malloc_extend_top>
81004929:	83 c4 10             	add    $0x10,%esp
8100492c:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81004931:	8b 40 08             	mov    0x8(%eax),%eax
81004934:	8b 40 04             	mov    0x4(%eax),%eax
81004937:	83 e0 fc             	and    $0xfffffffc,%eax
8100493a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100493d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004940:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81004945:	8b 40 08             	mov    0x8(%eax),%eax
81004948:	8b 40 04             	mov    0x4(%eax),%eax
8100494b:	83 e0 fc             	and    $0xfffffffc,%eax
8100494e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004951:	77 06                	ja     81004959 <_malloc_r+0x7b8>
81004953:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004957:	7f 15                	jg     8100496e <_malloc_r+0x7cd>
81004959:	83 ec 0c             	sub    $0xc,%esp
8100495c:	ff 75 08             	pushl  0x8(%ebp)
8100495f:	e8 b7 02 00 00       	call   81004c1b <__malloc_unlock>
81004964:	83 c4 10             	add    $0x10,%esp
81004967:	b8 00 00 00 00       	mov    $0x0,%eax
8100496c:	eb 50                	jmp    810049be <_malloc_r+0x81d>
8100496e:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81004973:	8b 40 08             	mov    0x8(%eax),%eax
81004976:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004979:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100497c:	83 c8 01             	or     $0x1,%eax
8100497f:	89 c2                	mov    %eax,%edx
81004981:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004984:	89 50 04             	mov    %edx,0x4(%eax)
81004987:	ba e0 90 00 81       	mov    $0x810090e0,%edx
8100498c:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100498f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004992:	01 c8                	add    %ecx,%eax
81004994:	89 42 08             	mov    %eax,0x8(%edx)
81004997:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100499a:	83 c8 01             	or     $0x1,%eax
8100499d:	89 c2                	mov    %eax,%edx
8100499f:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810049a4:	8b 40 08             	mov    0x8(%eax),%eax
810049a7:	89 50 04             	mov    %edx,0x4(%eax)
810049aa:	83 ec 0c             	sub    $0xc,%esp
810049ad:	ff 75 08             	pushl  0x8(%ebp)
810049b0:	e8 66 02 00 00       	call   81004c1b <__malloc_unlock>
810049b5:	83 c4 10             	add    $0x10,%esp
810049b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810049bb:	83 c0 08             	add    $0x8,%eax
810049be:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810049c1:	c9                   	leave  
810049c2:	c3                   	ret    
810049c3:	66 90                	xchg   %ax,%ax
810049c5:	66 90                	xchg   %ax,%ax
810049c7:	66 90                	xchg   %ax,%ax
810049c9:	66 90                	xchg   %ax,%ax
810049cb:	66 90                	xchg   %ax,%ax
810049cd:	66 90                	xchg   %ax,%ax
810049cf:	90                   	nop

810049d0 <memchr>:
810049d0:	55                   	push   %ebp
810049d1:	89 e5                	mov    %esp,%ebp
810049d3:	57                   	push   %edi
810049d4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810049d8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810049db:	8b 7d 08             	mov    0x8(%ebp),%edi
810049de:	31 d2                	xor    %edx,%edx
810049e0:	85 c9                	test   %ecx,%ecx
810049e2:	74 79                	je     81004a5d <L20>
810049e4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049ea:	74 28                	je     81004a14 <L5>
810049ec:	3a 07                	cmp    (%edi),%al
810049ee:	74 6a                	je     81004a5a <L15>
810049f0:	47                   	inc    %edi
810049f1:	49                   	dec    %ecx
810049f2:	74 69                	je     81004a5d <L20>
810049f4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049fa:	74 18                	je     81004a14 <L5>
810049fc:	3a 07                	cmp    (%edi),%al
810049fe:	74 5a                	je     81004a5a <L15>
81004a00:	47                   	inc    %edi
81004a01:	49                   	dec    %ecx
81004a02:	74 59                	je     81004a5d <L20>
81004a04:	f7 c7 03 00 00 00    	test   $0x3,%edi
81004a0a:	74 08                	je     81004a14 <L5>
81004a0c:	3a 07                	cmp    (%edi),%al
81004a0e:	74 4a                	je     81004a5a <L15>
81004a10:	47                   	inc    %edi
81004a11:	49                   	dec    %ecx
81004a12:	74 49                	je     81004a5d <L20>

81004a14 <L5>:
81004a14:	88 c4                	mov    %al,%ah
81004a16:	89 c2                	mov    %eax,%edx
81004a18:	c1 e2 10             	shl    $0x10,%edx
81004a1b:	09 d0                	or     %edx,%eax
81004a1d:	53                   	push   %ebx
81004a1e:	66 90                	xchg   %ax,%ax

81004a20 <L8>:
81004a20:	83 e9 04             	sub    $0x4,%ecx
81004a23:	72 1c                	jb     81004a41 <L9>
81004a25:	8b 17                	mov    (%edi),%edx
81004a27:	83 c7 04             	add    $0x4,%edi
81004a2a:	31 c2                	xor    %eax,%edx
81004a2c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004a32:	f7 d2                	not    %edx
81004a34:	21 d3                	and    %edx,%ebx
81004a36:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81004a3c:	74 e2                	je     81004a20 <L8>
81004a3e:	83 ef 04             	sub    $0x4,%edi

81004a41 <L9>:
81004a41:	5b                   	pop    %ebx
81004a42:	31 d2                	xor    %edx,%edx
81004a44:	83 c1 04             	add    $0x4,%ecx
81004a47:	74 14                	je     81004a5d <L20>
81004a49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004a50 <L10>:
81004a50:	3a 07                	cmp    (%edi),%al
81004a52:	74 06                	je     81004a5a <L15>
81004a54:	47                   	inc    %edi
81004a55:	49                   	dec    %ecx
81004a56:	75 f8                	jne    81004a50 <L10>
81004a58:	31 ff                	xor    %edi,%edi

81004a5a <L15>:
81004a5a:	4a                   	dec    %edx
81004a5b:	21 fa                	and    %edi,%edx

81004a5d <L20>:
81004a5d:	89 d0                	mov    %edx,%eax
81004a5f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004a62:	5f                   	pop    %edi
81004a63:	c9                   	leave  
81004a64:	c3                   	ret    

81004a65 <memcmp>:
81004a65:	55                   	push   %ebp
81004a66:	89 e5                	mov    %esp,%ebp
81004a68:	83 ec 10             	sub    $0x10,%esp
81004a6b:	53                   	push   %ebx
81004a6c:	57                   	push   %edi
81004a6d:	56                   	push   %esi
81004a6e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004a71:	8b 75 0c             	mov    0xc(%ebp),%esi
81004a74:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004a77:	fc                   	cld    
81004a78:	31 c0                	xor    %eax,%eax
81004a7a:	85 c9                	test   %ecx,%ecx
81004a7c:	74 31                	je     81004aaf <L4>
81004a7e:	89 f8                	mov    %edi,%eax
81004a80:	09 f0                	or     %esi,%eax
81004a82:	a8 03                	test   $0x3,%al
81004a84:	75 1b                	jne    81004aa1 <BYTECMP>
81004a86:	89 cb                	mov    %ecx,%ebx
81004a88:	c1 e9 02             	shr    $0x2,%ecx
81004a8b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
81004a8d:	74 0d                	je     81004a9c <L5>
81004a8f:	83 ee 04             	sub    $0x4,%esi
81004a92:	83 ef 04             	sub    $0x4,%edi
81004a95:	b9 04 00 00 00       	mov    $0x4,%ecx
81004a9a:	eb 05                	jmp    81004aa1 <BYTECMP>

81004a9c <L5>:
81004a9c:	83 e3 03             	and    $0x3,%ebx
81004a9f:	89 d9                	mov    %ebx,%ecx

81004aa1 <BYTECMP>:
81004aa1:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81004aa3 <L3>:
81004aa3:	31 d2                	xor    %edx,%edx
81004aa5:	8a 56 ff             	mov    -0x1(%esi),%dl
81004aa8:	31 c0                	xor    %eax,%eax
81004aaa:	8a 47 ff             	mov    -0x1(%edi),%al
81004aad:	29 d0                	sub    %edx,%eax

81004aaf <L4>:
81004aaf:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81004ab2:	5e                   	pop    %esi
81004ab3:	5f                   	pop    %edi
81004ab4:	5b                   	pop    %ebx
81004ab5:	c9                   	leave  
81004ab6:	c3                   	ret    
81004ab7:	90                   	nop

81004ab8 <memcpy>:
81004ab8:	55                   	push   %ebp
81004ab9:	89 e5                	mov    %esp,%ebp
81004abb:	56                   	push   %esi
81004abc:	57                   	push   %edi
81004abd:	53                   	push   %ebx
81004abe:	8b 7d 08             	mov    0x8(%ebp),%edi
81004ac1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004ac4:	8b 75 0c             	mov    0xc(%ebp),%esi
81004ac7:	fc                   	cld    
81004ac8:	83 f9 08             	cmp    $0x8,%ecx
81004acb:	76 26                	jbe    81004af3 <memcpy+0x3b>
81004acd:	89 fa                	mov    %edi,%edx
81004acf:	89 cb                	mov    %ecx,%ebx
81004ad1:	83 e2 03             	and    $0x3,%edx
81004ad4:	74 10                	je     81004ae6 <memcpy+0x2e>
81004ad6:	b9 04 00 00 00       	mov    $0x4,%ecx
81004adb:	29 d1                	sub    %edx,%ecx
81004add:	83 e1 03             	and    $0x3,%ecx
81004ae0:	29 cb                	sub    %ecx,%ebx
81004ae2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004ae4:	89 d9                	mov    %ebx,%ecx
81004ae6:	c1 e9 02             	shr    $0x2,%ecx
81004ae9:	8d 76 00             	lea    0x0(%esi),%esi
81004aec:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004aee:	89 d9                	mov    %ebx,%ecx
81004af0:	83 e1 03             	and    $0x3,%ecx
81004af3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004af5:	8b 45 08             	mov    0x8(%ebp),%eax
81004af8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004afb:	5b                   	pop    %ebx
81004afc:	5f                   	pop    %edi
81004afd:	5e                   	pop    %esi
81004afe:	c9                   	leave  
81004aff:	c3                   	ret    

81004b00 <memmove>:
81004b00:	55                   	push   %ebp
81004b01:	89 e5                	mov    %esp,%ebp
81004b03:	56                   	push   %esi
81004b04:	57                   	push   %edi
81004b05:	53                   	push   %ebx
81004b06:	8b 7d 08             	mov    0x8(%ebp),%edi
81004b09:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004b0c:	8b 75 0c             	mov    0xc(%ebp),%esi
81004b0f:	fc                   	cld    
81004b10:	39 fe                	cmp    %edi,%esi
81004b12:	73 43                	jae    81004b57 <memmove+0x57>
81004b14:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81004b18:	39 df                	cmp    %ebx,%edi
81004b1a:	77 3b                	ja     81004b57 <memmove+0x57>
81004b1c:	01 ce                	add    %ecx,%esi
81004b1e:	01 cf                	add    %ecx,%edi
81004b20:	fd                   	std    
81004b21:	83 f9 08             	cmp    $0x8,%ecx
81004b24:	76 2b                	jbe    81004b51 <memmove+0x51>
81004b26:	89 fa                	mov    %edi,%edx
81004b28:	89 cb                	mov    %ecx,%ebx
81004b2a:	83 e2 03             	and    $0x3,%edx
81004b2d:	74 0c                	je     81004b3b <memmove+0x3b>
81004b2f:	89 d1                	mov    %edx,%ecx
81004b31:	4e                   	dec    %esi
81004b32:	4f                   	dec    %edi
81004b33:	29 cb                	sub    %ecx,%ebx
81004b35:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b37:	89 d9                	mov    %ebx,%ecx
81004b39:	46                   	inc    %esi
81004b3a:	47                   	inc    %edi
81004b3b:	c1 e9 02             	shr    $0x2,%ecx
81004b3e:	83 ee 04             	sub    $0x4,%esi
81004b41:	83 ef 04             	sub    $0x4,%edi
81004b44:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b46:	83 c6 04             	add    $0x4,%esi
81004b49:	83 c7 04             	add    $0x4,%edi
81004b4c:	89 d9                	mov    %ebx,%ecx
81004b4e:	83 e1 03             	and    $0x3,%ecx
81004b51:	4e                   	dec    %esi
81004b52:	4f                   	dec    %edi
81004b53:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b55:	eb 2a                	jmp    81004b81 <memmove+0x81>
81004b57:	83 f9 08             	cmp    $0x8,%ecx
81004b5a:	76 23                	jbe    81004b7f <memmove+0x7f>
81004b5c:	89 fa                	mov    %edi,%edx
81004b5e:	89 cb                	mov    %ecx,%ebx
81004b60:	83 e2 03             	and    $0x3,%edx
81004b63:	74 10                	je     81004b75 <memmove+0x75>
81004b65:	b9 04 00 00 00       	mov    $0x4,%ecx
81004b6a:	29 d1                	sub    %edx,%ecx
81004b6c:	83 e1 03             	and    $0x3,%ecx
81004b6f:	29 cb                	sub    %ecx,%ebx
81004b71:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b73:	89 d9                	mov    %ebx,%ecx
81004b75:	c1 e9 02             	shr    $0x2,%ecx
81004b78:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b7a:	89 d9                	mov    %ebx,%ecx
81004b7c:	83 e1 03             	and    $0x3,%ecx
81004b7f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b81:	8b 45 08             	mov    0x8(%ebp),%eax
81004b84:	fc                   	cld    
81004b85:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004b88:	5b                   	pop    %ebx
81004b89:	5f                   	pop    %edi
81004b8a:	5e                   	pop    %esi
81004b8b:	c9                   	leave  
81004b8c:	c3                   	ret    

81004b8d <memset>:
81004b8d:	55                   	push   %ebp
81004b8e:	89 e5                	mov    %esp,%ebp
81004b90:	57                   	push   %edi
81004b91:	8b 7d 08             	mov    0x8(%ebp),%edi
81004b94:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004b98:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004b9b:	fc                   	cld    
81004b9c:	83 f9 10             	cmp    $0x10,%ecx
81004b9f:	76 69                	jbe    81004c0a <memset+0x7d>
81004ba1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004ba7:	74 4c                	je     81004bf5 <memset+0x68>
81004ba9:	88 07                	mov    %al,(%edi)
81004bab:	47                   	inc    %edi
81004bac:	49                   	dec    %ecx
81004bad:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bb3:	74 40                	je     81004bf5 <memset+0x68>
81004bb5:	88 07                	mov    %al,(%edi)
81004bb7:	47                   	inc    %edi
81004bb8:	49                   	dec    %ecx
81004bb9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bbf:	74 34                	je     81004bf5 <memset+0x68>
81004bc1:	88 07                	mov    %al,(%edi)
81004bc3:	47                   	inc    %edi
81004bc4:	49                   	dec    %ecx
81004bc5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bcb:	74 28                	je     81004bf5 <memset+0x68>
81004bcd:	88 07                	mov    %al,(%edi)
81004bcf:	47                   	inc    %edi
81004bd0:	49                   	dec    %ecx
81004bd1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bd7:	74 1c                	je     81004bf5 <memset+0x68>
81004bd9:	88 07                	mov    %al,(%edi)
81004bdb:	47                   	inc    %edi
81004bdc:	49                   	dec    %ecx
81004bdd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004be3:	74 10                	je     81004bf5 <memset+0x68>
81004be5:	88 07                	mov    %al,(%edi)
81004be7:	47                   	inc    %edi
81004be8:	49                   	dec    %ecx
81004be9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bef:	74 04                	je     81004bf5 <memset+0x68>
81004bf1:	88 07                	mov    %al,(%edi)
81004bf3:	47                   	inc    %edi
81004bf4:	49                   	dec    %ecx
81004bf5:	88 c4                	mov    %al,%ah
81004bf7:	89 c2                	mov    %eax,%edx
81004bf9:	c1 e2 10             	shl    $0x10,%edx
81004bfc:	09 d0                	or     %edx,%eax
81004bfe:	89 ca                	mov    %ecx,%edx
81004c00:	c1 e9 02             	shr    $0x2,%ecx
81004c03:	83 e2 03             	and    $0x3,%edx
81004c06:	f3 ab                	rep stos %eax,%es:(%edi)
81004c08:	89 d1                	mov    %edx,%ecx
81004c0a:	f3 aa                	rep stos %al,%es:(%edi)
81004c0c:	8b 45 08             	mov    0x8(%ebp),%eax
81004c0f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004c12:	5f                   	pop    %edi
81004c13:	c9                   	leave  
81004c14:	c3                   	ret    

81004c15 <__malloc_lock>:
81004c15:	55                   	push   %ebp
81004c16:	89 e5                	mov    %esp,%ebp
81004c18:	90                   	nop
81004c19:	5d                   	pop    %ebp
81004c1a:	c3                   	ret    

81004c1b <__malloc_unlock>:
81004c1b:	55                   	push   %ebp
81004c1c:	89 e5                	mov    %esp,%ebp
81004c1e:	90                   	nop
81004c1f:	5d                   	pop    %ebp
81004c20:	c3                   	ret    

81004c21 <__sprint_r>:
81004c21:	55                   	push   %ebp
81004c22:	89 e5                	mov    %esp,%ebp
81004c24:	56                   	push   %esi
81004c25:	53                   	push   %ebx
81004c26:	83 ec 10             	sub    $0x10,%esp
81004c29:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004c2c:	be 00 00 00 00       	mov    $0x0,%esi
81004c31:	8b 43 08             	mov    0x8(%ebx),%eax
81004c34:	85 c0                	test   %eax,%eax
81004c36:	75 11                	jne    81004c49 <__sprint_r+0x28>
81004c38:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004c3f:	b8 00 00 00 00       	mov    $0x0,%eax
81004c44:	e9 ad 00 00 00       	jmp    81004cf6 <__sprint_r+0xd5>
81004c49:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c4c:	8b 40 64             	mov    0x64(%eax),%eax
81004c4f:	25 00 20 00 00       	and    $0x2000,%eax
81004c54:	85 c0                	test   %eax,%eax
81004c56:	74 7a                	je     81004cd2 <__sprint_r+0xb1>
81004c58:	8b 03                	mov    (%ebx),%eax
81004c5a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c5d:	eb 6a                	jmp    81004cc9 <__sprint_r+0xa8>
81004c5f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c62:	8b 00                	mov    (%eax),%eax
81004c64:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c6a:	8b 40 04             	mov    0x4(%eax),%eax
81004c6d:	c1 e8 02             	shr    $0x2,%eax
81004c70:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004c73:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004c7a:	eb 33                	jmp    81004caf <__sprint_r+0x8e>
81004c7c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c7f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004c86:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c89:	01 d0                	add    %edx,%eax
81004c8b:	8b 00                	mov    (%eax),%eax
81004c8d:	83 ec 04             	sub    $0x4,%esp
81004c90:	ff 75 0c             	pushl  0xc(%ebp)
81004c93:	50                   	push   %eax
81004c94:	ff 75 08             	pushl  0x8(%ebp)
81004c97:	e8 22 2a 00 00       	call   810076be <_fputwc_r>
81004c9c:	83 c4 10             	add    $0x10,%esp
81004c9f:	83 f8 ff             	cmp    $0xffffffff,%eax
81004ca2:	75 07                	jne    81004cab <__sprint_r+0x8a>
81004ca4:	be ff ff ff ff       	mov    $0xffffffff,%esi
81004ca9:	eb 3b                	jmp    81004ce6 <__sprint_r+0xc5>
81004cab:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004caf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004cb2:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004cb5:	7c c5                	jl     81004c7c <__sprint_r+0x5b>
81004cb7:	8b 43 08             	mov    0x8(%ebx),%eax
81004cba:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004cbd:	c1 e2 02             	shl    $0x2,%edx
81004cc0:	29 d0                	sub    %edx,%eax
81004cc2:	89 43 08             	mov    %eax,0x8(%ebx)
81004cc5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81004cc9:	8b 43 08             	mov    0x8(%ebx),%eax
81004ccc:	85 c0                	test   %eax,%eax
81004cce:	75 8f                	jne    81004c5f <__sprint_r+0x3e>
81004cd0:	eb 14                	jmp    81004ce6 <__sprint_r+0xc5>
81004cd2:	83 ec 04             	sub    $0x4,%esp
81004cd5:	53                   	push   %ebx
81004cd6:	ff 75 0c             	pushl  0xc(%ebp)
81004cd9:	ff 75 08             	pushl  0x8(%ebp)
81004cdc:	e8 38 dc ff ff       	call   81002919 <__sfvwrite_r>
81004ce1:	83 c4 10             	add    $0x10,%esp
81004ce4:	89 c6                	mov    %eax,%esi
81004ce6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004ced:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004cf4:	89 f0                	mov    %esi,%eax
81004cf6:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004cf9:	5b                   	pop    %ebx
81004cfa:	5e                   	pop    %esi
81004cfb:	5d                   	pop    %ebp
81004cfc:	c3                   	ret    

81004cfd <__sfputc_r>:
81004cfd:	55                   	push   %ebp
81004cfe:	89 e5                	mov    %esp,%ebp
81004d00:	83 ec 08             	sub    $0x8,%esp
81004d03:	8b 45 10             	mov    0x10(%ebp),%eax
81004d06:	8b 40 08             	mov    0x8(%eax),%eax
81004d09:	8d 50 ff             	lea    -0x1(%eax),%edx
81004d0c:	8b 45 10             	mov    0x10(%ebp),%eax
81004d0f:	89 50 08             	mov    %edx,0x8(%eax)
81004d12:	8b 45 10             	mov    0x10(%ebp),%eax
81004d15:	8b 40 08             	mov    0x8(%eax),%eax
81004d18:	85 c0                	test   %eax,%eax
81004d1a:	79 17                	jns    81004d33 <__sfputc_r+0x36>
81004d1c:	8b 45 10             	mov    0x10(%ebp),%eax
81004d1f:	8b 50 08             	mov    0x8(%eax),%edx
81004d22:	8b 45 10             	mov    0x10(%ebp),%eax
81004d25:	8b 40 18             	mov    0x18(%eax),%eax
81004d28:	39 c2                	cmp    %eax,%edx
81004d2a:	7c 21                	jl     81004d4d <__sfputc_r+0x50>
81004d2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d2f:	3c 0a                	cmp    $0xa,%al
81004d31:	74 1a                	je     81004d4d <__sfputc_r+0x50>
81004d33:	8b 45 10             	mov    0x10(%ebp),%eax
81004d36:	8b 00                	mov    (%eax),%eax
81004d38:	8d 48 01             	lea    0x1(%eax),%ecx
81004d3b:	8b 55 10             	mov    0x10(%ebp),%edx
81004d3e:	89 0a                	mov    %ecx,(%edx)
81004d40:	8b 55 0c             	mov    0xc(%ebp),%edx
81004d43:	88 10                	mov    %dl,(%eax)
81004d45:	0f b6 00             	movzbl (%eax),%eax
81004d48:	0f b6 c0             	movzbl %al,%eax
81004d4b:	eb 14                	jmp    81004d61 <__sfputc_r+0x64>
81004d4d:	83 ec 04             	sub    $0x4,%esp
81004d50:	ff 75 10             	pushl  0x10(%ebp)
81004d53:	ff 75 0c             	pushl  0xc(%ebp)
81004d56:	ff 75 08             	pushl  0x8(%ebp)
81004d59:	e8 c9 22 00 00       	call   81007027 <__swbuf_r>
81004d5e:	83 c4 10             	add    $0x10,%esp
81004d61:	c9                   	leave  
81004d62:	c3                   	ret    

81004d63 <__sfputs_r>:
81004d63:	55                   	push   %ebp
81004d64:	89 e5                	mov    %esp,%ebp
81004d66:	53                   	push   %ebx
81004d67:	83 ec 14             	sub    $0x14,%esp
81004d6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d6d:	8b 40 64             	mov    0x64(%eax),%eax
81004d70:	25 00 20 00 00       	and    $0x2000,%eax
81004d75:	85 c0                	test   %eax,%eax
81004d77:	74 4c                	je     81004dc5 <__sfputs_r+0x62>
81004d79:	8b 45 10             	mov    0x10(%ebp),%eax
81004d7c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d7f:	bb 00 00 00 00       	mov    $0x0,%ebx
81004d84:	eb 31                	jmp    81004db7 <__sfputs_r+0x54>
81004d86:	89 d8                	mov    %ebx,%eax
81004d88:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004d8f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d92:	01 d0                	add    %edx,%eax
81004d94:	8b 00                	mov    (%eax),%eax
81004d96:	83 ec 04             	sub    $0x4,%esp
81004d99:	ff 75 0c             	pushl  0xc(%ebp)
81004d9c:	50                   	push   %eax
81004d9d:	ff 75 08             	pushl  0x8(%ebp)
81004da0:	e8 19 29 00 00       	call   810076be <_fputwc_r>
81004da5:	83 c4 10             	add    $0x10,%esp
81004da8:	83 f8 ff             	cmp    $0xffffffff,%eax
81004dab:	75 07                	jne    81004db4 <__sfputs_r+0x51>
81004dad:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004db2:	eb 52                	jmp    81004e06 <__sfputs_r+0xa3>
81004db4:	83 c3 01             	add    $0x1,%ebx
81004db7:	8b 45 14             	mov    0x14(%ebp),%eax
81004dba:	c1 e8 02             	shr    $0x2,%eax
81004dbd:	89 da                	mov    %ebx,%edx
81004dbf:	39 d0                	cmp    %edx,%eax
81004dc1:	77 c3                	ja     81004d86 <__sfputs_r+0x23>
81004dc3:	eb 3c                	jmp    81004e01 <__sfputs_r+0x9e>
81004dc5:	bb 00 00 00 00       	mov    $0x0,%ebx
81004dca:	eb 2e                	jmp    81004dfa <__sfputs_r+0x97>
81004dcc:	89 da                	mov    %ebx,%edx
81004dce:	8b 45 10             	mov    0x10(%ebp),%eax
81004dd1:	01 d0                	add    %edx,%eax
81004dd3:	0f b6 00             	movzbl (%eax),%eax
81004dd6:	0f be c0             	movsbl %al,%eax
81004dd9:	83 ec 04             	sub    $0x4,%esp
81004ddc:	ff 75 0c             	pushl  0xc(%ebp)
81004ddf:	50                   	push   %eax
81004de0:	ff 75 08             	pushl  0x8(%ebp)
81004de3:	e8 15 ff ff ff       	call   81004cfd <__sfputc_r>
81004de8:	83 c4 10             	add    $0x10,%esp
81004deb:	83 f8 ff             	cmp    $0xffffffff,%eax
81004dee:	75 07                	jne    81004df7 <__sfputs_r+0x94>
81004df0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004df5:	eb 0f                	jmp    81004e06 <__sfputs_r+0xa3>
81004df7:	83 c3 01             	add    $0x1,%ebx
81004dfa:	89 d8                	mov    %ebx,%eax
81004dfc:	39 45 14             	cmp    %eax,0x14(%ebp)
81004dff:	77 cb                	ja     81004dcc <__sfputs_r+0x69>
81004e01:	b8 00 00 00 00       	mov    $0x0,%eax
81004e06:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004e09:	c9                   	leave  
81004e0a:	c3                   	ret    

81004e0b <vfiprintf>:
81004e0b:	55                   	push   %ebp
81004e0c:	89 e5                	mov    %esp,%ebp
81004e0e:	83 ec 18             	sub    $0x18,%esp
81004e11:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81004e16:	ff 75 10             	pushl  0x10(%ebp)
81004e19:	ff 75 0c             	pushl  0xc(%ebp)
81004e1c:	ff 75 08             	pushl  0x8(%ebp)
81004e1f:	50                   	push   %eax
81004e20:	e8 0b 00 00 00       	call   81004e30 <_vfiprintf_r>
81004e25:	83 c4 10             	add    $0x10,%esp
81004e28:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e2e:	c9                   	leave  
81004e2f:	c3                   	ret    

81004e30 <_vfiprintf_r>:
81004e30:	55                   	push   %ebp
81004e31:	89 e5                	mov    %esp,%ebp
81004e33:	57                   	push   %edi
81004e34:	56                   	push   %esi
81004e35:	53                   	push   %ebx
81004e36:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81004e3c:	c7 45 e4 63 4d 00 81 	movl   $0x81004d63,-0x1c(%ebp)
81004e43:	8b 45 08             	mov    0x8(%ebp),%eax
81004e46:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004e49:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004e4d:	74 18                	je     81004e67 <_vfiprintf_r+0x37>
81004e4f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004e52:	8b 40 38             	mov    0x38(%eax),%eax
81004e55:	85 c0                	test   %eax,%eax
81004e57:	75 0e                	jne    81004e67 <_vfiprintf_r+0x37>
81004e59:	83 ec 0c             	sub    $0xc,%esp
81004e5c:	ff 75 e0             	pushl  -0x20(%ebp)
81004e5f:	e8 73 ca ff ff       	call   810018d7 <__sinit>
81004e64:	83 c4 10             	add    $0x10,%esp
81004e67:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e6a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004e6e:	98                   	cwtl   
81004e6f:	83 e0 08             	and    $0x8,%eax
81004e72:	85 c0                	test   %eax,%eax
81004e74:	74 0a                	je     81004e80 <_vfiprintf_r+0x50>
81004e76:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e79:	8b 40 10             	mov    0x10(%eax),%eax
81004e7c:	85 c0                	test   %eax,%eax
81004e7e:	75 1f                	jne    81004e9f <_vfiprintf_r+0x6f>
81004e80:	83 ec 08             	sub    $0x8,%esp
81004e83:	ff 75 0c             	pushl  0xc(%ebp)
81004e86:	ff 75 08             	pushl  0x8(%ebp)
81004e89:	e8 12 23 00 00       	call   810071a0 <__swsetup_r>
81004e8e:	83 c4 10             	add    $0x10,%esp
81004e91:	85 c0                	test   %eax,%eax
81004e93:	74 0a                	je     81004e9f <_vfiprintf_r+0x6f>
81004e95:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004e9a:	e9 df 02 00 00       	jmp    8100517e <_vfiprintf_r+0x34e>
81004e9f:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004ea2:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81004ea9:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004ead:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004eb1:	8b 45 14             	mov    0x14(%ebp),%eax
81004eb4:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004eba:	89 de                	mov    %ebx,%esi
81004ebc:	eb 03                	jmp    81004ec1 <_vfiprintf_r+0x91>
81004ebe:	83 c3 01             	add    $0x1,%ebx
81004ec1:	0f b6 03             	movzbl (%ebx),%eax
81004ec4:	84 c0                	test   %al,%al
81004ec6:	74 07                	je     81004ecf <_vfiprintf_r+0x9f>
81004ec8:	0f b6 03             	movzbl (%ebx),%eax
81004ecb:	3c 25                	cmp    $0x25,%al
81004ecd:	75 ef                	jne    81004ebe <_vfiprintf_r+0x8e>
81004ecf:	89 d8                	mov    %ebx,%eax
81004ed1:	29 f0                	sub    %esi,%eax
81004ed3:	85 c0                	test   %eax,%eax
81004ed5:	74 2b                	je     81004f02 <_vfiprintf_r+0xd2>
81004ed7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004edd:	50                   	push   %eax
81004ede:	56                   	push   %esi
81004edf:	ff 75 0c             	pushl  0xc(%ebp)
81004ee2:	ff 75 08             	pushl  0x8(%ebp)
81004ee5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004ee8:	ff d0                	call   *%eax
81004eea:	83 c4 10             	add    $0x10,%esp
81004eed:	83 f8 ff             	cmp    $0xffffffff,%eax
81004ef0:	0f 84 68 02 00 00    	je     8100515e <_vfiprintf_r+0x32e>
81004ef6:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004ef9:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004eff:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004f02:	0f b6 03             	movzbl (%ebx),%eax
81004f05:	84 c0                	test   %al,%al
81004f07:	0f 84 54 02 00 00    	je     81005161 <_vfiprintf_r+0x331>
81004f0d:	83 c3 01             	add    $0x1,%ebx
81004f10:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81004f17:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004f1e:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004f25:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81004f2c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004f30:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81004f37:	c7 45 dc 08 89 00 81 	movl   $0x81008908,-0x24(%ebp)
81004f3e:	eb 1b                	jmp    81004f5b <_vfiprintf_r+0x12b>
81004f40:	8b 55 80             	mov    -0x80(%ebp),%edx
81004f43:	89 f0                	mov    %esi,%eax
81004f45:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004f48:	be 01 00 00 00       	mov    $0x1,%esi
81004f4d:	89 c1                	mov    %eax,%ecx
81004f4f:	d3 e6                	shl    %cl,%esi
81004f51:	89 f0                	mov    %esi,%eax
81004f53:	09 d0                	or     %edx,%eax
81004f55:	89 45 80             	mov    %eax,-0x80(%ebp)
81004f58:	83 c3 01             	add    $0x1,%ebx
81004f5b:	0f b6 03             	movzbl (%ebx),%eax
81004f5e:	0f be c0             	movsbl %al,%eax
81004f61:	83 ec 04             	sub    $0x4,%esp
81004f64:	6a 05                	push   $0x5
81004f66:	50                   	push   %eax
81004f67:	ff 75 dc             	pushl  -0x24(%ebp)
81004f6a:	e8 61 fa ff ff       	call   810049d0 <memchr>
81004f6f:	83 c4 10             	add    $0x10,%esp
81004f72:	89 c6                	mov    %eax,%esi
81004f74:	85 f6                	test   %esi,%esi
81004f76:	75 c8                	jne    81004f40 <_vfiprintf_r+0x110>
81004f78:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f7b:	83 e0 10             	and    $0x10,%eax
81004f7e:	85 c0                	test   %eax,%eax
81004f80:	74 04                	je     81004f86 <_vfiprintf_r+0x156>
81004f82:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81004f86:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f89:	83 e0 08             	and    $0x8,%eax
81004f8c:	85 c0                	test   %eax,%eax
81004f8e:	74 04                	je     81004f94 <_vfiprintf_r+0x164>
81004f90:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004f94:	0f b6 03             	movzbl (%ebx),%eax
81004f97:	3c 2a                	cmp    $0x2a,%al
81004f99:	75 50                	jne    81004feb <_vfiprintf_r+0x1bb>
81004f9b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004fa1:	8d 50 04             	lea    0x4(%eax),%edx
81004fa4:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81004faa:	8b 00                	mov    (%eax),%eax
81004fac:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004faf:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004fb2:	85 c0                	test   %eax,%eax
81004fb4:	79 11                	jns    81004fc7 <_vfiprintf_r+0x197>
81004fb6:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004fb9:	f7 d8                	neg    %eax
81004fbb:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004fbe:	8b 45 80             	mov    -0x80(%ebp),%eax
81004fc1:	83 c8 02             	or     $0x2,%eax
81004fc4:	89 45 80             	mov    %eax,-0x80(%ebp)
81004fc7:	83 c3 01             	add    $0x1,%ebx
81004fca:	eb 2d                	jmp    81004ff9 <_vfiprintf_r+0x1c9>
81004fcc:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004fcf:	89 d0                	mov    %edx,%eax
81004fd1:	c1 e0 02             	shl    $0x2,%eax
81004fd4:	01 d0                	add    %edx,%eax
81004fd6:	01 c0                	add    %eax,%eax
81004fd8:	89 c2                	mov    %eax,%edx
81004fda:	0f b6 03             	movzbl (%ebx),%eax
81004fdd:	0f be c0             	movsbl %al,%eax
81004fe0:	83 e8 30             	sub    $0x30,%eax
81004fe3:	01 d0                	add    %edx,%eax
81004fe5:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004fe8:	83 c3 01             	add    $0x1,%ebx
81004feb:	0f b6 03             	movzbl (%ebx),%eax
81004fee:	0f be c0             	movsbl %al,%eax
81004ff1:	83 e8 30             	sub    $0x30,%eax
81004ff4:	83 f8 09             	cmp    $0x9,%eax
81004ff7:	76 d3                	jbe    81004fcc <_vfiprintf_r+0x19c>
81004ff9:	0f b6 03             	movzbl (%ebx),%eax
81004ffc:	3c 2e                	cmp    $0x2e,%al
81004ffe:	75 67                	jne    81005067 <_vfiprintf_r+0x237>
81005000:	83 c3 01             	add    $0x1,%ebx
81005003:	0f b6 03             	movzbl (%ebx),%eax
81005006:	3c 2a                	cmp    $0x2a,%al
81005008:	75 27                	jne    81005031 <_vfiprintf_r+0x201>
8100500a:	83 c3 01             	add    $0x1,%ebx
8100500d:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81005013:	8d 50 04             	lea    0x4(%eax),%edx
81005016:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
8100501c:	8b 00                	mov    (%eax),%eax
8100501e:	89 45 84             	mov    %eax,-0x7c(%ebp)
81005021:	8b 45 84             	mov    -0x7c(%ebp),%eax
81005024:	85 c0                	test   %eax,%eax
81005026:	79 3f                	jns    81005067 <_vfiprintf_r+0x237>
81005028:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100502f:	eb 36                	jmp    81005067 <_vfiprintf_r+0x237>
81005031:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81005038:	eb 1f                	jmp    81005059 <_vfiprintf_r+0x229>
8100503a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100503d:	89 d0                	mov    %edx,%eax
8100503f:	c1 e0 02             	shl    $0x2,%eax
81005042:	01 d0                	add    %edx,%eax
81005044:	01 c0                	add    %eax,%eax
81005046:	89 c2                	mov    %eax,%edx
81005048:	0f b6 03             	movzbl (%ebx),%eax
8100504b:	0f be c0             	movsbl %al,%eax
8100504e:	83 e8 30             	sub    $0x30,%eax
81005051:	01 d0                	add    %edx,%eax
81005053:	89 45 84             	mov    %eax,-0x7c(%ebp)
81005056:	83 c3 01             	add    $0x1,%ebx
81005059:	0f b6 03             	movzbl (%ebx),%eax
8100505c:	0f be c0             	movsbl %al,%eax
8100505f:	83 e8 30             	sub    $0x30,%eax
81005062:	83 f8 09             	cmp    $0x9,%eax
81005065:	76 d3                	jbe    8100503a <_vfiprintf_r+0x20a>
81005067:	c7 45 dc 0e 89 00 81 	movl   $0x8100890e,-0x24(%ebp)
8100506e:	0f b6 03             	movzbl (%ebx),%eax
81005071:	0f be c0             	movsbl %al,%eax
81005074:	83 ec 04             	sub    $0x4,%esp
81005077:	6a 03                	push   $0x3
81005079:	50                   	push   %eax
8100507a:	ff 75 dc             	pushl  -0x24(%ebp)
8100507d:	e8 4e f9 ff ff       	call   810049d0 <memchr>
81005082:	83 c4 10             	add    $0x10,%esp
81005085:	89 c6                	mov    %eax,%esi
81005087:	85 f6                	test   %esi,%esi
81005089:	74 1b                	je     810050a6 <_vfiprintf_r+0x276>
8100508b:	8b 55 80             	mov    -0x80(%ebp),%edx
8100508e:	89 f0                	mov    %esi,%eax
81005090:	2b 45 dc             	sub    -0x24(%ebp),%eax
81005093:	be 40 00 00 00       	mov    $0x40,%esi
81005098:	89 c1                	mov    %eax,%ecx
8100509a:	d3 e6                	shl    %cl,%esi
8100509c:	89 f0                	mov    %esi,%eax
8100509e:	09 d0                	or     %edx,%eax
810050a0:	89 45 80             	mov    %eax,-0x80(%ebp)
810050a3:	83 c3 01             	add    $0x1,%ebx
810050a6:	89 d8                	mov    %ebx,%eax
810050a8:	8d 58 01             	lea    0x1(%eax),%ebx
810050ab:	0f b6 00             	movzbl (%eax),%eax
810050ae:	88 45 98             	mov    %al,-0x68(%ebp)
810050b1:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
810050b5:	0f be c0             	movsbl %al,%eax
810050b8:	83 ec 04             	sub    $0x4,%esp
810050bb:	6a 06                	push   $0x6
810050bd:	50                   	push   %eax
810050be:	68 12 89 00 81       	push   $0x81008912
810050c3:	e8 08 f9 ff ff       	call   810049d0 <memchr>
810050c8:	83 c4 10             	add    $0x10,%esp
810050cb:	89 c6                	mov    %eax,%esi
810050cd:	85 f6                	test   %esi,%esi
810050cf:	74 5a                	je     8100512b <_vfiprintf_r+0x2fb>
810050d1:	b8 00 00 00 00       	mov    $0x0,%eax
810050d6:	85 c0                	test   %eax,%eax
810050d8:	75 2e                	jne    81005108 <_vfiprintf_r+0x2d8>
810050da:	8b 45 80             	mov    -0x80(%ebp),%eax
810050dd:	25 00 01 00 00       	and    $0x100,%eax
810050e2:	85 c0                	test   %eax,%eax
810050e4:	74 11                	je     810050f7 <_vfiprintf_r+0x2c7>
810050e6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810050ec:	83 c0 0c             	add    $0xc,%eax
810050ef:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810050f5:	eb 55                	jmp    8100514c <_vfiprintf_r+0x31c>
810050f7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810050fd:	83 c0 08             	add    $0x8,%eax
81005100:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81005106:	eb 44                	jmp    8100514c <_vfiprintf_r+0x31c>
81005108:	83 ec 0c             	sub    $0xc,%esp
8100510b:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81005111:	50                   	push   %eax
81005112:	ff 75 e4             	pushl  -0x1c(%ebp)
81005115:	ff 75 0c             	pushl  0xc(%ebp)
81005118:	8d 45 80             	lea    -0x80(%ebp),%eax
8100511b:	50                   	push   %eax
8100511c:	ff 75 08             	pushl  0x8(%ebp)
8100511f:	e8 dc ae ff 7e       	call   0 <show_promot-0x81000000>
81005124:	83 c4 20             	add    $0x20,%esp
81005127:	89 c7                	mov    %eax,%edi
81005129:	eb 21                	jmp    8100514c <_vfiprintf_r+0x31c>
8100512b:	83 ec 0c             	sub    $0xc,%esp
8100512e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81005134:	50                   	push   %eax
81005135:	ff 75 e4             	pushl  -0x1c(%ebp)
81005138:	ff 75 0c             	pushl  0xc(%ebp)
8100513b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100513e:	50                   	push   %eax
8100513f:	ff 75 08             	pushl  0x8(%ebp)
81005142:	e8 da 01 00 00       	call   81005321 <_printf_i>
81005147:	83 c4 20             	add    $0x20,%esp
8100514a:	89 c7                	mov    %eax,%edi
8100514c:	83 ff ff             	cmp    $0xffffffff,%edi
8100514f:	74 13                	je     81005164 <_vfiprintf_r+0x334>
81005151:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005154:	01 f8                	add    %edi,%eax
81005156:	89 45 94             	mov    %eax,-0x6c(%ebp)
81005159:	e9 5c fd ff ff       	jmp    81004eba <_vfiprintf_r+0x8a>
8100515e:	90                   	nop
8100515f:	eb 04                	jmp    81005165 <_vfiprintf_r+0x335>
81005161:	90                   	nop
81005162:	eb 01                	jmp    81005165 <_vfiprintf_r+0x335>
81005164:	90                   	nop
81005165:	8b 45 0c             	mov    0xc(%ebp),%eax
81005168:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100516c:	98                   	cwtl   
8100516d:	83 e0 40             	and    $0x40,%eax
81005170:	85 c0                	test   %eax,%eax
81005172:	75 05                	jne    81005179 <_vfiprintf_r+0x349>
81005174:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005177:	eb 05                	jmp    8100517e <_vfiprintf_r+0x34e>
81005179:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100517e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005181:	5b                   	pop    %ebx
81005182:	5e                   	pop    %esi
81005183:	5f                   	pop    %edi
81005184:	5d                   	pop    %ebp
81005185:	c3                   	ret    

81005186 <_printf_common>:
81005186:	55                   	push   %ebp
81005187:	89 e5                	mov    %esp,%ebp
81005189:	83 ec 18             	sub    $0x18,%esp
8100518c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100518f:	8b 50 10             	mov    0x10(%eax),%edx
81005192:	8b 45 0c             	mov    0xc(%ebp),%eax
81005195:	8b 40 08             	mov    0x8(%eax),%eax
81005198:	39 c2                	cmp    %eax,%edx
8100519a:	0f 4c d0             	cmovl  %eax,%edx
8100519d:	8b 45 10             	mov    0x10(%ebp),%eax
810051a0:	89 10                	mov    %edx,(%eax)
810051a2:	8b 45 0c             	mov    0xc(%ebp),%eax
810051a5:	0f b6 40 43          	movzbl 0x43(%eax),%eax
810051a9:	84 c0                	test   %al,%al
810051ab:	74 0d                	je     810051ba <_printf_common+0x34>
810051ad:	8b 45 10             	mov    0x10(%ebp),%eax
810051b0:	8b 00                	mov    (%eax),%eax
810051b2:	8d 50 01             	lea    0x1(%eax),%edx
810051b5:	8b 45 10             	mov    0x10(%ebp),%eax
810051b8:	89 10                	mov    %edx,(%eax)
810051ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810051bd:	8b 00                	mov    (%eax),%eax
810051bf:	83 e0 20             	and    $0x20,%eax
810051c2:	85 c0                	test   %eax,%eax
810051c4:	74 0d                	je     810051d3 <_printf_common+0x4d>
810051c6:	8b 45 10             	mov    0x10(%ebp),%eax
810051c9:	8b 00                	mov    (%eax),%eax
810051cb:	8d 50 02             	lea    0x2(%eax),%edx
810051ce:	8b 45 10             	mov    0x10(%ebp),%eax
810051d1:	89 10                	mov    %edx,(%eax)
810051d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810051d6:	8b 00                	mov    (%eax),%eax
810051d8:	83 e0 06             	and    $0x6,%eax
810051db:	85 c0                	test   %eax,%eax
810051dd:	75 41                	jne    81005220 <_printf_common+0x9a>
810051df:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810051e6:	eb 24                	jmp    8100520c <_printf_common+0x86>
810051e8:	8b 45 0c             	mov    0xc(%ebp),%eax
810051eb:	83 c0 19             	add    $0x19,%eax
810051ee:	6a 01                	push   $0x1
810051f0:	50                   	push   %eax
810051f1:	ff 75 14             	pushl  0x14(%ebp)
810051f4:	ff 75 08             	pushl  0x8(%ebp)
810051f7:	8b 45 18             	mov    0x18(%ebp),%eax
810051fa:	ff d0                	call   *%eax
810051fc:	83 c4 10             	add    $0x10,%esp
810051ff:	83 f8 ff             	cmp    $0xffffffff,%eax
81005202:	0f 84 0b 01 00 00    	je     81005313 <_printf_common+0x18d>
81005208:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
8100520c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100520f:	8b 50 0c             	mov    0xc(%eax),%edx
81005212:	8b 45 10             	mov    0x10(%ebp),%eax
81005215:	8b 08                	mov    (%eax),%ecx
81005217:	89 d0                	mov    %edx,%eax
81005219:	29 c8                	sub    %ecx,%eax
8100521b:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100521e:	7c c8                	jl     810051e8 <_printf_common+0x62>
81005220:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005227:	8b 45 0c             	mov    0xc(%ebp),%eax
8100522a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100522e:	84 c0                	test   %al,%al
81005230:	74 04                	je     81005236 <_printf_common+0xb0>
81005232:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005236:	8b 45 0c             	mov    0xc(%ebp),%eax
81005239:	8b 00                	mov    (%eax),%eax
8100523b:	83 e0 20             	and    $0x20,%eax
8100523e:	85 c0                	test   %eax,%eax
81005240:	74 28                	je     8100526a <_printf_common+0xe4>
81005242:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005245:	8d 50 01             	lea    0x1(%eax),%edx
81005248:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100524b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100524e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81005253:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005256:	8d 50 01             	lea    0x1(%eax),%edx
81005259:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100525c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100525f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81005263:	8b 55 0c             	mov    0xc(%ebp),%edx
81005266:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100526a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100526d:	8b 55 0c             	mov    0xc(%ebp),%edx
81005270:	83 c2 43             	add    $0x43,%edx
81005273:	50                   	push   %eax
81005274:	52                   	push   %edx
81005275:	ff 75 14             	pushl  0x14(%ebp)
81005278:	ff 75 08             	pushl  0x8(%ebp)
8100527b:	8b 45 18             	mov    0x18(%ebp),%eax
8100527e:	ff d0                	call   *%eax
81005280:	83 c4 10             	add    $0x10,%esp
81005283:	83 f8 ff             	cmp    $0xffffffff,%eax
81005286:	0f 84 8a 00 00 00    	je     81005316 <_printf_common+0x190>
8100528c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100528f:	8b 50 0c             	mov    0xc(%eax),%edx
81005292:	8b 45 10             	mov    0x10(%ebp),%eax
81005295:	8b 08                	mov    (%eax),%ecx
81005297:	89 d0                	mov    %edx,%eax
81005299:	29 c8                	sub    %ecx,%eax
8100529b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100529e:	8b 45 0c             	mov    0xc(%ebp),%eax
810052a1:	8b 00                	mov    (%eax),%eax
810052a3:	83 e0 06             	and    $0x6,%eax
810052a6:	83 f8 04             	cmp    $0x4,%eax
810052a9:	75 06                	jne    810052b1 <_printf_common+0x12b>
810052ab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810052af:	79 07                	jns    810052b8 <_printf_common+0x132>
810052b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810052b8:	8b 45 0c             	mov    0xc(%ebp),%eax
810052bb:	8b 50 08             	mov    0x8(%eax),%edx
810052be:	8b 45 0c             	mov    0xc(%ebp),%eax
810052c1:	8b 40 10             	mov    0x10(%eax),%eax
810052c4:	39 c2                	cmp    %eax,%edx
810052c6:	7e 13                	jle    810052db <_printf_common+0x155>
810052c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810052cb:	8b 50 08             	mov    0x8(%eax),%edx
810052ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810052d1:	8b 48 10             	mov    0x10(%eax),%ecx
810052d4:	89 d0                	mov    %edx,%eax
810052d6:	29 c8                	sub    %ecx,%eax
810052d8:	01 45 f4             	add    %eax,-0xc(%ebp)
810052db:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810052e2:	eb 20                	jmp    81005304 <_printf_common+0x17e>
810052e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810052e7:	83 c0 1a             	add    $0x1a,%eax
810052ea:	6a 01                	push   $0x1
810052ec:	50                   	push   %eax
810052ed:	ff 75 14             	pushl  0x14(%ebp)
810052f0:	ff 75 08             	pushl  0x8(%ebp)
810052f3:	8b 45 18             	mov    0x18(%ebp),%eax
810052f6:	ff d0                	call   *%eax
810052f8:	83 c4 10             	add    $0x10,%esp
810052fb:	83 f8 ff             	cmp    $0xffffffff,%eax
810052fe:	74 19                	je     81005319 <_printf_common+0x193>
81005300:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
81005304:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005307:	3b 45 f4             	cmp    -0xc(%ebp),%eax
8100530a:	7c d8                	jl     810052e4 <_printf_common+0x15e>
8100530c:	b8 00 00 00 00       	mov    $0x0,%eax
81005311:	eb 0c                	jmp    8100531f <_printf_common+0x199>
81005313:	90                   	nop
81005314:	eb 04                	jmp    8100531a <_printf_common+0x194>
81005316:	90                   	nop
81005317:	eb 01                	jmp    8100531a <_printf_common+0x194>
81005319:	90                   	nop
8100531a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100531f:	c9                   	leave  
81005320:	c3                   	ret    

81005321 <_printf_i>:
81005321:	55                   	push   %ebp
81005322:	89 e5                	mov    %esp,%ebp
81005324:	53                   	push   %ebx
81005325:	83 ec 24             	sub    $0x24,%esp
81005328:	8b 45 0c             	mov    0xc(%ebp),%eax
8100532b:	83 c0 1b             	add    $0x1b,%eax
8100532e:	83 c0 28             	add    $0x28,%eax
81005331:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005334:	c7 45 e8 1c 89 00 81 	movl   $0x8100891c,-0x18(%ebp)
8100533b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100533e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005342:	0f be c0             	movsbl %al,%eax
81005345:	85 c0                	test   %eax,%eax
81005347:	0f 84 00 03 00 00    	je     8100564d <_printf_i+0x32c>
8100534d:	85 c0                	test   %eax,%eax
8100534f:	0f 88 52 03 00 00    	js     810056a7 <_printf_i+0x386>
81005355:	83 f8 78             	cmp    $0x78,%eax
81005358:	0f 8f 49 03 00 00    	jg     810056a7 <_printf_i+0x386>
8100535e:	83 f8 58             	cmp    $0x58,%eax
81005361:	0f 8c 40 03 00 00    	jl     810056a7 <_printf_i+0x386>
81005367:	83 e8 58             	sub    $0x58,%eax
8100536a:	83 f8 20             	cmp    $0x20,%eax
8100536d:	0f 87 34 03 00 00    	ja     810056a7 <_printf_i+0x386>
81005373:	8b 04 85 40 89 00 81 	mov    -0x7eff76c0(,%eax,4),%eax
8100537a:	ff e0                	jmp    *%eax
8100537c:	8b 45 18             	mov    0x18(%ebp),%eax
8100537f:	8b 00                	mov    (%eax),%eax
81005381:	8d 48 04             	lea    0x4(%eax),%ecx
81005384:	8b 55 18             	mov    0x18(%ebp),%edx
81005387:	89 0a                	mov    %ecx,(%edx)
81005389:	8b 00                	mov    (%eax),%eax
8100538b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100538f:	89 c2                	mov    %eax,%edx
81005391:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005394:	88 10                	mov    %dl,(%eax)
81005396:	8b 45 0c             	mov    0xc(%ebp),%eax
81005399:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810053a0:	e9 1c 03 00 00       	jmp    810056c1 <_printf_i+0x3a0>
810053a5:	8b 45 0c             	mov    0xc(%ebp),%eax
810053a8:	8b 00                	mov    (%eax),%eax
810053aa:	25 80 00 00 00       	and    $0x80,%eax
810053af:	85 c0                	test   %eax,%eax
810053b1:	74 11                	je     810053c4 <_printf_i+0xa3>
810053b3:	8b 45 18             	mov    0x18(%ebp),%eax
810053b6:	8b 00                	mov    (%eax),%eax
810053b8:	8d 48 04             	lea    0x4(%eax),%ecx
810053bb:	8b 55 18             	mov    0x18(%ebp),%edx
810053be:	89 0a                	mov    %ecx,(%edx)
810053c0:	8b 00                	mov    (%eax),%eax
810053c2:	eb 2d                	jmp    810053f1 <_printf_i+0xd0>
810053c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810053c7:	8b 00                	mov    (%eax),%eax
810053c9:	83 e0 40             	and    $0x40,%eax
810053cc:	85 c0                	test   %eax,%eax
810053ce:	74 12                	je     810053e2 <_printf_i+0xc1>
810053d0:	8b 45 18             	mov    0x18(%ebp),%eax
810053d3:	8b 00                	mov    (%eax),%eax
810053d5:	8d 48 04             	lea    0x4(%eax),%ecx
810053d8:	8b 55 18             	mov    0x18(%ebp),%edx
810053db:	89 0a                	mov    %ecx,(%edx)
810053dd:	8b 00                	mov    (%eax),%eax
810053df:	98                   	cwtl   
810053e0:	eb 0f                	jmp    810053f1 <_printf_i+0xd0>
810053e2:	8b 45 18             	mov    0x18(%ebp),%eax
810053e5:	8b 00                	mov    (%eax),%eax
810053e7:	8d 48 04             	lea    0x4(%eax),%ecx
810053ea:	8b 55 18             	mov    0x18(%ebp),%edx
810053ed:	89 0a                	mov    %ecx,(%edx)
810053ef:	8b 00                	mov    (%eax),%eax
810053f1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810053f4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810053f7:	85 c0                	test   %eax,%eax
810053f9:	79 0a                	jns    81005405 <_printf_i+0xe4>
810053fb:	f7 5d f4             	negl   -0xc(%ebp)
810053fe:	8b 45 0c             	mov    0xc(%ebp),%eax
81005401:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
81005405:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
8100540c:	e9 28 01 00 00       	jmp    81005539 <_printf_i+0x218>
81005411:	8b 45 0c             	mov    0xc(%ebp),%eax
81005414:	8b 00                	mov    (%eax),%eax
81005416:	25 80 00 00 00       	and    $0x80,%eax
8100541b:	85 c0                	test   %eax,%eax
8100541d:	74 11                	je     81005430 <_printf_i+0x10f>
8100541f:	8b 45 18             	mov    0x18(%ebp),%eax
81005422:	8b 00                	mov    (%eax),%eax
81005424:	8d 48 04             	lea    0x4(%eax),%ecx
81005427:	8b 55 18             	mov    0x18(%ebp),%edx
8100542a:	89 0a                	mov    %ecx,(%edx)
8100542c:	8b 00                	mov    (%eax),%eax
8100542e:	eb 2f                	jmp    8100545f <_printf_i+0x13e>
81005430:	8b 45 0c             	mov    0xc(%ebp),%eax
81005433:	8b 00                	mov    (%eax),%eax
81005435:	83 e0 40             	and    $0x40,%eax
81005438:	85 c0                	test   %eax,%eax
8100543a:	74 14                	je     81005450 <_printf_i+0x12f>
8100543c:	8b 45 18             	mov    0x18(%ebp),%eax
8100543f:	8b 00                	mov    (%eax),%eax
81005441:	8d 48 04             	lea    0x4(%eax),%ecx
81005444:	8b 55 18             	mov    0x18(%ebp),%edx
81005447:	89 0a                	mov    %ecx,(%edx)
81005449:	8b 00                	mov    (%eax),%eax
8100544b:	0f b7 c0             	movzwl %ax,%eax
8100544e:	eb 0f                	jmp    8100545f <_printf_i+0x13e>
81005450:	8b 45 18             	mov    0x18(%ebp),%eax
81005453:	8b 00                	mov    (%eax),%eax
81005455:	8d 48 04             	lea    0x4(%eax),%ecx
81005458:	8b 55 18             	mov    0x18(%ebp),%edx
8100545b:	89 0a                	mov    %ecx,(%edx)
8100545d:	8b 00                	mov    (%eax),%eax
8100545f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005462:	8b 45 0c             	mov    0xc(%ebp),%eax
81005465:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005469:	3c 6f                	cmp    $0x6f,%al
8100546b:	75 07                	jne    81005474 <_printf_i+0x153>
8100546d:	b8 08 00 00 00       	mov    $0x8,%eax
81005472:	eb 05                	jmp    81005479 <_printf_i+0x158>
81005474:	b8 0a 00 00 00       	mov    $0xa,%eax
81005479:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100547c:	e9 b1 00 00 00       	jmp    81005532 <_printf_i+0x211>
81005481:	8b 45 0c             	mov    0xc(%ebp),%eax
81005484:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81005488:	eb 1d                	jmp    810054a7 <_printf_i+0x186>
8100548a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100548d:	8b 00                	mov    (%eax),%eax
8100548f:	83 c8 20             	or     $0x20,%eax
81005492:	89 c2                	mov    %eax,%edx
81005494:	8b 45 0c             	mov    0xc(%ebp),%eax
81005497:	89 10                	mov    %edx,(%eax)
81005499:	8b 45 0c             	mov    0xc(%ebp),%eax
8100549c:	c6 40 45 78          	movb   $0x78,0x45(%eax)
810054a0:	c7 45 e8 2d 89 00 81 	movl   $0x8100892d,-0x18(%ebp)
810054a7:	8b 45 0c             	mov    0xc(%ebp),%eax
810054aa:	8b 00                	mov    (%eax),%eax
810054ac:	25 80 00 00 00       	and    $0x80,%eax
810054b1:	85 c0                	test   %eax,%eax
810054b3:	74 11                	je     810054c6 <_printf_i+0x1a5>
810054b5:	8b 45 18             	mov    0x18(%ebp),%eax
810054b8:	8b 00                	mov    (%eax),%eax
810054ba:	8d 48 04             	lea    0x4(%eax),%ecx
810054bd:	8b 55 18             	mov    0x18(%ebp),%edx
810054c0:	89 0a                	mov    %ecx,(%edx)
810054c2:	8b 00                	mov    (%eax),%eax
810054c4:	eb 2f                	jmp    810054f5 <_printf_i+0x1d4>
810054c6:	8b 45 0c             	mov    0xc(%ebp),%eax
810054c9:	8b 00                	mov    (%eax),%eax
810054cb:	83 e0 40             	and    $0x40,%eax
810054ce:	85 c0                	test   %eax,%eax
810054d0:	74 14                	je     810054e6 <_printf_i+0x1c5>
810054d2:	8b 45 18             	mov    0x18(%ebp),%eax
810054d5:	8b 00                	mov    (%eax),%eax
810054d7:	8d 48 04             	lea    0x4(%eax),%ecx
810054da:	8b 55 18             	mov    0x18(%ebp),%edx
810054dd:	89 0a                	mov    %ecx,(%edx)
810054df:	8b 00                	mov    (%eax),%eax
810054e1:	0f b7 c0             	movzwl %ax,%eax
810054e4:	eb 0f                	jmp    810054f5 <_printf_i+0x1d4>
810054e6:	8b 45 18             	mov    0x18(%ebp),%eax
810054e9:	8b 00                	mov    (%eax),%eax
810054eb:	8d 48 04             	lea    0x4(%eax),%ecx
810054ee:	8b 55 18             	mov    0x18(%ebp),%edx
810054f1:	89 0a                	mov    %ecx,(%edx)
810054f3:	8b 00                	mov    (%eax),%eax
810054f5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810054f8:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
810054ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81005502:	8b 00                	mov    (%eax),%eax
81005504:	83 e0 01             	and    $0x1,%eax
81005507:	85 c0                	test   %eax,%eax
81005509:	74 0f                	je     8100551a <_printf_i+0x1f9>
8100550b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100550e:	8b 00                	mov    (%eax),%eax
81005510:	83 c8 20             	or     $0x20,%eax
81005513:	89 c2                	mov    %eax,%edx
81005515:	8b 45 0c             	mov    0xc(%ebp),%eax
81005518:	89 10                	mov    %edx,(%eax)
8100551a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100551e:	75 11                	jne    81005531 <_printf_i+0x210>
81005520:	8b 45 0c             	mov    0xc(%ebp),%eax
81005523:	8b 00                	mov    (%eax),%eax
81005525:	83 e0 df             	and    $0xffffffdf,%eax
81005528:	89 c2                	mov    %eax,%edx
8100552a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100552d:	89 10                	mov    %edx,(%eax)
8100552f:	eb 01                	jmp    81005532 <_printf_i+0x211>
81005531:	90                   	nop
81005532:	8b 45 0c             	mov    0xc(%ebp),%eax
81005535:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81005539:	8b 45 0c             	mov    0xc(%ebp),%eax
8100553c:	8b 50 04             	mov    0x4(%eax),%edx
8100553f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005542:	89 50 08             	mov    %edx,0x8(%eax)
81005545:	8b 45 0c             	mov    0xc(%ebp),%eax
81005548:	8b 40 08             	mov    0x8(%eax),%eax
8100554b:	85 c0                	test   %eax,%eax
8100554d:	78 0f                	js     8100555e <_printf_i+0x23d>
8100554f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005552:	8b 00                	mov    (%eax),%eax
81005554:	83 e0 fb             	and    $0xfffffffb,%eax
81005557:	89 c2                	mov    %eax,%edx
81005559:	8b 45 0c             	mov    0xc(%ebp),%eax
8100555c:	89 10                	mov    %edx,(%eax)
8100555e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005562:	75 0a                	jne    8100556e <_printf_i+0x24d>
81005564:	8b 45 0c             	mov    0xc(%ebp),%eax
81005567:	8b 40 04             	mov    0x4(%eax),%eax
8100556a:	85 c0                	test   %eax,%eax
8100556c:	74 34                	je     810055a2 <_printf_i+0x281>
8100556e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81005571:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005574:	ba 00 00 00 00       	mov    $0x0,%edx
81005579:	f7 f1                	div    %ecx
8100557b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100557e:	01 d0                	add    %edx,%eax
81005580:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81005584:	0f b6 10             	movzbl (%eax),%edx
81005587:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100558a:	88 10                	mov    %dl,(%eax)
8100558c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100558f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005592:	ba 00 00 00 00       	mov    $0x0,%edx
81005597:	f7 f3                	div    %ebx
81005599:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100559c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810055a0:	75 cc                	jne    8100556e <_printf_i+0x24d>
810055a2:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
810055a6:	75 26                	jne    810055ce <_printf_i+0x2ad>
810055a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810055ab:	8b 00                	mov    (%eax),%eax
810055ad:	83 e0 01             	and    $0x1,%eax
810055b0:	85 c0                	test   %eax,%eax
810055b2:	74 1a                	je     810055ce <_printf_i+0x2ad>
810055b4:	8b 45 0c             	mov    0xc(%ebp),%eax
810055b7:	8b 50 04             	mov    0x4(%eax),%edx
810055ba:	8b 45 0c             	mov    0xc(%ebp),%eax
810055bd:	8b 40 10             	mov    0x10(%eax),%eax
810055c0:	39 c2                	cmp    %eax,%edx
810055c2:	7f 0a                	jg     810055ce <_printf_i+0x2ad>
810055c4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810055c8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810055cb:	c6 00 30             	movb   $0x30,(%eax)
810055ce:	8b 45 0c             	mov    0xc(%ebp),%eax
810055d1:	83 c0 1b             	add    $0x1b,%eax
810055d4:	83 c0 28             	add    $0x28,%eax
810055d7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810055da:	89 c2                	mov    %eax,%edx
810055dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810055df:	89 50 10             	mov    %edx,0x10(%eax)
810055e2:	e9 e2 00 00 00       	jmp    810056c9 <_printf_i+0x3a8>
810055e7:	8b 45 0c             	mov    0xc(%ebp),%eax
810055ea:	8b 00                	mov    (%eax),%eax
810055ec:	25 80 00 00 00       	and    $0x80,%eax
810055f1:	85 c0                	test   %eax,%eax
810055f3:	74 19                	je     8100560e <_printf_i+0x2ed>
810055f5:	8b 45 18             	mov    0x18(%ebp),%eax
810055f8:	8b 00                	mov    (%eax),%eax
810055fa:	8d 48 04             	lea    0x4(%eax),%ecx
810055fd:	8b 55 18             	mov    0x18(%ebp),%edx
81005600:	89 0a                	mov    %ecx,(%edx)
81005602:	8b 00                	mov    (%eax),%eax
81005604:	8b 55 0c             	mov    0xc(%ebp),%edx
81005607:	8b 52 14             	mov    0x14(%edx),%edx
8100560a:	89 10                	mov    %edx,(%eax)
8100560c:	eb 3f                	jmp    8100564d <_printf_i+0x32c>
8100560e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005611:	8b 00                	mov    (%eax),%eax
81005613:	83 e0 40             	and    $0x40,%eax
81005616:	85 c0                	test   %eax,%eax
81005618:	74 1c                	je     81005636 <_printf_i+0x315>
8100561a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100561d:	8b 58 14             	mov    0x14(%eax),%ebx
81005620:	8b 45 18             	mov    0x18(%ebp),%eax
81005623:	8b 00                	mov    (%eax),%eax
81005625:	8d 48 04             	lea    0x4(%eax),%ecx
81005628:	8b 55 18             	mov    0x18(%ebp),%edx
8100562b:	89 0a                	mov    %ecx,(%edx)
8100562d:	8b 00                	mov    (%eax),%eax
8100562f:	89 da                	mov    %ebx,%edx
81005631:	66 89 10             	mov    %dx,(%eax)
81005634:	eb 17                	jmp    8100564d <_printf_i+0x32c>
81005636:	8b 45 18             	mov    0x18(%ebp),%eax
81005639:	8b 00                	mov    (%eax),%eax
8100563b:	8d 48 04             	lea    0x4(%eax),%ecx
8100563e:	8b 55 18             	mov    0x18(%ebp),%edx
81005641:	89 0a                	mov    %ecx,(%edx)
81005643:	8b 00                	mov    (%eax),%eax
81005645:	8b 55 0c             	mov    0xc(%ebp),%edx
81005648:	8b 52 14             	mov    0x14(%edx),%edx
8100564b:	89 10                	mov    %edx,(%eax)
8100564d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005650:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81005657:	eb 70                	jmp    810056c9 <_printf_i+0x3a8>
81005659:	8b 45 18             	mov    0x18(%ebp),%eax
8100565c:	8b 00                	mov    (%eax),%eax
8100565e:	8d 48 04             	lea    0x4(%eax),%ecx
81005661:	8b 55 18             	mov    0x18(%ebp),%edx
81005664:	89 0a                	mov    %ecx,(%edx)
81005666:	8b 00                	mov    (%eax),%eax
81005668:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100566b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100566e:	8b 40 04             	mov    0x4(%eax),%eax
81005671:	83 ec 04             	sub    $0x4,%esp
81005674:	50                   	push   %eax
81005675:	6a 00                	push   $0x0
81005677:	ff 75 ec             	pushl  -0x14(%ebp)
8100567a:	e8 51 f3 ff ff       	call   810049d0 <memchr>
8100567f:	83 c4 10             	add    $0x10,%esp
81005682:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005685:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005689:	74 0e                	je     81005699 <_printf_i+0x378>
8100568b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100568e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81005691:	89 c2                	mov    %eax,%edx
81005693:	8b 45 0c             	mov    0xc(%ebp),%eax
81005696:	89 50 04             	mov    %edx,0x4(%eax)
81005699:	8b 45 0c             	mov    0xc(%ebp),%eax
8100569c:	8b 50 04             	mov    0x4(%eax),%edx
8100569f:	8b 45 0c             	mov    0xc(%ebp),%eax
810056a2:	89 50 10             	mov    %edx,0x10(%eax)
810056a5:	eb 1a                	jmp    810056c1 <_printf_i+0x3a0>
810056a7:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810056ab:	8b 45 0c             	mov    0xc(%ebp),%eax
810056ae:	0f b6 50 18          	movzbl 0x18(%eax),%edx
810056b2:	8b 45 ec             	mov    -0x14(%ebp),%eax
810056b5:	88 10                	mov    %dl,(%eax)
810056b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810056ba:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810056c1:	8b 45 0c             	mov    0xc(%ebp),%eax
810056c4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810056c8:	90                   	nop
810056c9:	83 ec 0c             	sub    $0xc,%esp
810056cc:	ff 75 14             	pushl  0x14(%ebp)
810056cf:	ff 75 10             	pushl  0x10(%ebp)
810056d2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810056d5:	50                   	push   %eax
810056d6:	ff 75 0c             	pushl  0xc(%ebp)
810056d9:	ff 75 08             	pushl  0x8(%ebp)
810056dc:	e8 a5 fa ff ff       	call   81005186 <_printf_common>
810056e1:	83 c4 20             	add    $0x20,%esp
810056e4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056e7:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
810056eb:	74 72                	je     8100575f <_printf_i+0x43e>
810056ed:	8b 45 0c             	mov    0xc(%ebp),%eax
810056f0:	8b 40 10             	mov    0x10(%eax),%eax
810056f3:	50                   	push   %eax
810056f4:	ff 75 ec             	pushl  -0x14(%ebp)
810056f7:	ff 75 10             	pushl  0x10(%ebp)
810056fa:	ff 75 08             	pushl  0x8(%ebp)
810056fd:	8b 45 14             	mov    0x14(%ebp),%eax
81005700:	ff d0                	call   *%eax
81005702:	83 c4 10             	add    $0x10,%esp
81005705:	83 f8 ff             	cmp    $0xffffffff,%eax
81005708:	74 58                	je     81005762 <_printf_i+0x441>
8100570a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100570d:	8b 00                	mov    (%eax),%eax
8100570f:	83 e0 02             	and    $0x2,%eax
81005712:	85 c0                	test   %eax,%eax
81005714:	74 39                	je     8100574f <_printf_i+0x42e>
81005716:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
8100571d:	eb 20                	jmp    8100573f <_printf_i+0x41e>
8100571f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005722:	83 c0 19             	add    $0x19,%eax
81005725:	6a 01                	push   $0x1
81005727:	50                   	push   %eax
81005728:	ff 75 10             	pushl  0x10(%ebp)
8100572b:	ff 75 08             	pushl  0x8(%ebp)
8100572e:	8b 45 14             	mov    0x14(%ebp),%eax
81005731:	ff d0                	call   *%eax
81005733:	83 c4 10             	add    $0x10,%esp
81005736:	83 f8 ff             	cmp    $0xffffffff,%eax
81005739:	74 2a                	je     81005765 <_printf_i+0x444>
8100573b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100573f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005742:	8b 40 0c             	mov    0xc(%eax),%eax
81005745:	8b 55 d8             	mov    -0x28(%ebp),%edx
81005748:	29 d0                	sub    %edx,%eax
8100574a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100574d:	7c d0                	jl     8100571f <_printf_i+0x3fe>
8100574f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005752:	8b 50 0c             	mov    0xc(%eax),%edx
81005755:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005758:	39 c2                	cmp    %eax,%edx
8100575a:	0f 4d c2             	cmovge %edx,%eax
8100575d:	eb 0c                	jmp    8100576b <_printf_i+0x44a>
8100575f:	90                   	nop
81005760:	eb 04                	jmp    81005766 <_printf_i+0x445>
81005762:	90                   	nop
81005763:	eb 01                	jmp    81005766 <_printf_i+0x445>
81005765:	90                   	nop
81005766:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100576b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100576e:	c9                   	leave  
8100576f:	c3                   	ret    

81005770 <_open_r>:
81005770:	55                   	push   %ebp
81005771:	89 e5                	mov    %esp,%ebp
81005773:	83 ec 18             	sub    $0x18,%esp
81005776:	c7 05 0c 9c 00 81 00 	movl   $0x0,0x81009c0c
8100577d:	00 00 00 
81005780:	83 ec 04             	sub    $0x4,%esp
81005783:	ff 75 14             	pushl  0x14(%ebp)
81005786:	ff 75 10             	pushl  0x10(%ebp)
81005789:	ff 75 0c             	pushl  0xc(%ebp)
8100578c:	e8 0b b5 ff ff       	call   81000c9c <open>
81005791:	83 c4 10             	add    $0x10,%esp
81005794:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005797:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100579b:	75 14                	jne    810057b1 <_open_r+0x41>
8100579d:	a1 0c 9c 00 81       	mov    0x81009c0c,%eax
810057a2:	85 c0                	test   %eax,%eax
810057a4:	74 0b                	je     810057b1 <_open_r+0x41>
810057a6:	8b 15 0c 9c 00 81    	mov    0x81009c0c,%edx
810057ac:	8b 45 08             	mov    0x8(%ebp),%eax
810057af:	89 10                	mov    %edx,(%eax)
810057b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057b4:	c9                   	leave  
810057b5:	c3                   	ret    

810057b6 <_iprintf_r>:
810057b6:	55                   	push   %ebp
810057b7:	89 e5                	mov    %esp,%ebp
810057b9:	83 ec 18             	sub    $0x18,%esp
810057bc:	8d 45 10             	lea    0x10(%ebp),%eax
810057bf:	89 45 f0             	mov    %eax,-0x10(%ebp)
810057c2:	8b 55 f0             	mov    -0x10(%ebp),%edx
810057c5:	8b 45 08             	mov    0x8(%ebp),%eax
810057c8:	8b 40 08             	mov    0x8(%eax),%eax
810057cb:	52                   	push   %edx
810057cc:	ff 75 0c             	pushl  0xc(%ebp)
810057cf:	50                   	push   %eax
810057d0:	ff 75 08             	pushl  0x8(%ebp)
810057d3:	e8 58 f6 ff ff       	call   81004e30 <_vfiprintf_r>
810057d8:	83 c4 10             	add    $0x10,%esp
810057db:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057de:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057e1:	c9                   	leave  
810057e2:	c3                   	ret    

810057e3 <iprintf>:
810057e3:	55                   	push   %ebp
810057e4:	89 e5                	mov    %esp,%ebp
810057e6:	83 ec 18             	sub    $0x18,%esp
810057e9:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810057ee:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057f1:	8d 45 0c             	lea    0xc(%ebp),%eax
810057f4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810057f7:	8b 55 ec             	mov    -0x14(%ebp),%edx
810057fa:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057fd:	8b 40 08             	mov    0x8(%eax),%eax
81005800:	52                   	push   %edx
81005801:	ff 75 08             	pushl  0x8(%ebp)
81005804:	50                   	push   %eax
81005805:	ff 75 f4             	pushl  -0xc(%ebp)
81005808:	e8 23 f6 ff ff       	call   81004e30 <_vfiprintf_r>
8100580d:	83 c4 10             	add    $0x10,%esp
81005810:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005813:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005816:	c9                   	leave  
81005817:	c3                   	ret    

81005818 <_puts_r>:
81005818:	55                   	push   %ebp
81005819:	89 e5                	mov    %esp,%ebp
8100581b:	83 ec 38             	sub    $0x38,%esp
8100581e:	83 ec 0c             	sub    $0xc,%esp
81005821:	ff 75 0c             	pushl  0xc(%ebp)
81005824:	e8 c7 13 00 00       	call   81006bf0 <strlen>
81005829:	83 c4 10             	add    $0x10,%esp
8100582c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100582f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005832:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005835:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005838:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100583b:	c7 45 d4 c4 89 00 81 	movl   $0x810089c4,-0x2c(%ebp)
81005842:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81005849:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100584c:	83 c0 01             	add    $0x1,%eax
8100584f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005852:	8d 45 cc             	lea    -0x34(%ebp),%eax
81005855:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005858:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100585f:	8b 45 08             	mov    0x8(%ebp),%eax
81005862:	8b 40 08             	mov    0x8(%eax),%eax
81005865:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005868:	8b 45 08             	mov    0x8(%ebp),%eax
8100586b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100586e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005872:	74 18                	je     8100588c <_puts_r+0x74>
81005874:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005877:	8b 40 38             	mov    0x38(%eax),%eax
8100587a:	85 c0                	test   %eax,%eax
8100587c:	75 0e                	jne    8100588c <_puts_r+0x74>
8100587e:	83 ec 0c             	sub    $0xc,%esp
81005881:	ff 75 ec             	pushl  -0x14(%ebp)
81005884:	e8 4e c0 ff ff       	call   810018d7 <__sinit>
81005889:	83 c4 10             	add    $0x10,%esp
8100588c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100588f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005893:	98                   	cwtl   
81005894:	25 00 20 00 00       	and    $0x2000,%eax
81005899:	85 c0                	test   %eax,%eax
8100589b:	75 24                	jne    810058c1 <_puts_r+0xa9>
8100589d:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058a0:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810058a4:	80 cc 20             	or     $0x20,%ah
810058a7:	89 c2                	mov    %eax,%edx
810058a9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058ac:	66 89 50 0c          	mov    %dx,0xc(%eax)
810058b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058b3:	8b 40 64             	mov    0x64(%eax),%eax
810058b6:	80 e4 df             	and    $0xdf,%ah
810058b9:	89 c2                	mov    %eax,%edx
810058bb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810058be:	89 50 64             	mov    %edx,0x64(%eax)
810058c1:	83 ec 04             	sub    $0x4,%esp
810058c4:	8d 45 dc             	lea    -0x24(%ebp),%eax
810058c7:	50                   	push   %eax
810058c8:	ff 75 f0             	pushl  -0x10(%ebp)
810058cb:	ff 75 08             	pushl  0x8(%ebp)
810058ce:	e8 46 d0 ff ff       	call   81002919 <__sfvwrite_r>
810058d3:	83 c4 10             	add    $0x10,%esp
810058d6:	85 c0                	test   %eax,%eax
810058d8:	74 07                	je     810058e1 <_puts_r+0xc9>
810058da:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810058df:	eb 05                	jmp    810058e6 <_puts_r+0xce>
810058e1:	b8 0a 00 00 00       	mov    $0xa,%eax
810058e6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810058e9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810058ec:	c9                   	leave  
810058ed:	c3                   	ret    

810058ee <puts>:
810058ee:	55                   	push   %ebp
810058ef:	89 e5                	mov    %esp,%ebp
810058f1:	83 ec 08             	sub    $0x8,%esp
810058f4:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810058f9:	83 ec 08             	sub    $0x8,%esp
810058fc:	ff 75 08             	pushl  0x8(%ebp)
810058ff:	50                   	push   %eax
81005900:	e8 13 ff ff ff       	call   81005818 <_puts_r>
81005905:	83 c4 10             	add    $0x10,%esp
81005908:	c9                   	leave  
81005909:	c3                   	ret    

8100590a <_realloc_r>:
8100590a:	55                   	push   %ebp
8100590b:	89 e5                	mov    %esp,%ebp
8100590d:	83 ec 78             	sub    $0x78,%esp
81005910:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81005914:	75 16                	jne    8100592c <_realloc_r+0x22>
81005916:	83 ec 08             	sub    $0x8,%esp
81005919:	ff 75 10             	pushl  0x10(%ebp)
8100591c:	ff 75 08             	pushl  0x8(%ebp)
8100591f:	e8 7d e8 ff ff       	call   810041a1 <_malloc_r>
81005924:	83 c4 10             	add    $0x10,%esp
81005927:	e9 b6 08 00 00       	jmp    810061e2 <_realloc_r+0x8d8>
8100592c:	83 ec 0c             	sub    $0xc,%esp
8100592f:	ff 75 08             	pushl  0x8(%ebp)
81005932:	e8 de f2 ff ff       	call   81004c15 <__malloc_lock>
81005937:	83 c4 10             	add    $0x10,%esp
8100593a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100593d:	83 e8 08             	sub    $0x8,%eax
81005940:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005943:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005946:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005949:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100594c:	8b 40 04             	mov    0x4(%eax),%eax
8100594f:	83 e0 fc             	and    $0xfffffffc,%eax
81005952:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005955:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005958:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100595b:	8b 45 10             	mov    0x10(%ebp),%eax
8100595e:	83 c0 0b             	add    $0xb,%eax
81005961:	83 f8 16             	cmp    $0x16,%eax
81005964:	76 0b                	jbe    81005971 <_realloc_r+0x67>
81005966:	8b 45 10             	mov    0x10(%ebp),%eax
81005969:	83 c0 0b             	add    $0xb,%eax
8100596c:	83 e0 f8             	and    $0xfffffff8,%eax
8100596f:	eb 05                	jmp    81005976 <_realloc_r+0x6c>
81005971:	b8 10 00 00 00       	mov    $0x10,%eax
81005976:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005979:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100597c:	85 c0                	test   %eax,%eax
8100597e:	78 08                	js     81005988 <_realloc_r+0x7e>
81005980:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005983:	3b 45 10             	cmp    0x10(%ebp),%eax
81005986:	73 13                	jae    8100599b <_realloc_r+0x91>
81005988:	8b 45 08             	mov    0x8(%ebp),%eax
8100598b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005991:	b8 00 00 00 00       	mov    $0x0,%eax
81005996:	e9 47 08 00 00       	jmp    810061e2 <_realloc_r+0x8d8>
8100599b:	8b 55 c0             	mov    -0x40(%ebp),%edx
8100599e:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059a1:	39 c2                	cmp    %eax,%edx
810059a3:	0f 8d 8b 07 00 00    	jge    81006134 <_realloc_r+0x82a>
810059a9:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810059ac:	8b 45 c0             	mov    -0x40(%ebp),%eax
810059af:	01 d0                	add    %edx,%eax
810059b1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810059b4:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810059b9:	8b 40 08             	mov    0x8(%eax),%eax
810059bc:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810059bf:	74 1e                	je     810059df <_realloc_r+0xd5>
810059c1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059c4:	8b 40 04             	mov    0x4(%eax),%eax
810059c7:	83 e0 fe             	and    $0xfffffffe,%eax
810059ca:	89 c2                	mov    %eax,%edx
810059cc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059cf:	01 d0                	add    %edx,%eax
810059d1:	8b 40 04             	mov    0x4(%eax),%eax
810059d4:	83 e0 01             	and    $0x1,%eax
810059d7:	85 c0                	test   %eax,%eax
810059d9:	0f 85 ca 00 00 00    	jne    81005aa9 <_realloc_r+0x19f>
810059df:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059e2:	8b 40 04             	mov    0x4(%eax),%eax
810059e5:	83 e0 fc             	and    $0xfffffffc,%eax
810059e8:	89 45 e8             	mov    %eax,-0x18(%ebp)
810059eb:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
810059f0:	8b 40 08             	mov    0x8(%eax),%eax
810059f3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810059f6:	75 71                	jne    81005a69 <_realloc_r+0x15f>
810059f8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810059fb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059fe:	01 d0                	add    %edx,%eax
81005a00:	89 c2                	mov    %eax,%edx
81005a02:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a05:	83 c0 10             	add    $0x10,%eax
81005a08:	39 c2                	cmp    %eax,%edx
81005a0a:	0f 8c a9 00 00 00    	jl     81005ab9 <_realloc_r+0x1af>
81005a10:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005a13:	01 45 f0             	add    %eax,-0x10(%ebp)
81005a16:	ba e0 90 00 81       	mov    $0x810090e0,%edx
81005a1b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81005a1e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a21:	01 c8                	add    %ecx,%eax
81005a23:	89 42 08             	mov    %eax,0x8(%edx)
81005a26:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a29:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005a2c:	89 c2                	mov    %eax,%edx
81005a2e:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81005a33:	8b 40 08             	mov    0x8(%eax),%eax
81005a36:	83 ca 01             	or     $0x1,%edx
81005a39:	89 50 04             	mov    %edx,0x4(%eax)
81005a3c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a3f:	8b 40 04             	mov    0x4(%eax),%eax
81005a42:	83 e0 01             	and    $0x1,%eax
81005a45:	0b 45 bc             	or     -0x44(%ebp),%eax
81005a48:	89 c2                	mov    %eax,%edx
81005a4a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a4d:	89 50 04             	mov    %edx,0x4(%eax)
81005a50:	83 ec 0c             	sub    $0xc,%esp
81005a53:	ff 75 08             	pushl  0x8(%ebp)
81005a56:	e8 c0 f1 ff ff       	call   81004c1b <__malloc_unlock>
81005a5b:	83 c4 10             	add    $0x10,%esp
81005a5e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a61:	83 c0 08             	add    $0x8,%eax
81005a64:	e9 79 07 00 00       	jmp    810061e2 <_realloc_r+0x8d8>
81005a69:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005a6c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a6f:	01 d0                	add    %edx,%eax
81005a71:	89 c2                	mov    %eax,%edx
81005a73:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a76:	39 c2                	cmp    %eax,%edx
81005a78:	7c 3f                	jl     81005ab9 <_realloc_r+0x1af>
81005a7a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a7d:	8b 40 0c             	mov    0xc(%eax),%eax
81005a80:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005a83:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a86:	8b 40 08             	mov    0x8(%eax),%eax
81005a89:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005a8c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005a8f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005a92:	89 50 0c             	mov    %edx,0xc(%eax)
81005a95:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005a98:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005a9b:	89 50 08             	mov    %edx,0x8(%eax)
81005a9e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005aa1:	01 45 f0             	add    %eax,-0x10(%ebp)
81005aa4:	e9 8c 06 00 00       	jmp    81006135 <_realloc_r+0x82b>
81005aa9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005ab0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005ab7:	eb 01                	jmp    81005aba <_realloc_r+0x1b0>
81005ab9:	90                   	nop
81005aba:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005abd:	8b 40 04             	mov    0x4(%eax),%eax
81005ac0:	83 e0 01             	and    $0x1,%eax
81005ac3:	85 c0                	test   %eax,%eax
81005ac5:	0f 85 d6 04 00 00    	jne    81005fa1 <_realloc_r+0x697>
81005acb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ace:	8b 00                	mov    (%eax),%eax
81005ad0:	f7 d8                	neg    %eax
81005ad2:	89 c2                	mov    %eax,%edx
81005ad4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ad7:	01 d0                	add    %edx,%eax
81005ad9:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005adc:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005adf:	8b 40 04             	mov    0x4(%eax),%eax
81005ae2:	83 e0 fc             	and    $0xfffffffc,%eax
81005ae5:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005ae8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005aec:	0f 84 4a 03 00 00    	je     81005e3c <_realloc_r+0x532>
81005af2:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81005af7:	8b 40 08             	mov    0x8(%eax),%eax
81005afa:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005afd:	0f 85 b0 01 00 00    	jne    81005cb3 <_realloc_r+0x3a9>
81005b03:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005b06:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005b09:	01 c2                	add    %eax,%edx
81005b0b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005b0e:	01 d0                	add    %edx,%eax
81005b10:	89 c2                	mov    %eax,%edx
81005b12:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005b15:	83 c0 10             	add    $0x10,%eax
81005b18:	39 c2                	cmp    %eax,%edx
81005b1a:	0f 8c 1c 03 00 00    	jl     81005e3c <_realloc_r+0x532>
81005b20:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b23:	8b 40 0c             	mov    0xc(%eax),%eax
81005b26:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005b29:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b2c:	8b 40 08             	mov    0x8(%eax),%eax
81005b2f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005b32:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005b35:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005b38:	89 50 0c             	mov    %edx,0xc(%eax)
81005b3b:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005b3e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005b41:	89 50 08             	mov    %edx,0x8(%eax)
81005b44:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b47:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b4a:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005b4d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005b50:	01 d0                	add    %edx,%eax
81005b52:	01 45 f0             	add    %eax,-0x10(%ebp)
81005b55:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b58:	83 c0 08             	add    $0x8,%eax
81005b5b:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005b5e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005b61:	83 e8 04             	sub    $0x4,%eax
81005b64:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005b67:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005b6b:	0f 87 de 00 00 00    	ja     81005c4f <_realloc_r+0x345>
81005b71:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b74:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b77:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005b7a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005b7d:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005b81:	0f 86 90 00 00 00    	jbe    81005c17 <_realloc_r+0x30d>
81005b87:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b8a:	8d 42 04             	lea    0x4(%edx),%eax
81005b8d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b90:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b93:	8d 48 04             	lea    0x4(%eax),%ecx
81005b96:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b99:	8b 12                	mov    (%edx),%edx
81005b9b:	89 10                	mov    %edx,(%eax)
81005b9d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005ba0:	8d 42 04             	lea    0x4(%edx),%eax
81005ba3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ba6:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ba9:	8d 48 04             	lea    0x4(%eax),%ecx
81005bac:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005baf:	8b 12                	mov    (%edx),%edx
81005bb1:	89 10                	mov    %edx,(%eax)
81005bb3:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005bb7:	76 5e                	jbe    81005c17 <_realloc_r+0x30d>
81005bb9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bbc:	8d 42 04             	lea    0x4(%edx),%eax
81005bbf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bc2:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bc5:	8d 48 04             	lea    0x4(%eax),%ecx
81005bc8:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bcb:	8b 12                	mov    (%edx),%edx
81005bcd:	89 10                	mov    %edx,(%eax)
81005bcf:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bd2:	8d 42 04             	lea    0x4(%edx),%eax
81005bd5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bd8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bdb:	8d 48 04             	lea    0x4(%eax),%ecx
81005bde:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005be1:	8b 12                	mov    (%edx),%edx
81005be3:	89 10                	mov    %edx,(%eax)
81005be5:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005be9:	76 2c                	jbe    81005c17 <_realloc_r+0x30d>
81005beb:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bee:	8d 42 04             	lea    0x4(%edx),%eax
81005bf1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bf4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bf7:	8d 48 04             	lea    0x4(%eax),%ecx
81005bfa:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bfd:	8b 12                	mov    (%edx),%edx
81005bff:	89 10                	mov    %edx,(%eax)
81005c01:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c04:	8d 42 04             	lea    0x4(%edx),%eax
81005c07:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c0a:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c0d:	8d 48 04             	lea    0x4(%eax),%ecx
81005c10:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c13:	8b 12                	mov    (%edx),%edx
81005c15:	89 10                	mov    %edx,(%eax)
81005c17:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c1a:	8d 42 04             	lea    0x4(%edx),%eax
81005c1d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c20:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c23:	8d 48 04             	lea    0x4(%eax),%ecx
81005c26:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c29:	8b 12                	mov    (%edx),%edx
81005c2b:	89 10                	mov    %edx,(%eax)
81005c2d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c30:	8d 42 04             	lea    0x4(%edx),%eax
81005c33:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c36:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c39:	8d 48 04             	lea    0x4(%eax),%ecx
81005c3c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c3f:	8b 12                	mov    (%edx),%edx
81005c41:	89 10                	mov    %edx,(%eax)
81005c43:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005c46:	8b 10                	mov    (%eax),%edx
81005c48:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c4b:	89 10                	mov    %edx,(%eax)
81005c4d:	eb 14                	jmp    81005c63 <_realloc_r+0x359>
81005c4f:	83 ec 04             	sub    $0x4,%esp
81005c52:	ff 75 a0             	pushl  -0x60(%ebp)
81005c55:	ff 75 0c             	pushl  0xc(%ebp)
81005c58:	ff 75 a8             	pushl  -0x58(%ebp)
81005c5b:	e8 a0 ee ff ff       	call   81004b00 <memmove>
81005c60:	83 c4 10             	add    $0x10,%esp
81005c63:	ba e0 90 00 81       	mov    $0x810090e0,%edx
81005c68:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005c6b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c6e:	01 c8                	add    %ecx,%eax
81005c70:	89 42 08             	mov    %eax,0x8(%edx)
81005c73:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c76:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005c79:	89 c2                	mov    %eax,%edx
81005c7b:	b8 e0 90 00 81       	mov    $0x810090e0,%eax
81005c80:	8b 40 08             	mov    0x8(%eax),%eax
81005c83:	83 ca 01             	or     $0x1,%edx
81005c86:	89 50 04             	mov    %edx,0x4(%eax)
81005c89:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c8c:	8b 40 04             	mov    0x4(%eax),%eax
81005c8f:	83 e0 01             	and    $0x1,%eax
81005c92:	0b 45 bc             	or     -0x44(%ebp),%eax
81005c95:	89 c2                	mov    %eax,%edx
81005c97:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c9a:	89 50 04             	mov    %edx,0x4(%eax)
81005c9d:	83 ec 0c             	sub    $0xc,%esp
81005ca0:	ff 75 08             	pushl  0x8(%ebp)
81005ca3:	e8 73 ef ff ff       	call   81004c1b <__malloc_unlock>
81005ca8:	83 c4 10             	add    $0x10,%esp
81005cab:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005cae:	e9 2f 05 00 00       	jmp    810061e2 <_realloc_r+0x8d8>
81005cb3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005cb6:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005cb9:	01 c2                	add    %eax,%edx
81005cbb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005cbe:	01 d0                	add    %edx,%eax
81005cc0:	89 c2                	mov    %eax,%edx
81005cc2:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005cc5:	39 c2                	cmp    %eax,%edx
81005cc7:	0f 8c 6f 01 00 00    	jl     81005e3c <_realloc_r+0x532>
81005ccd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cd0:	8b 40 0c             	mov    0xc(%eax),%eax
81005cd3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005cd6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cd9:	8b 40 08             	mov    0x8(%eax),%eax
81005cdc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005cdf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005ce2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005ce5:	89 50 0c             	mov    %edx,0xc(%eax)
81005ce8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005ceb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005cee:	89 50 08             	mov    %edx,0x8(%eax)
81005cf1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005cf4:	8b 40 0c             	mov    0xc(%eax),%eax
81005cf7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005cfa:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005cfd:	8b 40 08             	mov    0x8(%eax),%eax
81005d00:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005d03:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005d06:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005d09:	89 50 0c             	mov    %edx,0xc(%eax)
81005d0c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005d0f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005d12:	89 50 08             	mov    %edx,0x8(%eax)
81005d15:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005d18:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005d1b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005d1e:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005d21:	01 d0                	add    %edx,%eax
81005d23:	01 45 f0             	add    %eax,-0x10(%ebp)
81005d26:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d29:	83 c0 08             	add    $0x8,%eax
81005d2c:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005d2f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005d32:	83 e8 04             	sub    $0x4,%eax
81005d35:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005d38:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81005d3c:	0f 87 e1 00 00 00    	ja     81005e23 <_realloc_r+0x519>
81005d42:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d45:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d48:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005d4b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005d4e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81005d52:	0f 86 90 00 00 00    	jbe    81005de8 <_realloc_r+0x4de>
81005d58:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d5b:	8d 42 04             	lea    0x4(%edx),%eax
81005d5e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d61:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d64:	8d 48 04             	lea    0x4(%eax),%ecx
81005d67:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d6a:	8b 12                	mov    (%edx),%edx
81005d6c:	89 10                	mov    %edx,(%eax)
81005d6e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d71:	8d 42 04             	lea    0x4(%edx),%eax
81005d74:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d77:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d7a:	8d 48 04             	lea    0x4(%eax),%ecx
81005d7d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d80:	8b 12                	mov    (%edx),%edx
81005d82:	89 10                	mov    %edx,(%eax)
81005d84:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81005d88:	76 5e                	jbe    81005de8 <_realloc_r+0x4de>
81005d8a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d8d:	8d 42 04             	lea    0x4(%edx),%eax
81005d90:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d93:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d96:	8d 48 04             	lea    0x4(%eax),%ecx
81005d99:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d9c:	8b 12                	mov    (%edx),%edx
81005d9e:	89 10                	mov    %edx,(%eax)
81005da0:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005da3:	8d 42 04             	lea    0x4(%edx),%eax
81005da6:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005da9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dac:	8d 48 04             	lea    0x4(%eax),%ecx
81005daf:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005db2:	8b 12                	mov    (%edx),%edx
81005db4:	89 10                	mov    %edx,(%eax)
81005db6:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81005dba:	76 2c                	jbe    81005de8 <_realloc_r+0x4de>
81005dbc:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005dbf:	8d 42 04             	lea    0x4(%edx),%eax
81005dc2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005dc5:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dc8:	8d 48 04             	lea    0x4(%eax),%ecx
81005dcb:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dce:	8b 12                	mov    (%edx),%edx
81005dd0:	89 10                	mov    %edx,(%eax)
81005dd2:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005dd5:	8d 42 04             	lea    0x4(%edx),%eax
81005dd8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005ddb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dde:	8d 48 04             	lea    0x4(%eax),%ecx
81005de1:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005de4:	8b 12                	mov    (%edx),%edx
81005de6:	89 10                	mov    %edx,(%eax)
81005de8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005deb:	8d 42 04             	lea    0x4(%edx),%eax
81005dee:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005df1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005df4:	8d 48 04             	lea    0x4(%eax),%ecx
81005df7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dfa:	8b 12                	mov    (%edx),%edx
81005dfc:	89 10                	mov    %edx,(%eax)
81005dfe:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005e01:	8d 42 04             	lea    0x4(%edx),%eax
81005e04:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005e07:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e0a:	8d 48 04             	lea    0x4(%eax),%ecx
81005e0d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005e10:	8b 12                	mov    (%edx),%edx
81005e12:	89 10                	mov    %edx,(%eax)
81005e14:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005e17:	8b 10                	mov    (%eax),%edx
81005e19:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005e1c:	89 10                	mov    %edx,(%eax)
81005e1e:	e9 12 03 00 00       	jmp    81006135 <_realloc_r+0x82b>
81005e23:	83 ec 04             	sub    $0x4,%esp
81005e26:	ff 75 a4             	pushl  -0x5c(%ebp)
81005e29:	ff 75 0c             	pushl  0xc(%ebp)
81005e2c:	ff 75 a8             	pushl  -0x58(%ebp)
81005e2f:	e8 cc ec ff ff       	call   81004b00 <memmove>
81005e34:	83 c4 10             	add    $0x10,%esp
81005e37:	e9 f9 02 00 00       	jmp    81006135 <_realloc_r+0x82b>
81005e3c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81005e40:	0f 84 5b 01 00 00    	je     81005fa1 <_realloc_r+0x697>
81005e46:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005e49:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005e4c:	01 d0                	add    %edx,%eax
81005e4e:	89 c2                	mov    %eax,%edx
81005e50:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e53:	39 c2                	cmp    %eax,%edx
81005e55:	0f 8c 46 01 00 00    	jl     81005fa1 <_realloc_r+0x697>
81005e5b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e5e:	8b 40 0c             	mov    0xc(%eax),%eax
81005e61:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005e64:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e67:	8b 40 08             	mov    0x8(%eax),%eax
81005e6a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005e6d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005e70:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005e73:	89 50 0c             	mov    %edx,0xc(%eax)
81005e76:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005e79:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005e7c:	89 50 08             	mov    %edx,0x8(%eax)
81005e7f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e82:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005e85:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005e88:	01 45 f0             	add    %eax,-0x10(%ebp)
81005e8b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005e8e:	83 c0 08             	add    $0x8,%eax
81005e91:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005e94:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005e97:	83 e8 04             	sub    $0x4,%eax
81005e9a:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005e9d:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81005ea1:	0f 87 e1 00 00 00    	ja     81005f88 <_realloc_r+0x67e>
81005ea7:	8b 45 0c             	mov    0xc(%ebp),%eax
81005eaa:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ead:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005eb0:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005eb3:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81005eb7:	0f 86 90 00 00 00    	jbe    81005f4d <_realloc_r+0x643>
81005ebd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ec0:	8d 42 04             	lea    0x4(%edx),%eax
81005ec3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ec6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005ec9:	8d 48 04             	lea    0x4(%eax),%ecx
81005ecc:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ecf:	8b 12                	mov    (%edx),%edx
81005ed1:	89 10                	mov    %edx,(%eax)
81005ed3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ed6:	8d 42 04             	lea    0x4(%edx),%eax
81005ed9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005edc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005edf:	8d 48 04             	lea    0x4(%eax),%ecx
81005ee2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ee5:	8b 12                	mov    (%edx),%edx
81005ee7:	89 10                	mov    %edx,(%eax)
81005ee9:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81005eed:	76 5e                	jbe    81005f4d <_realloc_r+0x643>
81005eef:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ef2:	8d 42 04             	lea    0x4(%edx),%eax
81005ef5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ef8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005efb:	8d 48 04             	lea    0x4(%eax),%ecx
81005efe:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f01:	8b 12                	mov    (%edx),%edx
81005f03:	89 10                	mov    %edx,(%eax)
81005f05:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f08:	8d 42 04             	lea    0x4(%edx),%eax
81005f0b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f0e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f11:	8d 48 04             	lea    0x4(%eax),%ecx
81005f14:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f17:	8b 12                	mov    (%edx),%edx
81005f19:	89 10                	mov    %edx,(%eax)
81005f1b:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81005f1f:	76 2c                	jbe    81005f4d <_realloc_r+0x643>
81005f21:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f24:	8d 42 04             	lea    0x4(%edx),%eax
81005f27:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f2a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f2d:	8d 48 04             	lea    0x4(%eax),%ecx
81005f30:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f33:	8b 12                	mov    (%edx),%edx
81005f35:	89 10                	mov    %edx,(%eax)
81005f37:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f3a:	8d 42 04             	lea    0x4(%edx),%eax
81005f3d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f40:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f43:	8d 48 04             	lea    0x4(%eax),%ecx
81005f46:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f49:	8b 12                	mov    (%edx),%edx
81005f4b:	89 10                	mov    %edx,(%eax)
81005f4d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f50:	8d 42 04             	lea    0x4(%edx),%eax
81005f53:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f56:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f59:	8d 48 04             	lea    0x4(%eax),%ecx
81005f5c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f5f:	8b 12                	mov    (%edx),%edx
81005f61:	89 10                	mov    %edx,(%eax)
81005f63:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f66:	8d 42 04             	lea    0x4(%edx),%eax
81005f69:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f6c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f6f:	8d 48 04             	lea    0x4(%eax),%ecx
81005f72:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f75:	8b 12                	mov    (%edx),%edx
81005f77:	89 10                	mov    %edx,(%eax)
81005f79:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005f7c:	8b 10                	mov    (%eax),%edx
81005f7e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f81:	89 10                	mov    %edx,(%eax)
81005f83:	e9 ad 01 00 00       	jmp    81006135 <_realloc_r+0x82b>
81005f88:	83 ec 04             	sub    $0x4,%esp
81005f8b:	ff 75 9c             	pushl  -0x64(%ebp)
81005f8e:	ff 75 0c             	pushl  0xc(%ebp)
81005f91:	ff 75 a8             	pushl  -0x58(%ebp)
81005f94:	e8 67 eb ff ff       	call   81004b00 <memmove>
81005f99:	83 c4 10             	add    $0x10,%esp
81005f9c:	e9 94 01 00 00       	jmp    81006135 <_realloc_r+0x82b>
81005fa1:	83 ec 08             	sub    $0x8,%esp
81005fa4:	ff 75 10             	pushl  0x10(%ebp)
81005fa7:	ff 75 08             	pushl  0x8(%ebp)
81005faa:	e8 f2 e1 ff ff       	call   810041a1 <_malloc_r>
81005faf:	83 c4 10             	add    $0x10,%esp
81005fb2:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005fb5:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81005fb9:	75 18                	jne    81005fd3 <_realloc_r+0x6c9>
81005fbb:	83 ec 0c             	sub    $0xc,%esp
81005fbe:	ff 75 08             	pushl  0x8(%ebp)
81005fc1:	e8 55 ec ff ff       	call   81004c1b <__malloc_unlock>
81005fc6:	83 c4 10             	add    $0x10,%esp
81005fc9:	b8 00 00 00 00       	mov    $0x0,%eax
81005fce:	e9 0f 02 00 00       	jmp    810061e2 <_realloc_r+0x8d8>
81005fd3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005fd6:	83 e8 08             	sub    $0x8,%eax
81005fd9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fdc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005fdf:	8b 40 04             	mov    0x4(%eax),%eax
81005fe2:	83 e0 fe             	and    $0xfffffffe,%eax
81005fe5:	89 c2                	mov    %eax,%edx
81005fe7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005fea:	01 d0                	add    %edx,%eax
81005fec:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81005fef:	75 17                	jne    81006008 <_realloc_r+0x6fe>
81005ff1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005ff4:	8b 40 04             	mov    0x4(%eax),%eax
81005ff7:	83 e0 fc             	and    $0xfffffffc,%eax
81005ffa:	01 45 f0             	add    %eax,-0x10(%ebp)
81005ffd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81006000:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006003:	e9 2d 01 00 00       	jmp    81006135 <_realloc_r+0x82b>
81006008:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100600b:	83 e8 04             	sub    $0x4,%eax
8100600e:	89 45 98             	mov    %eax,-0x68(%ebp)
81006011:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81006015:	0f 87 de 00 00 00    	ja     810060f9 <_realloc_r+0x7ef>
8100601b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100601e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006021:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006024:	89 45 c8             	mov    %eax,-0x38(%ebp)
81006027:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
8100602b:	0f 86 90 00 00 00    	jbe    810060c1 <_realloc_r+0x7b7>
81006031:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006034:	8d 42 04             	lea    0x4(%edx),%eax
81006037:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100603a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100603d:	8d 48 04             	lea    0x4(%eax),%ecx
81006040:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006043:	8b 12                	mov    (%edx),%edx
81006045:	89 10                	mov    %edx,(%eax)
81006047:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100604a:	8d 42 04             	lea    0x4(%edx),%eax
8100604d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006050:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006053:	8d 48 04             	lea    0x4(%eax),%ecx
81006056:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006059:	8b 12                	mov    (%edx),%edx
8100605b:	89 10                	mov    %edx,(%eax)
8100605d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81006061:	76 5e                	jbe    810060c1 <_realloc_r+0x7b7>
81006063:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006066:	8d 42 04             	lea    0x4(%edx),%eax
81006069:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100606c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100606f:	8d 48 04             	lea    0x4(%eax),%ecx
81006072:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006075:	8b 12                	mov    (%edx),%edx
81006077:	89 10                	mov    %edx,(%eax)
81006079:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100607c:	8d 42 04             	lea    0x4(%edx),%eax
8100607f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006082:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006085:	8d 48 04             	lea    0x4(%eax),%ecx
81006088:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100608b:	8b 12                	mov    (%edx),%edx
8100608d:	89 10                	mov    %edx,(%eax)
8100608f:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006093:	76 2c                	jbe    810060c1 <_realloc_r+0x7b7>
81006095:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006098:	8d 42 04             	lea    0x4(%edx),%eax
8100609b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100609e:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060a1:	8d 48 04             	lea    0x4(%eax),%ecx
810060a4:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060a7:	8b 12                	mov    (%edx),%edx
810060a9:	89 10                	mov    %edx,(%eax)
810060ab:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060ae:	8d 42 04             	lea    0x4(%edx),%eax
810060b1:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060b4:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060b7:	8d 48 04             	lea    0x4(%eax),%ecx
810060ba:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060bd:	8b 12                	mov    (%edx),%edx
810060bf:	89 10                	mov    %edx,(%eax)
810060c1:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060c4:	8d 42 04             	lea    0x4(%edx),%eax
810060c7:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060ca:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060cd:	8d 48 04             	lea    0x4(%eax),%ecx
810060d0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060d3:	8b 12                	mov    (%edx),%edx
810060d5:	89 10                	mov    %edx,(%eax)
810060d7:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060da:	8d 42 04             	lea    0x4(%edx),%eax
810060dd:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060e0:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060e3:	8d 48 04             	lea    0x4(%eax),%ecx
810060e6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060e9:	8b 12                	mov    (%edx),%edx
810060eb:	89 10                	mov    %edx,(%eax)
810060ed:	8b 45 cc             	mov    -0x34(%ebp),%eax
810060f0:	8b 10                	mov    (%eax),%edx
810060f2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060f5:	89 10                	mov    %edx,(%eax)
810060f7:	eb 14                	jmp    8100610d <_realloc_r+0x803>
810060f9:	83 ec 04             	sub    $0x4,%esp
810060fc:	ff 75 98             	pushl  -0x68(%ebp)
810060ff:	ff 75 0c             	pushl  0xc(%ebp)
81006102:	ff 75 a8             	pushl  -0x58(%ebp)
81006105:	e8 f6 e9 ff ff       	call   81004b00 <memmove>
8100610a:	83 c4 10             	add    $0x10,%esp
8100610d:	83 ec 08             	sub    $0x8,%esp
81006110:	ff 75 0c             	pushl  0xc(%ebp)
81006113:	ff 75 08             	pushl  0x8(%ebp)
81006116:	e8 71 bd ff ff       	call   81001e8c <_free_r>
8100611b:	83 c4 10             	add    $0x10,%esp
8100611e:	83 ec 0c             	sub    $0xc,%esp
81006121:	ff 75 08             	pushl  0x8(%ebp)
81006124:	e8 f2 ea ff ff       	call   81004c1b <__malloc_unlock>
81006129:	83 c4 10             	add    $0x10,%esp
8100612c:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100612f:	e9 ae 00 00 00       	jmp    810061e2 <_realloc_r+0x8d8>
81006134:	90                   	nop
81006135:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006138:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100613b:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100613e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81006142:	76 5d                	jbe    810061a1 <_realloc_r+0x897>
81006144:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006147:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100614a:	01 d0                	add    %edx,%eax
8100614c:	89 45 90             	mov    %eax,-0x70(%ebp)
8100614f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006152:	8b 40 04             	mov    0x4(%eax),%eax
81006155:	83 e0 01             	and    $0x1,%eax
81006158:	0b 45 bc             	or     -0x44(%ebp),%eax
8100615b:	89 c2                	mov    %eax,%edx
8100615d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006160:	89 50 04             	mov    %edx,0x4(%eax)
81006163:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006166:	83 c8 01             	or     $0x1,%eax
81006169:	89 c2                	mov    %eax,%edx
8100616b:	8b 45 90             	mov    -0x70(%ebp),%eax
8100616e:	89 50 04             	mov    %edx,0x4(%eax)
81006171:	8b 55 90             	mov    -0x70(%ebp),%edx
81006174:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006177:	01 d0                	add    %edx,%eax
81006179:	8b 50 04             	mov    0x4(%eax),%edx
8100617c:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100617f:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006182:	01 c8                	add    %ecx,%eax
81006184:	83 ca 01             	or     $0x1,%edx
81006187:	89 50 04             	mov    %edx,0x4(%eax)
8100618a:	8b 45 90             	mov    -0x70(%ebp),%eax
8100618d:	83 c0 08             	add    $0x8,%eax
81006190:	83 ec 08             	sub    $0x8,%esp
81006193:	50                   	push   %eax
81006194:	ff 75 08             	pushl  0x8(%ebp)
81006197:	e8 f0 bc ff ff       	call   81001e8c <_free_r>
8100619c:	83 c4 10             	add    $0x10,%esp
8100619f:	eb 2d                	jmp    810061ce <_realloc_r+0x8c4>
810061a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061a4:	8b 40 04             	mov    0x4(%eax),%eax
810061a7:	83 e0 01             	and    $0x1,%eax
810061aa:	0b 45 f0             	or     -0x10(%ebp),%eax
810061ad:	89 c2                	mov    %eax,%edx
810061af:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061b2:	89 50 04             	mov    %edx,0x4(%eax)
810061b5:	8b 55 f4             	mov    -0xc(%ebp),%edx
810061b8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810061bb:	01 d0                	add    %edx,%eax
810061bd:	8b 50 04             	mov    0x4(%eax),%edx
810061c0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810061c3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810061c6:	01 c8                	add    %ecx,%eax
810061c8:	83 ca 01             	or     $0x1,%edx
810061cb:	89 50 04             	mov    %edx,0x4(%eax)
810061ce:	83 ec 0c             	sub    $0xc,%esp
810061d1:	ff 75 08             	pushl  0x8(%ebp)
810061d4:	e8 42 ea ff ff       	call   81004c1b <__malloc_unlock>
810061d9:	83 c4 10             	add    $0x10,%esp
810061dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061df:	83 c0 08             	add    $0x8,%eax
810061e2:	c9                   	leave  
810061e3:	c3                   	ret    

810061e4 <cleanup_glue>:
810061e4:	55                   	push   %ebp
810061e5:	89 e5                	mov    %esp,%ebp
810061e7:	83 ec 08             	sub    $0x8,%esp
810061ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810061ed:	8b 00                	mov    (%eax),%eax
810061ef:	85 c0                	test   %eax,%eax
810061f1:	74 14                	je     81006207 <cleanup_glue+0x23>
810061f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810061f6:	8b 00                	mov    (%eax),%eax
810061f8:	83 ec 08             	sub    $0x8,%esp
810061fb:	50                   	push   %eax
810061fc:	ff 75 08             	pushl  0x8(%ebp)
810061ff:	e8 e0 ff ff ff       	call   810061e4 <cleanup_glue>
81006204:	83 c4 10             	add    $0x10,%esp
81006207:	83 ec 08             	sub    $0x8,%esp
8100620a:	ff 75 0c             	pushl  0xc(%ebp)
8100620d:	ff 75 08             	pushl  0x8(%ebp)
81006210:	e8 77 bc ff ff       	call   81001e8c <_free_r>
81006215:	83 c4 10             	add    $0x10,%esp
81006218:	90                   	nop
81006219:	c9                   	leave  
8100621a:	c3                   	ret    

8100621b <_reclaim_reent>:
8100621b:	55                   	push   %ebp
8100621c:	89 e5                	mov    %esp,%ebp
8100621e:	83 ec 28             	sub    $0x28,%esp
81006221:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81006226:	39 45 08             	cmp    %eax,0x8(%ebp)
81006229:	0f 84 49 01 00 00    	je     81006378 <_reclaim_reent+0x15d>
8100622f:	8b 45 08             	mov    0x8(%ebp),%eax
81006232:	8b 40 4c             	mov    0x4c(%eax),%eax
81006235:	85 c0                	test   %eax,%eax
81006237:	74 64                	je     8100629d <_reclaim_reent+0x82>
81006239:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006240:	eb 3e                	jmp    81006280 <_reclaim_reent+0x65>
81006242:	8b 45 08             	mov    0x8(%ebp),%eax
81006245:	8b 50 4c             	mov    0x4c(%eax),%edx
81006248:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100624b:	c1 e0 02             	shl    $0x2,%eax
8100624e:	01 d0                	add    %edx,%eax
81006250:	8b 00                	mov    (%eax),%eax
81006252:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006255:	eb 1f                	jmp    81006276 <_reclaim_reent+0x5b>
81006257:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100625a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100625d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006260:	8b 00                	mov    (%eax),%eax
81006262:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006265:	83 ec 08             	sub    $0x8,%esp
81006268:	ff 75 e8             	pushl  -0x18(%ebp)
8100626b:	ff 75 08             	pushl  0x8(%ebp)
8100626e:	e8 19 bc ff ff       	call   81001e8c <_free_r>
81006273:	83 c4 10             	add    $0x10,%esp
81006276:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100627a:	75 db                	jne    81006257 <_reclaim_reent+0x3c>
8100627c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81006280:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006283:	83 f8 1f             	cmp    $0x1f,%eax
81006286:	76 ba                	jbe    81006242 <_reclaim_reent+0x27>
81006288:	8b 45 08             	mov    0x8(%ebp),%eax
8100628b:	8b 40 4c             	mov    0x4c(%eax),%eax
8100628e:	83 ec 08             	sub    $0x8,%esp
81006291:	50                   	push   %eax
81006292:	ff 75 08             	pushl  0x8(%ebp)
81006295:	e8 f2 bb ff ff       	call   81001e8c <_free_r>
8100629a:	83 c4 10             	add    $0x10,%esp
8100629d:	8b 45 08             	mov    0x8(%ebp),%eax
810062a0:	8b 40 40             	mov    0x40(%eax),%eax
810062a3:	85 c0                	test   %eax,%eax
810062a5:	74 15                	je     810062bc <_reclaim_reent+0xa1>
810062a7:	8b 45 08             	mov    0x8(%ebp),%eax
810062aa:	8b 40 40             	mov    0x40(%eax),%eax
810062ad:	83 ec 08             	sub    $0x8,%esp
810062b0:	50                   	push   %eax
810062b1:	ff 75 08             	pushl  0x8(%ebp)
810062b4:	e8 d3 bb ff ff       	call   81001e8c <_free_r>
810062b9:	83 c4 10             	add    $0x10,%esp
810062bc:	8b 45 08             	mov    0x8(%ebp),%eax
810062bf:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062c5:	85 c0                	test   %eax,%eax
810062c7:	74 50                	je     81006319 <_reclaim_reent+0xfe>
810062c9:	8b 45 08             	mov    0x8(%ebp),%eax
810062cc:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062d2:	8b 55 08             	mov    0x8(%ebp),%edx
810062d5:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810062db:	39 d0                	cmp    %edx,%eax
810062dd:	74 3a                	je     81006319 <_reclaim_reent+0xfe>
810062df:	8b 45 08             	mov    0x8(%ebp),%eax
810062e2:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062e8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810062eb:	eb 1f                	jmp    8100630c <_reclaim_reent+0xf1>
810062ed:	8b 45 ec             	mov    -0x14(%ebp),%eax
810062f0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810062f3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810062f6:	8b 00                	mov    (%eax),%eax
810062f8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810062fb:	83 ec 08             	sub    $0x8,%esp
810062fe:	ff 75 e4             	pushl  -0x1c(%ebp)
81006301:	ff 75 08             	pushl  0x8(%ebp)
81006304:	e8 83 bb ff ff       	call   81001e8c <_free_r>
81006309:	83 c4 10             	add    $0x10,%esp
8100630c:	8b 45 08             	mov    0x8(%ebp),%eax
8100630f:	05 4c 01 00 00       	add    $0x14c,%eax
81006314:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81006317:	75 d4                	jne    810062ed <_reclaim_reent+0xd2>
81006319:	8b 45 08             	mov    0x8(%ebp),%eax
8100631c:	8b 40 54             	mov    0x54(%eax),%eax
8100631f:	85 c0                	test   %eax,%eax
81006321:	74 15                	je     81006338 <_reclaim_reent+0x11d>
81006323:	8b 45 08             	mov    0x8(%ebp),%eax
81006326:	8b 40 54             	mov    0x54(%eax),%eax
81006329:	83 ec 08             	sub    $0x8,%esp
8100632c:	50                   	push   %eax
8100632d:	ff 75 08             	pushl  0x8(%ebp)
81006330:	e8 57 bb ff ff       	call   81001e8c <_free_r>
81006335:	83 c4 10             	add    $0x10,%esp
81006338:	8b 45 08             	mov    0x8(%ebp),%eax
8100633b:	8b 40 38             	mov    0x38(%eax),%eax
8100633e:	85 c0                	test   %eax,%eax
81006340:	74 36                	je     81006378 <_reclaim_reent+0x15d>
81006342:	8b 45 08             	mov    0x8(%ebp),%eax
81006345:	8b 40 3c             	mov    0x3c(%eax),%eax
81006348:	83 ec 0c             	sub    $0xc,%esp
8100634b:	ff 75 08             	pushl  0x8(%ebp)
8100634e:	ff d0                	call   *%eax
81006350:	83 c4 10             	add    $0x10,%esp
81006353:	8b 45 08             	mov    0x8(%ebp),%eax
81006356:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100635c:	85 c0                	test   %eax,%eax
8100635e:	74 18                	je     81006378 <_reclaim_reent+0x15d>
81006360:	8b 45 08             	mov    0x8(%ebp),%eax
81006363:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006369:	83 ec 08             	sub    $0x8,%esp
8100636c:	50                   	push   %eax
8100636d:	ff 75 08             	pushl  0x8(%ebp)
81006370:	e8 6f fe ff ff       	call   810061e4 <cleanup_glue>
81006375:	83 c4 10             	add    $0x10,%esp
81006378:	90                   	nop
81006379:	c9                   	leave  
8100637a:	c3                   	ret    

8100637b <lflush>:
8100637b:	55                   	push   %ebp
8100637c:	89 e5                	mov    %esp,%ebp
8100637e:	83 ec 08             	sub    $0x8,%esp
81006381:	8b 45 08             	mov    0x8(%ebp),%eax
81006384:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006388:	98                   	cwtl   
81006389:	83 e0 09             	and    $0x9,%eax
8100638c:	83 f8 09             	cmp    $0x9,%eax
8100638f:	75 10                	jne    810063a1 <lflush+0x26>
81006391:	83 ec 0c             	sub    $0xc,%esp
81006394:	ff 75 08             	pushl  0x8(%ebp)
81006397:	e8 a6 af ff ff       	call   81001342 <fflush>
8100639c:	83 c4 10             	add    $0x10,%esp
8100639f:	eb 05                	jmp    810063a6 <lflush+0x2b>
810063a1:	b8 00 00 00 00       	mov    $0x0,%eax
810063a6:	c9                   	leave  
810063a7:	c3                   	ret    

810063a8 <__srefill_r>:
810063a8:	55                   	push   %ebp
810063a9:	89 e5                	mov    %esp,%ebp
810063ab:	56                   	push   %esi
810063ac:	53                   	push   %ebx
810063ad:	83 ec 10             	sub    $0x10,%esp
810063b0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810063b3:	8b 45 08             	mov    0x8(%ebp),%eax
810063b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810063b9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810063bd:	74 18                	je     810063d7 <__srefill_r+0x2f>
810063bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810063c2:	8b 40 38             	mov    0x38(%eax),%eax
810063c5:	85 c0                	test   %eax,%eax
810063c7:	75 0e                	jne    810063d7 <__srefill_r+0x2f>
810063c9:	83 ec 0c             	sub    $0xc,%esp
810063cc:	ff 75 f4             	pushl  -0xc(%ebp)
810063cf:	e8 03 b5 ff ff       	call   810018d7 <__sinit>
810063d4:	83 c4 10             	add    $0x10,%esp
810063d7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063db:	98                   	cwtl   
810063dc:	25 00 20 00 00       	and    $0x2000,%eax
810063e1:	85 c0                	test   %eax,%eax
810063e3:	75 14                	jne    810063f9 <__srefill_r+0x51>
810063e5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063e9:	80 cc 20             	or     $0x20,%ah
810063ec:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810063f0:	8b 43 64             	mov    0x64(%ebx),%eax
810063f3:	80 e4 df             	and    $0xdf,%ah
810063f6:	89 43 64             	mov    %eax,0x64(%ebx)
810063f9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81006400:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006404:	98                   	cwtl   
81006405:	83 e0 20             	and    $0x20,%eax
81006408:	85 c0                	test   %eax,%eax
8100640a:	74 0a                	je     81006416 <__srefill_r+0x6e>
8100640c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006411:	e9 8c 01 00 00       	jmp    810065a2 <__srefill_r+0x1fa>
81006416:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100641a:	98                   	cwtl   
8100641b:	83 e0 04             	and    $0x4,%eax
8100641e:	85 c0                	test   %eax,%eax
81006420:	75 79                	jne    8100649b <__srefill_r+0xf3>
81006422:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006426:	98                   	cwtl   
81006427:	83 e0 10             	and    $0x10,%eax
8100642a:	85 c0                	test   %eax,%eax
8100642c:	75 1e                	jne    8100644c <__srefill_r+0xa4>
8100642e:	8b 45 08             	mov    0x8(%ebp),%eax
81006431:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81006437:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100643b:	83 c8 40             	or     $0x40,%eax
8100643e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006442:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006447:	e9 56 01 00 00       	jmp    810065a2 <__srefill_r+0x1fa>
8100644c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006450:	98                   	cwtl   
81006451:	83 e0 08             	and    $0x8,%eax
81006454:	85 c0                	test   %eax,%eax
81006456:	74 36                	je     8100648e <__srefill_r+0xe6>
81006458:	83 ec 08             	sub    $0x8,%esp
8100645b:	53                   	push   %ebx
8100645c:	ff 75 08             	pushl  0x8(%ebp)
8100645f:	e8 86 ae ff ff       	call   810012ea <_fflush_r>
81006464:	83 c4 10             	add    $0x10,%esp
81006467:	85 c0                	test   %eax,%eax
81006469:	74 0a                	je     81006475 <__srefill_r+0xcd>
8100646b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006470:	e9 2d 01 00 00       	jmp    810065a2 <__srefill_r+0x1fa>
81006475:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006479:	83 e0 f7             	and    $0xfffffff7,%eax
8100647c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006480:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006487:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100648e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006492:	83 c8 04             	or     $0x4,%eax
81006495:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006499:	eb 46                	jmp    810064e1 <__srefill_r+0x139>
8100649b:	8b 43 30             	mov    0x30(%ebx),%eax
8100649e:	85 c0                	test   %eax,%eax
810064a0:	74 3f                	je     810064e1 <__srefill_r+0x139>
810064a2:	8b 53 30             	mov    0x30(%ebx),%edx
810064a5:	8d 43 40             	lea    0x40(%ebx),%eax
810064a8:	39 c2                	cmp    %eax,%edx
810064aa:	74 12                	je     810064be <__srefill_r+0x116>
810064ac:	8b 43 30             	mov    0x30(%ebx),%eax
810064af:	83 ec 08             	sub    $0x8,%esp
810064b2:	50                   	push   %eax
810064b3:	ff 75 08             	pushl  0x8(%ebp)
810064b6:	e8 d1 b9 ff ff       	call   81001e8c <_free_r>
810064bb:	83 c4 10             	add    $0x10,%esp
810064be:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810064c5:	8b 43 3c             	mov    0x3c(%ebx),%eax
810064c8:	89 43 04             	mov    %eax,0x4(%ebx)
810064cb:	8b 43 04             	mov    0x4(%ebx),%eax
810064ce:	85 c0                	test   %eax,%eax
810064d0:	74 0f                	je     810064e1 <__srefill_r+0x139>
810064d2:	8b 43 38             	mov    0x38(%ebx),%eax
810064d5:	89 03                	mov    %eax,(%ebx)
810064d7:	b8 00 00 00 00       	mov    $0x0,%eax
810064dc:	e9 c1 00 00 00       	jmp    810065a2 <__srefill_r+0x1fa>
810064e1:	8b 43 10             	mov    0x10(%ebx),%eax
810064e4:	85 c0                	test   %eax,%eax
810064e6:	75 0f                	jne    810064f7 <__srefill_r+0x14f>
810064e8:	83 ec 08             	sub    $0x8,%esp
810064eb:	53                   	push   %ebx
810064ec:	ff 75 08             	pushl  0x8(%ebp)
810064ef:	e8 61 d8 ff ff       	call   81003d55 <__smakebuf_r>
810064f4:	83 c4 10             	add    $0x10,%esp
810064f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064fb:	98                   	cwtl   
810064fc:	83 e0 03             	and    $0x3,%eax
810064ff:	85 c0                	test   %eax,%eax
81006501:	74 48                	je     8100654b <__srefill_r+0x1a3>
81006503:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006507:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
8100650b:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
81006511:	a1 04 89 00 81       	mov    0x81008904,%eax
81006516:	83 ec 08             	sub    $0x8,%esp
81006519:	68 7b 63 00 81       	push   $0x8100637b
8100651e:	50                   	push   %eax
8100651f:	e8 93 c8 ff ff       	call   81002db7 <_fwalk>
81006524:	83 c4 10             	add    $0x10,%esp
81006527:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
8100652b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100652f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006533:	98                   	cwtl   
81006534:	83 e0 09             	and    $0x9,%eax
81006537:	83 f8 09             	cmp    $0x9,%eax
8100653a:	75 0f                	jne    8100654b <__srefill_r+0x1a3>
8100653c:	83 ec 08             	sub    $0x8,%esp
8100653f:	53                   	push   %ebx
81006540:	ff 75 08             	pushl  0x8(%ebp)
81006543:	e8 7c ab ff ff       	call   810010c4 <__sflush_r>
81006548:	83 c4 10             	add    $0x10,%esp
8100654b:	8b 43 10             	mov    0x10(%ebx),%eax
8100654e:	89 03                	mov    %eax,(%ebx)
81006550:	8b 43 20             	mov    0x20(%ebx),%eax
81006553:	8b 73 14             	mov    0x14(%ebx),%esi
81006556:	8b 0b                	mov    (%ebx),%ecx
81006558:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100655b:	56                   	push   %esi
8100655c:	51                   	push   %ecx
8100655d:	52                   	push   %edx
8100655e:	ff 75 08             	pushl  0x8(%ebp)
81006561:	ff d0                	call   *%eax
81006563:	83 c4 10             	add    $0x10,%esp
81006566:	89 43 04             	mov    %eax,0x4(%ebx)
81006569:	8b 43 04             	mov    0x4(%ebx),%eax
8100656c:	85 c0                	test   %eax,%eax
8100656e:	7f 2d                	jg     8100659d <__srefill_r+0x1f5>
81006570:	8b 43 04             	mov    0x4(%ebx),%eax
81006573:	85 c0                	test   %eax,%eax
81006575:	75 0d                	jne    81006584 <__srefill_r+0x1dc>
81006577:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100657b:	83 c8 20             	or     $0x20,%eax
8100657e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006582:	eb 12                	jmp    81006596 <__srefill_r+0x1ee>
81006584:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100658b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100658f:	83 c8 40             	or     $0x40,%eax
81006592:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006596:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100659b:	eb 05                	jmp    810065a2 <__srefill_r+0x1fa>
8100659d:	b8 00 00 00 00       	mov    $0x0,%eax
810065a2:	8d 65 f8             	lea    -0x8(%ebp),%esp
810065a5:	5b                   	pop    %ebx
810065a6:	5e                   	pop    %esi
810065a7:	5d                   	pop    %ebp
810065a8:	c3                   	ret    

810065a9 <__srget_r>:
810065a9:	55                   	push   %ebp
810065aa:	89 e5                	mov    %esp,%ebp
810065ac:	53                   	push   %ebx
810065ad:	83 ec 14             	sub    $0x14,%esp
810065b0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810065b3:	8b 45 08             	mov    0x8(%ebp),%eax
810065b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810065b9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810065bd:	74 18                	je     810065d7 <__srget_r+0x2e>
810065bf:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065c2:	8b 40 38             	mov    0x38(%eax),%eax
810065c5:	85 c0                	test   %eax,%eax
810065c7:	75 0e                	jne    810065d7 <__srget_r+0x2e>
810065c9:	83 ec 0c             	sub    $0xc,%esp
810065cc:	ff 75 f4             	pushl  -0xc(%ebp)
810065cf:	e8 03 b3 ff ff       	call   810018d7 <__sinit>
810065d4:	83 c4 10             	add    $0x10,%esp
810065d7:	83 ec 08             	sub    $0x8,%esp
810065da:	53                   	push   %ebx
810065db:	ff 75 08             	pushl  0x8(%ebp)
810065de:	e8 c5 fd ff ff       	call   810063a8 <__srefill_r>
810065e3:	83 c4 10             	add    $0x10,%esp
810065e6:	85 c0                	test   %eax,%eax
810065e8:	75 18                	jne    81006602 <__srget_r+0x59>
810065ea:	8b 43 04             	mov    0x4(%ebx),%eax
810065ed:	83 e8 01             	sub    $0x1,%eax
810065f0:	89 43 04             	mov    %eax,0x4(%ebx)
810065f3:	8b 03                	mov    (%ebx),%eax
810065f5:	8d 50 01             	lea    0x1(%eax),%edx
810065f8:	89 13                	mov    %edx,(%ebx)
810065fa:	0f b6 00             	movzbl (%eax),%eax
810065fd:	0f b6 c0             	movzbl %al,%eax
81006600:	eb 05                	jmp    81006607 <__srget_r+0x5e>
81006602:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006607:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100660a:	c9                   	leave  
8100660b:	c3                   	ret    

8100660c <__srget>:
8100660c:	55                   	push   %ebp
8100660d:	89 e5                	mov    %esp,%ebp
8100660f:	83 ec 08             	sub    $0x8,%esp
81006612:	8b 55 08             	mov    0x8(%ebp),%edx
81006615:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100661a:	83 ec 08             	sub    $0x8,%esp
8100661d:	52                   	push   %edx
8100661e:	50                   	push   %eax
8100661f:	e8 85 ff ff ff       	call   810065a9 <__srget_r>
81006624:	83 c4 10             	add    $0x10,%esp
81006627:	c9                   	leave  
81006628:	c3                   	ret    

81006629 <_sbrk_r>:
81006629:	55                   	push   %ebp
8100662a:	89 e5                	mov    %esp,%ebp
8100662c:	83 ec 18             	sub    $0x18,%esp
8100662f:	c7 05 0c 9c 00 81 00 	movl   $0x0,0x81009c0c
81006636:	00 00 00 
81006639:	83 ec 0c             	sub    $0xc,%esp
8100663c:	ff 75 0c             	pushl  0xc(%ebp)
8100663f:	e8 6f a7 ff ff       	call   81000db3 <sbrk>
81006644:	83 c4 10             	add    $0x10,%esp
81006647:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100664a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100664e:	75 14                	jne    81006664 <_sbrk_r+0x3b>
81006650:	a1 0c 9c 00 81       	mov    0x81009c0c,%eax
81006655:	85 c0                	test   %eax,%eax
81006657:	74 0b                	je     81006664 <_sbrk_r+0x3b>
81006659:	8b 15 0c 9c 00 81    	mov    0x81009c0c,%edx
8100665f:	8b 45 08             	mov    0x8(%ebp),%eax
81006662:	89 10                	mov    %edx,(%eax)
81006664:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006667:	c9                   	leave  
81006668:	c3                   	ret    

81006669 <setvbuf>:
81006669:	55                   	push   %ebp
8100666a:	89 e5                	mov    %esp,%ebp
8100666c:	57                   	push   %edi
8100666d:	56                   	push   %esi
8100666e:	53                   	push   %ebx
8100666f:	83 ec 2c             	sub    $0x2c,%esp
81006672:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006675:	8b 7d 10             	mov    0x10(%ebp),%edi
81006678:	8b 75 14             	mov    0x14(%ebp),%esi
8100667b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006682:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81006687:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100668a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100668d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006690:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81006694:	74 18                	je     810066ae <setvbuf+0x45>
81006696:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006699:	8b 40 38             	mov    0x38(%eax),%eax
8100669c:	85 c0                	test   %eax,%eax
8100669e:	75 0e                	jne    810066ae <setvbuf+0x45>
810066a0:	83 ec 0c             	sub    $0xc,%esp
810066a3:	ff 75 dc             	pushl  -0x24(%ebp)
810066a6:	e8 2c b2 ff ff       	call   810018d7 <__sinit>
810066ab:	83 c4 10             	add    $0x10,%esp
810066ae:	83 ff 02             	cmp    $0x2,%edi
810066b1:	74 19                	je     810066cc <setvbuf+0x63>
810066b3:	85 ff                	test   %edi,%edi
810066b5:	74 05                	je     810066bc <setvbuf+0x53>
810066b7:	83 ff 01             	cmp    $0x1,%edi
810066ba:	75 06                	jne    810066c2 <setvbuf+0x59>
810066bc:	89 f0                	mov    %esi,%eax
810066be:	85 c0                	test   %eax,%eax
810066c0:	79 0a                	jns    810066cc <setvbuf+0x63>
810066c2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066c7:	e9 a1 01 00 00       	jmp    8100686d <setvbuf+0x204>
810066cc:	83 ec 08             	sub    $0x8,%esp
810066cf:	53                   	push   %ebx
810066d0:	ff 75 e0             	pushl  -0x20(%ebp)
810066d3:	e8 12 ac ff ff       	call   810012ea <_fflush_r>
810066d8:	83 c4 10             	add    $0x10,%esp
810066db:	8b 43 30             	mov    0x30(%ebx),%eax
810066de:	85 c0                	test   %eax,%eax
810066e0:	74 23                	je     81006705 <setvbuf+0x9c>
810066e2:	8b 53 30             	mov    0x30(%ebx),%edx
810066e5:	8d 43 40             	lea    0x40(%ebx),%eax
810066e8:	39 c2                	cmp    %eax,%edx
810066ea:	74 12                	je     810066fe <setvbuf+0x95>
810066ec:	8b 43 30             	mov    0x30(%ebx),%eax
810066ef:	83 ec 08             	sub    $0x8,%esp
810066f2:	50                   	push   %eax
810066f3:	ff 75 e0             	pushl  -0x20(%ebp)
810066f6:	e8 91 b7 ff ff       	call   81001e8c <_free_r>
810066fb:	83 c4 10             	add    $0x10,%esp
810066fe:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81006705:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100670c:	8b 43 18             	mov    0x18(%ebx),%eax
8100670f:	89 43 04             	mov    %eax,0x4(%ebx)
81006712:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006716:	98                   	cwtl   
81006717:	25 80 00 00 00       	and    $0x80,%eax
8100671c:	85 c0                	test   %eax,%eax
8100671e:	74 12                	je     81006732 <setvbuf+0xc9>
81006720:	8b 43 10             	mov    0x10(%ebx),%eax
81006723:	83 ec 08             	sub    $0x8,%esp
81006726:	50                   	push   %eax
81006727:	ff 75 e0             	pushl  -0x20(%ebp)
8100672a:	e8 5d b7 ff ff       	call   81001e8c <_free_r>
8100672f:	83 c4 10             	add    $0x10,%esp
81006732:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006736:	66 25 5c f3          	and    $0xf35c,%ax
8100673a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100673e:	83 ff 02             	cmp    $0x2,%edi
81006741:	74 6f                	je     810067b2 <setvbuf+0x149>
81006743:	8d 45 d4             	lea    -0x2c(%ebp),%eax
81006746:	50                   	push   %eax
81006747:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100674a:	50                   	push   %eax
8100674b:	53                   	push   %ebx
8100674c:	ff 75 e0             	pushl  -0x20(%ebp)
8100674f:	e8 ee d6 ff ff       	call   81003e42 <__swhatbuf_r>
81006754:	83 c4 10             	add    $0x10,%esp
81006757:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100675b:	09 d0                	or     %edx,%eax
8100675d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006761:	85 f6                	test   %esi,%esi
81006763:	75 0a                	jne    8100676f <setvbuf+0x106>
81006765:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
8100676c:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100676f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006773:	75 73                	jne    810067e8 <setvbuf+0x17f>
81006775:	83 ec 0c             	sub    $0xc,%esp
81006778:	56                   	push   %esi
81006779:	e8 57 d7 ff ff       	call   81003ed5 <malloc>
8100677e:	83 c4 10             	add    $0x10,%esp
81006781:	89 45 0c             	mov    %eax,0xc(%ebp)
81006784:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006788:	75 20                	jne    810067aa <setvbuf+0x141>
8100678a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81006791:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006794:	39 c6                	cmp    %eax,%esi
81006796:	74 12                	je     810067aa <setvbuf+0x141>
81006798:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100679b:	83 ec 0c             	sub    $0xc,%esp
8100679e:	56                   	push   %esi
8100679f:	e8 31 d7 ff ff       	call   81003ed5 <malloc>
810067a4:	83 c4 10             	add    $0x10,%esp
810067a7:	89 45 0c             	mov    %eax,0xc(%ebp)
810067aa:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810067ae:	75 2e                	jne    810067de <setvbuf+0x175>
810067b0:	eb 01                	jmp    810067b3 <setvbuf+0x14a>
810067b2:	90                   	nop
810067b3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067b7:	83 c8 02             	or     $0x2,%eax
810067ba:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067be:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810067c5:	8d 43 43             	lea    0x43(%ebx),%eax
810067c8:	89 03                	mov    %eax,(%ebx)
810067ca:	8b 03                	mov    (%ebx),%eax
810067cc:	89 43 10             	mov    %eax,0x10(%ebx)
810067cf:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810067d6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810067d9:	e9 8f 00 00 00       	jmp    8100686d <setvbuf+0x204>
810067de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067e2:	0c 80                	or     $0x80,%al
810067e4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067e8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810067eb:	8b 40 38             	mov    0x38(%eax),%eax
810067ee:	85 c0                	test   %eax,%eax
810067f0:	75 0e                	jne    81006800 <setvbuf+0x197>
810067f2:	83 ec 0c             	sub    $0xc,%esp
810067f5:	ff 75 e0             	pushl  -0x20(%ebp)
810067f8:	e8 da b0 ff ff       	call   810018d7 <__sinit>
810067fd:	83 c4 10             	add    $0x10,%esp
81006800:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006803:	39 c6                	cmp    %eax,%esi
81006805:	74 0b                	je     81006812 <setvbuf+0x1a9>
81006807:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100680b:	80 cc 08             	or     $0x8,%ah
8100680e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006812:	83 ff 01             	cmp    $0x1,%edi
81006815:	75 0b                	jne    81006822 <setvbuf+0x1b9>
81006817:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100681b:	83 c8 01             	or     $0x1,%eax
8100681e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006822:	8b 45 0c             	mov    0xc(%ebp),%eax
81006825:	89 03                	mov    %eax,(%ebx)
81006827:	8b 03                	mov    (%ebx),%eax
81006829:	89 43 10             	mov    %eax,0x10(%ebx)
8100682c:	89 f0                	mov    %esi,%eax
8100682e:	89 43 14             	mov    %eax,0x14(%ebx)
81006831:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006835:	98                   	cwtl   
81006836:	83 e0 08             	and    $0x8,%eax
81006839:	85 c0                	test   %eax,%eax
8100683b:	74 24                	je     81006861 <setvbuf+0x1f8>
8100683d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006841:	98                   	cwtl   
81006842:	83 e0 01             	and    $0x1,%eax
81006845:	85 c0                	test   %eax,%eax
81006847:	74 11                	je     8100685a <setvbuf+0x1f1>
81006849:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006850:	8b 43 14             	mov    0x14(%ebx),%eax
81006853:	f7 d8                	neg    %eax
81006855:	89 43 18             	mov    %eax,0x18(%ebx)
81006858:	eb 0e                	jmp    81006868 <setvbuf+0x1ff>
8100685a:	89 f0                	mov    %esi,%eax
8100685c:	89 43 08             	mov    %eax,0x8(%ebx)
8100685f:	eb 07                	jmp    81006868 <setvbuf+0x1ff>
81006861:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006868:	b8 00 00 00 00       	mov    $0x0,%eax
8100686d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006870:	5b                   	pop    %ebx
81006871:	5e                   	pop    %esi
81006872:	5f                   	pop    %edi
81006873:	5d                   	pop    %ebp
81006874:	c3                   	ret    

81006875 <_siprintf_r>:
81006875:	55                   	push   %ebp
81006876:	89 e5                	mov    %esp,%ebp
81006878:	83 ec 78             	sub    $0x78,%esp
8100687b:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
81006881:	8b 45 0c             	mov    0xc(%ebp),%eax
81006884:	89 45 88             	mov    %eax,-0x78(%ebp)
81006887:	8b 45 88             	mov    -0x78(%ebp),%eax
8100688a:	89 45 98             	mov    %eax,-0x68(%ebp)
8100688d:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
81006894:	8b 45 90             	mov    -0x70(%ebp),%eax
81006897:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100689a:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810068a0:	8d 45 14             	lea    0x14(%ebp),%eax
810068a3:	89 45 f0             	mov    %eax,-0x10(%ebp)
810068a6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810068a9:	50                   	push   %eax
810068aa:	ff 75 10             	pushl  0x10(%ebp)
810068ad:	8d 45 88             	lea    -0x78(%ebp),%eax
810068b0:	50                   	push   %eax
810068b1:	ff 75 08             	pushl  0x8(%ebp)
810068b4:	e8 99 15 00 00       	call   81007e52 <_svfiprintf_r>
810068b9:	83 c4 10             	add    $0x10,%esp
810068bc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068bf:	8b 45 88             	mov    -0x78(%ebp),%eax
810068c2:	c6 00 00             	movb   $0x0,(%eax)
810068c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068c8:	c9                   	leave  
810068c9:	c3                   	ret    

810068ca <siprintf>:
810068ca:	55                   	push   %ebp
810068cb:	89 e5                	mov    %esp,%ebp
810068cd:	83 ec 78             	sub    $0x78,%esp
810068d0:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810068d6:	8b 45 08             	mov    0x8(%ebp),%eax
810068d9:	89 45 88             	mov    %eax,-0x78(%ebp)
810068dc:	8b 45 88             	mov    -0x78(%ebp),%eax
810068df:	89 45 98             	mov    %eax,-0x68(%ebp)
810068e2:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
810068e9:	8b 45 90             	mov    -0x70(%ebp),%eax
810068ec:	89 45 9c             	mov    %eax,-0x64(%ebp)
810068ef:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810068f5:	8d 45 10             	lea    0x10(%ebp),%eax
810068f8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810068fb:	8b 55 f0             	mov    -0x10(%ebp),%edx
810068fe:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81006903:	52                   	push   %edx
81006904:	ff 75 0c             	pushl  0xc(%ebp)
81006907:	8d 55 88             	lea    -0x78(%ebp),%edx
8100690a:	52                   	push   %edx
8100690b:	50                   	push   %eax
8100690c:	e8 41 15 00 00       	call   81007e52 <_svfiprintf_r>
81006911:	83 c4 10             	add    $0x10,%esp
81006914:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006917:	8b 45 88             	mov    -0x78(%ebp),%eax
8100691a:	c6 00 00             	movb   $0x0,(%eax)
8100691d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006920:	c9                   	leave  
81006921:	c3                   	ret    

81006922 <__sread>:
81006922:	55                   	push   %ebp
81006923:	89 e5                	mov    %esp,%ebp
81006925:	56                   	push   %esi
81006926:	53                   	push   %ebx
81006927:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100692a:	8b 55 14             	mov    0x14(%ebp),%edx
8100692d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81006931:	98                   	cwtl   
81006932:	52                   	push   %edx
81006933:	ff 75 10             	pushl  0x10(%ebp)
81006936:	50                   	push   %eax
81006937:	ff 75 08             	pushl  0x8(%ebp)
8100693a:	e8 51 19 00 00       	call   81008290 <_read_r>
8100693f:	83 c4 10             	add    $0x10,%esp
81006942:	89 c6                	mov    %eax,%esi
81006944:	85 f6                	test   %esi,%esi
81006946:	78 0a                	js     81006952 <__sread+0x30>
81006948:	8b 43 50             	mov    0x50(%ebx),%eax
8100694b:	01 f0                	add    %esi,%eax
8100694d:	89 43 50             	mov    %eax,0x50(%ebx)
81006950:	eb 0b                	jmp    8100695d <__sread+0x3b>
81006952:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006956:	80 e4 ef             	and    $0xef,%ah
81006959:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100695d:	89 f0                	mov    %esi,%eax
8100695f:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006962:	5b                   	pop    %ebx
81006963:	5e                   	pop    %esi
81006964:	5d                   	pop    %ebp
81006965:	c3                   	ret    

81006966 <__seofread>:
81006966:	55                   	push   %ebp
81006967:	89 e5                	mov    %esp,%ebp
81006969:	b8 00 00 00 00       	mov    $0x0,%eax
8100696e:	5d                   	pop    %ebp
8100696f:	c3                   	ret    

81006970 <__swrite>:
81006970:	55                   	push   %ebp
81006971:	89 e5                	mov    %esp,%ebp
81006973:	53                   	push   %ebx
81006974:	83 ec 14             	sub    $0x14,%esp
81006977:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100697a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100697e:	98                   	cwtl   
8100697f:	25 00 01 00 00       	and    $0x100,%eax
81006984:	85 c0                	test   %eax,%eax
81006986:	74 15                	je     8100699d <__swrite+0x2d>
81006988:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100698c:	98                   	cwtl   
8100698d:	6a 02                	push   $0x2
8100698f:	6a 00                	push   $0x0
81006991:	50                   	push   %eax
81006992:	ff 75 08             	pushl  0x8(%ebp)
81006995:	e8 f3 0f 00 00       	call   8100798d <_lseek_r>
8100699a:	83 c4 10             	add    $0x10,%esp
8100699d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069a1:	80 e4 ef             	and    $0xef,%ah
810069a4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069a8:	8b 55 14             	mov    0x14(%ebp),%edx
810069ab:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810069af:	98                   	cwtl   
810069b0:	52                   	push   %edx
810069b1:	ff 75 10             	pushl  0x10(%ebp)
810069b4:	50                   	push   %eax
810069b5:	ff 75 08             	pushl  0x8(%ebp)
810069b8:	e8 9d 07 00 00       	call   8100715a <_write_r>
810069bd:	83 c4 10             	add    $0x10,%esp
810069c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810069c6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810069c9:	c9                   	leave  
810069ca:	c3                   	ret    

810069cb <__sseek>:
810069cb:	55                   	push   %ebp
810069cc:	89 e5                	mov    %esp,%ebp
810069ce:	56                   	push   %esi
810069cf:	53                   	push   %ebx
810069d0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810069d3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810069d7:	98                   	cwtl   
810069d8:	ff 75 14             	pushl  0x14(%ebp)
810069db:	ff 75 10             	pushl  0x10(%ebp)
810069de:	50                   	push   %eax
810069df:	ff 75 08             	pushl  0x8(%ebp)
810069e2:	e8 a6 0f 00 00       	call   8100798d <_lseek_r>
810069e7:	83 c4 10             	add    $0x10,%esp
810069ea:	89 c6                	mov    %eax,%esi
810069ec:	83 fe ff             	cmp    $0xffffffff,%esi
810069ef:	75 0d                	jne    810069fe <__sseek+0x33>
810069f1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069f5:	80 e4 ef             	and    $0xef,%ah
810069f8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069fc:	eb 0e                	jmp    81006a0c <__sseek+0x41>
810069fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006a02:	80 cc 10             	or     $0x10,%ah
81006a05:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006a09:	89 73 50             	mov    %esi,0x50(%ebx)
81006a0c:	89 f0                	mov    %esi,%eax
81006a0e:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006a11:	5b                   	pop    %ebx
81006a12:	5e                   	pop    %esi
81006a13:	5d                   	pop    %ebp
81006a14:	c3                   	ret    

81006a15 <__sclose>:
81006a15:	55                   	push   %ebp
81006a16:	89 e5                	mov    %esp,%ebp
81006a18:	83 ec 18             	sub    $0x18,%esp
81006a1b:	8b 45 0c             	mov    0xc(%ebp),%eax
81006a1e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006a21:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a24:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81006a28:	98                   	cwtl   
81006a29:	83 ec 08             	sub    $0x8,%esp
81006a2c:	50                   	push   %eax
81006a2d:	ff 75 08             	pushl  0x8(%ebp)
81006a30:	e8 db 09 00 00       	call   81007410 <_close_r>
81006a35:	83 c4 10             	add    $0x10,%esp
81006a38:	c9                   	leave  
81006a39:	c3                   	ret    
81006a3a:	66 90                	xchg   %ax,%ax
81006a3c:	66 90                	xchg   %ax,%ax
81006a3e:	66 90                	xchg   %ax,%ax

81006a40 <strchr>:
81006a40:	55                   	push   %ebp
81006a41:	89 e5                	mov    %esp,%ebp
81006a43:	57                   	push   %edi
81006a44:	53                   	push   %ebx
81006a45:	31 db                	xor    %ebx,%ebx
81006a47:	8b 7d 08             	mov    0x8(%ebp),%edi
81006a4a:	02 5d 0c             	add    0xc(%ebp),%bl
81006a4d:	0f 84 98 00 00 00    	je     81006aeb <L25>
81006a53:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a59:	74 37                	je     81006a92 <L5>
81006a5b:	89 f8                	mov    %edi,%eax
81006a5d:	8a 08                	mov    (%eax),%cl
81006a5f:	84 c9                	test   %cl,%cl
81006a61:	74 7b                	je     81006ade <L14>
81006a63:	38 d9                	cmp    %bl,%cl
81006a65:	74 7d                	je     81006ae4 <L19>
81006a67:	47                   	inc    %edi
81006a68:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a6e:	74 22                	je     81006a92 <L5>
81006a70:	89 f8                	mov    %edi,%eax
81006a72:	8a 08                	mov    (%eax),%cl
81006a74:	84 c9                	test   %cl,%cl
81006a76:	74 66                	je     81006ade <L14>
81006a78:	38 d9                	cmp    %bl,%cl
81006a7a:	74 68                	je     81006ae4 <L19>
81006a7c:	47                   	inc    %edi
81006a7d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a83:	74 0d                	je     81006a92 <L5>
81006a85:	89 f8                	mov    %edi,%eax
81006a87:	8a 08                	mov    (%eax),%cl
81006a89:	84 c9                	test   %cl,%cl
81006a8b:	74 51                	je     81006ade <L14>
81006a8d:	38 d9                	cmp    %bl,%cl
81006a8f:	74 53                	je     81006ae4 <L19>
81006a91:	47                   	inc    %edi

81006a92 <L5>:
81006a92:	89 d9                	mov    %ebx,%ecx
81006a94:	c1 e3 08             	shl    $0x8,%ebx
81006a97:	83 ef 04             	sub    $0x4,%edi
81006a9a:	09 cb                	or     %ecx,%ebx
81006a9c:	89 da                	mov    %ebx,%edx
81006a9e:	c1 e3 10             	shl    $0x10,%ebx
81006aa1:	09 d3                	or     %edx,%ebx

81006aa3 <L10>:
81006aa3:	83 c7 04             	add    $0x4,%edi
81006aa6:	8b 0f                	mov    (%edi),%ecx
81006aa8:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006aae:	89 c8                	mov    %ecx,%eax
81006ab0:	f7 d0                	not    %eax
81006ab2:	21 c2                	and    %eax,%edx
81006ab4:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006aba:	75 14                	jne    81006ad0 <L9>
81006abc:	31 d9                	xor    %ebx,%ecx
81006abe:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006ac4:	f7 d1                	not    %ecx
81006ac6:	21 ca                	and    %ecx,%edx
81006ac8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006ace:	74 d3                	je     81006aa3 <L10>

81006ad0 <L9>:
81006ad0:	8d 47 ff             	lea    -0x1(%edi),%eax

81006ad3 <L15>:
81006ad3:	40                   	inc    %eax
81006ad4:	8a 10                	mov    (%eax),%dl
81006ad6:	84 d2                	test   %dl,%dl
81006ad8:	74 04                	je     81006ade <L14>
81006ada:	38 da                	cmp    %bl,%dl
81006adc:	75 f5                	jne    81006ad3 <L15>

81006ade <L14>:
81006ade:	38 18                	cmp    %bl,(%eax)
81006ae0:	74 02                	je     81006ae4 <L19>
81006ae2:	31 c0                	xor    %eax,%eax

81006ae4 <L19>:
81006ae4:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006ae7:	5b                   	pop    %ebx
81006ae8:	5f                   	pop    %edi
81006ae9:	c9                   	leave  
81006aea:	c3                   	ret    

81006aeb <L25>:
81006aeb:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006af1:	74 2b                	je     81006b1e <L26>
81006af3:	89 f8                	mov    %edi,%eax
81006af5:	8a 08                	mov    (%eax),%cl
81006af7:	84 c9                	test   %cl,%cl
81006af9:	74 e9                	je     81006ae4 <L19>
81006afb:	47                   	inc    %edi
81006afc:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006b02:	74 1a                	je     81006b1e <L26>
81006b04:	89 f8                	mov    %edi,%eax
81006b06:	8a 08                	mov    (%eax),%cl
81006b08:	84 c9                	test   %cl,%cl
81006b0a:	74 d8                	je     81006ae4 <L19>
81006b0c:	47                   	inc    %edi
81006b0d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006b13:	74 09                	je     81006b1e <L26>
81006b15:	89 f8                	mov    %edi,%eax
81006b17:	8a 08                	mov    (%eax),%cl
81006b19:	84 c9                	test   %cl,%cl
81006b1b:	74 c7                	je     81006ae4 <L19>
81006b1d:	47                   	inc    %edi

81006b1e <L26>:
81006b1e:	83 ef 04             	sub    $0x4,%edi

81006b21 <L27>:
81006b21:	83 c7 04             	add    $0x4,%edi
81006b24:	8b 0f                	mov    (%edi),%ecx
81006b26:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006b2c:	89 c8                	mov    %ecx,%eax
81006b2e:	f7 d0                	not    %eax
81006b30:	21 c2                	and    %eax,%edx
81006b32:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006b38:	74 e7                	je     81006b21 <L27>
81006b3a:	eb 94                	jmp    81006ad0 <L9>

81006b3c <strcmp>:
81006b3c:	55                   	push   %ebp
81006b3d:	89 e5                	mov    %esp,%ebp
81006b3f:	83 ec 10             	sub    $0x10,%esp
81006b42:	8b 55 08             	mov    0x8(%ebp),%edx
81006b45:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b48:	09 d0                	or     %edx,%eax
81006b4a:	83 e0 03             	and    $0x3,%eax
81006b4d:	85 c0                	test   %eax,%eax
81006b4f:	75 5e                	jne    81006baf <strcmp+0x73>
81006b51:	8b 45 08             	mov    0x8(%ebp),%eax
81006b54:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006b57:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b5a:	89 45 f8             	mov    %eax,-0x8(%ebp)
81006b5d:	eb 2c                	jmp    81006b8b <strcmp+0x4f>
81006b5f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b62:	8b 00                	mov    (%eax),%eax
81006b64:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006b6a:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b6d:	8b 00                	mov    (%eax),%eax
81006b6f:	f7 d0                	not    %eax
81006b71:	21 d0                	and    %edx,%eax
81006b73:	25 80 80 80 80       	and    $0x80808080,%eax
81006b78:	85 c0                	test   %eax,%eax
81006b7a:	74 07                	je     81006b83 <strcmp+0x47>
81006b7c:	b8 00 00 00 00       	mov    $0x0,%eax
81006b81:	eb 5c                	jmp    81006bdf <strcmp+0xa3>
81006b83:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006b87:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006b8b:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b8e:	8b 10                	mov    (%eax),%edx
81006b90:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006b93:	8b 00                	mov    (%eax),%eax
81006b95:	39 c2                	cmp    %eax,%edx
81006b97:	74 c6                	je     81006b5f <strcmp+0x23>
81006b99:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b9c:	89 45 08             	mov    %eax,0x8(%ebp)
81006b9f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006ba2:	89 45 0c             	mov    %eax,0xc(%ebp)
81006ba5:	eb 08                	jmp    81006baf <strcmp+0x73>
81006ba7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006bab:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006baf:	8b 45 08             	mov    0x8(%ebp),%eax
81006bb2:	0f b6 00             	movzbl (%eax),%eax
81006bb5:	84 c0                	test   %al,%al
81006bb7:	74 10                	je     81006bc9 <strcmp+0x8d>
81006bb9:	8b 45 08             	mov    0x8(%ebp),%eax
81006bbc:	0f b6 10             	movzbl (%eax),%edx
81006bbf:	8b 45 0c             	mov    0xc(%ebp),%eax
81006bc2:	0f b6 00             	movzbl (%eax),%eax
81006bc5:	38 c2                	cmp    %al,%dl
81006bc7:	74 de                	je     81006ba7 <strcmp+0x6b>
81006bc9:	8b 45 08             	mov    0x8(%ebp),%eax
81006bcc:	0f b6 00             	movzbl (%eax),%eax
81006bcf:	0f b6 d0             	movzbl %al,%edx
81006bd2:	8b 45 0c             	mov    0xc(%ebp),%eax
81006bd5:	0f b6 00             	movzbl (%eax),%eax
81006bd8:	0f b6 c8             	movzbl %al,%ecx
81006bdb:	89 d0                	mov    %edx,%eax
81006bdd:	29 c8                	sub    %ecx,%eax
81006bdf:	c9                   	leave  
81006be0:	c3                   	ret    
81006be1:	66 90                	xchg   %ax,%ax
81006be3:	66 90                	xchg   %ax,%ax
81006be5:	66 90                	xchg   %ax,%ax
81006be7:	66 90                	xchg   %ax,%ax
81006be9:	66 90                	xchg   %ax,%ax
81006beb:	66 90                	xchg   %ax,%ax
81006bed:	66 90                	xchg   %ax,%ax
81006bef:	90                   	nop

81006bf0 <strlen>:
81006bf0:	55                   	push   %ebp
81006bf1:	89 e5                	mov    %esp,%ebp
81006bf3:	57                   	push   %edi
81006bf4:	8b 55 08             	mov    0x8(%ebp),%edx
81006bf7:	89 d7                	mov    %edx,%edi
81006bf9:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006bff:	74 25                	je     81006c26 <L5>
81006c01:	8a 0f                	mov    (%edi),%cl
81006c03:	47                   	inc    %edi
81006c04:	84 c9                	test   %cl,%cl
81006c06:	74 56                	je     81006c5e <L15>
81006c08:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006c0e:	74 16                	je     81006c26 <L5>
81006c10:	8a 0f                	mov    (%edi),%cl
81006c12:	47                   	inc    %edi
81006c13:	84 c9                	test   %cl,%cl
81006c15:	74 47                	je     81006c5e <L15>
81006c17:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006c1d:	74 07                	je     81006c26 <L5>
81006c1f:	8a 0f                	mov    (%edi),%cl
81006c21:	47                   	inc    %edi
81006c22:	84 c9                	test   %cl,%cl
81006c24:	74 38                	je     81006c5e <L15>

81006c26 <L5>:
81006c26:	83 ef 04             	sub    $0x4,%edi
81006c29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81006c30 <L10>:
81006c30:	83 c7 04             	add    $0x4,%edi
81006c33:	8b 0f                	mov    (%edi),%ecx
81006c35:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
81006c3b:	f7 d1                	not    %ecx
81006c3d:	21 c8                	and    %ecx,%eax
81006c3f:	a9 80 80 80 80       	test   $0x80808080,%eax
81006c44:	74 ea                	je     81006c30 <L10>
81006c46:	f7 d1                	not    %ecx
81006c48:	47                   	inc    %edi
81006c49:	84 c9                	test   %cl,%cl
81006c4b:	74 11                	je     81006c5e <L15>
81006c4d:	47                   	inc    %edi
81006c4e:	c1 e9 08             	shr    $0x8,%ecx
81006c51:	84 c9                	test   %cl,%cl
81006c53:	74 09                	je     81006c5e <L15>
81006c55:	47                   	inc    %edi
81006c56:	c1 e9 08             	shr    $0x8,%ecx
81006c59:	84 c9                	test   %cl,%cl
81006c5b:	74 01                	je     81006c5e <L15>
81006c5d:	47                   	inc    %edi

81006c5e <L15>:
81006c5e:	29 d7                	sub    %edx,%edi
81006c60:	8d 47 ff             	lea    -0x1(%edi),%eax
81006c63:	8d 65 fc             	lea    -0x4(%ebp),%esp
81006c66:	5f                   	pop    %edi
81006c67:	c9                   	leave  
81006c68:	c3                   	ret    

81006c69 <strlwr>:
81006c69:	55                   	push   %ebp
81006c6a:	89 e5                	mov    %esp,%ebp
81006c6c:	83 ec 10             	sub    $0x10,%esp
81006c6f:	8b 45 08             	mov    0x8(%ebp),%eax
81006c72:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006c75:	eb 3b                	jmp    81006cb2 <strlwr+0x49>
81006c77:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006c7a:	0f b6 00             	movzbl (%eax),%eax
81006c7d:	88 45 fb             	mov    %al,-0x5(%ebp)
81006c80:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006c84:	83 c0 01             	add    $0x1,%eax
81006c87:	05 60 8b 00 81       	add    $0x81008b60,%eax
81006c8c:	0f b6 00             	movzbl (%eax),%eax
81006c8f:	0f be c0             	movsbl %al,%eax
81006c92:	83 e0 03             	and    $0x3,%eax
81006c95:	83 f8 01             	cmp    $0x1,%eax
81006c98:	75 09                	jne    81006ca3 <strlwr+0x3a>
81006c9a:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006c9e:	83 c0 20             	add    $0x20,%eax
81006ca1:	eb 04                	jmp    81006ca7 <strlwr+0x3e>
81006ca3:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006ca7:	89 c2                	mov    %eax,%edx
81006ca9:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006cac:	88 10                	mov    %dl,(%eax)
81006cae:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81006cb2:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006cb5:	0f b6 00             	movzbl (%eax),%eax
81006cb8:	84 c0                	test   %al,%al
81006cba:	75 bb                	jne    81006c77 <strlwr+0xe>
81006cbc:	8b 45 08             	mov    0x8(%ebp),%eax
81006cbf:	c9                   	leave  
81006cc0:	c3                   	ret    

81006cc1 <strtok>:
81006cc1:	55                   	push   %ebp
81006cc2:	89 e5                	mov    %esp,%ebp
81006cc4:	83 ec 18             	sub    $0x18,%esp
81006cc7:	8b 55 08             	mov    0x8(%ebp),%edx
81006cca:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006ccd:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81006cd2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006cd5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cd8:	83 c0 5c             	add    $0x5c,%eax
81006cdb:	6a 01                	push   $0x1
81006cdd:	50                   	push   %eax
81006cde:	51                   	push   %ecx
81006cdf:	52                   	push   %edx
81006ce0:	e8 05 00 00 00       	call   81006cea <__strtok_r>
81006ce5:	83 c4 10             	add    $0x10,%esp
81006ce8:	c9                   	leave  
81006ce9:	c3                   	ret    

81006cea <__strtok_r>:
81006cea:	55                   	push   %ebp
81006ceb:	89 e5                	mov    %esp,%ebp
81006ced:	57                   	push   %edi
81006cee:	56                   	push   %esi
81006cef:	53                   	push   %ebx
81006cf0:	83 ec 10             	sub    $0x10,%esp
81006cf3:	8b 45 08             	mov    0x8(%ebp),%eax
81006cf6:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006cf9:	85 c0                	test   %eax,%eax
81006cfb:	75 13                	jne    81006d10 <__strtok_r+0x26>
81006cfd:	8b 45 10             	mov    0x10(%ebp),%eax
81006d00:	8b 00                	mov    (%eax),%eax
81006d02:	85 c0                	test   %eax,%eax
81006d04:	75 0a                	jne    81006d10 <__strtok_r+0x26>
81006d06:	b8 00 00 00 00       	mov    $0x0,%eax
81006d0b:	e9 92 00 00 00       	jmp    81006da2 <__strtok_r+0xb8>
81006d10:	90                   	nop
81006d11:	89 c2                	mov    %eax,%edx
81006d13:	8d 42 01             	lea    0x1(%edx),%eax
81006d16:	0f b6 12             	movzbl (%edx),%edx
81006d19:	0f be f2             	movsbl %dl,%esi
81006d1c:	89 cf                	mov    %ecx,%edi
81006d1e:	eb 1c                	jmp    81006d3c <__strtok_r+0x52>
81006d20:	39 de                	cmp    %ebx,%esi
81006d22:	75 18                	jne    81006d3c <__strtok_r+0x52>
81006d24:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006d28:	74 02                	je     81006d2c <__strtok_r+0x42>
81006d2a:	eb e5                	jmp    81006d11 <__strtok_r+0x27>
81006d2c:	8b 55 10             	mov    0x10(%ebp),%edx
81006d2f:	89 02                	mov    %eax,(%edx)
81006d31:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d34:	c6 02 00             	movb   $0x0,(%edx)
81006d37:	83 e8 01             	sub    $0x1,%eax
81006d3a:	eb 66                	jmp    81006da2 <__strtok_r+0xb8>
81006d3c:	89 fa                	mov    %edi,%edx
81006d3e:	8d 7a 01             	lea    0x1(%edx),%edi
81006d41:	0f b6 12             	movzbl (%edx),%edx
81006d44:	0f be da             	movsbl %dl,%ebx
81006d47:	85 db                	test   %ebx,%ebx
81006d49:	75 d5                	jne    81006d20 <__strtok_r+0x36>
81006d4b:	85 f6                	test   %esi,%esi
81006d4d:	75 10                	jne    81006d5f <__strtok_r+0x75>
81006d4f:	8b 45 10             	mov    0x10(%ebp),%eax
81006d52:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006d58:	b8 00 00 00 00       	mov    $0x0,%eax
81006d5d:	eb 43                	jmp    81006da2 <__strtok_r+0xb8>
81006d5f:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d62:	89 55 f0             	mov    %edx,-0x10(%ebp)
81006d65:	89 c2                	mov    %eax,%edx
81006d67:	8d 42 01             	lea    0x1(%edx),%eax
81006d6a:	0f b6 12             	movzbl (%edx),%edx
81006d6d:	0f be f2             	movsbl %dl,%esi
81006d70:	89 cf                	mov    %ecx,%edi
81006d72:	89 fa                	mov    %edi,%edx
81006d74:	8d 7a 01             	lea    0x1(%edx),%edi
81006d77:	0f b6 12             	movzbl (%edx),%edx
81006d7a:	0f be da             	movsbl %dl,%ebx
81006d7d:	39 f3                	cmp    %esi,%ebx
81006d7f:	75 1b                	jne    81006d9c <__strtok_r+0xb2>
81006d81:	85 f6                	test   %esi,%esi
81006d83:	75 07                	jne    81006d8c <__strtok_r+0xa2>
81006d85:	b8 00 00 00 00       	mov    $0x0,%eax
81006d8a:	eb 06                	jmp    81006d92 <__strtok_r+0xa8>
81006d8c:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d8f:	c6 02 00             	movb   $0x0,(%edx)
81006d92:	8b 55 10             	mov    0x10(%ebp),%edx
81006d95:	89 02                	mov    %eax,(%edx)
81006d97:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d9a:	eb 06                	jmp    81006da2 <__strtok_r+0xb8>
81006d9c:	85 db                	test   %ebx,%ebx
81006d9e:	75 d2                	jne    81006d72 <__strtok_r+0x88>
81006da0:	eb c3                	jmp    81006d65 <__strtok_r+0x7b>
81006da2:	83 c4 10             	add    $0x10,%esp
81006da5:	5b                   	pop    %ebx
81006da6:	5e                   	pop    %esi
81006da7:	5f                   	pop    %edi
81006da8:	5d                   	pop    %ebp
81006da9:	c3                   	ret    

81006daa <strtok_r>:
81006daa:	55                   	push   %ebp
81006dab:	89 e5                	mov    %esp,%ebp
81006dad:	8b 45 08             	mov    0x8(%ebp),%eax
81006db0:	8b 55 0c             	mov    0xc(%ebp),%edx
81006db3:	6a 01                	push   $0x1
81006db5:	ff 75 10             	pushl  0x10(%ebp)
81006db8:	52                   	push   %edx
81006db9:	50                   	push   %eax
81006dba:	e8 2b ff ff ff       	call   81006cea <__strtok_r>
81006dbf:	83 c4 10             	add    $0x10,%esp
81006dc2:	c9                   	leave  
81006dc3:	c3                   	ret    

81006dc4 <__locale_ctype_ptr_l>:
81006dc4:	55                   	push   %ebp
81006dc5:	89 e5                	mov    %esp,%ebp
81006dc7:	b8 60 8b 00 81       	mov    $0x81008b60,%eax
81006dcc:	5d                   	pop    %ebp
81006dcd:	c3                   	ret    

81006dce <__get_global_locale>:
81006dce:	55                   	push   %ebp
81006dcf:	89 e5                	mov    %esp,%ebp
81006dd1:	b8 00 95 00 81       	mov    $0x81009500,%eax
81006dd6:	5d                   	pop    %ebp
81006dd7:	c3                   	ret    

81006dd8 <__get_current_locale>:
81006dd8:	55                   	push   %ebp
81006dd9:	89 e5                	mov    %esp,%ebp
81006ddb:	e8 ee ff ff ff       	call   81006dce <__get_global_locale>
81006de0:	5d                   	pop    %ebp
81006de1:	c3                   	ret    

81006de2 <_strtol_l>:
81006de2:	55                   	push   %ebp
81006de3:	89 e5                	mov    %esp,%ebp
81006de5:	57                   	push   %edi
81006de6:	56                   	push   %esi
81006de7:	53                   	push   %ebx
81006de8:	83 ec 1c             	sub    $0x1c,%esp
81006deb:	8b 75 0c             	mov    0xc(%ebp),%esi
81006dee:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006df5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006df9:	78 0c                	js     81006e07 <_strtol_l+0x25>
81006dfb:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81006dff:	74 06                	je     81006e07 <_strtol_l+0x25>
81006e01:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
81006e05:	7e 15                	jle    81006e1c <_strtol_l+0x3a>
81006e07:	e8 44 06 00 00       	call   81007450 <__errno>
81006e0c:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006e12:	b8 00 00 00 00       	mov    $0x0,%eax
81006e17:	e9 90 01 00 00       	jmp    81006fac <_strtol_l+0x1ca>
81006e1c:	89 f0                	mov    %esi,%eax
81006e1e:	8d 70 01             	lea    0x1(%eax),%esi
81006e21:	0f b6 00             	movzbl (%eax),%eax
81006e24:	0f b6 d8             	movzbl %al,%ebx
81006e27:	83 ec 0c             	sub    $0xc,%esp
81006e2a:	ff 75 18             	pushl  0x18(%ebp)
81006e2d:	e8 92 ff ff ff       	call   81006dc4 <__locale_ctype_ptr_l>
81006e32:	83 c4 10             	add    $0x10,%esp
81006e35:	89 da                	mov    %ebx,%edx
81006e37:	83 c2 01             	add    $0x1,%edx
81006e3a:	01 d0                	add    %edx,%eax
81006e3c:	0f b6 00             	movzbl (%eax),%eax
81006e3f:	0f be c0             	movsbl %al,%eax
81006e42:	83 e0 08             	and    $0x8,%eax
81006e45:	85 c0                	test   %eax,%eax
81006e47:	75 d3                	jne    81006e1c <_strtol_l+0x3a>
81006e49:	83 fb 2d             	cmp    $0x2d,%ebx
81006e4c:	75 14                	jne    81006e62 <_strtol_l+0x80>
81006e4e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81006e55:	89 f0                	mov    %esi,%eax
81006e57:	8d 70 01             	lea    0x1(%eax),%esi
81006e5a:	0f b6 00             	movzbl (%eax),%eax
81006e5d:	0f b6 d8             	movzbl %al,%ebx
81006e60:	eb 10                	jmp    81006e72 <_strtol_l+0x90>
81006e62:	83 fb 2b             	cmp    $0x2b,%ebx
81006e65:	75 0b                	jne    81006e72 <_strtol_l+0x90>
81006e67:	89 f0                	mov    %esi,%eax
81006e69:	8d 70 01             	lea    0x1(%eax),%esi
81006e6c:	0f b6 00             	movzbl (%eax),%eax
81006e6f:	0f b6 d8             	movzbl %al,%ebx
81006e72:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006e76:	74 06                	je     81006e7e <_strtol_l+0x9c>
81006e78:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81006e7c:	75 26                	jne    81006ea4 <_strtol_l+0xc2>
81006e7e:	83 fb 30             	cmp    $0x30,%ebx
81006e81:	75 21                	jne    81006ea4 <_strtol_l+0xc2>
81006e83:	0f b6 06             	movzbl (%esi),%eax
81006e86:	3c 78                	cmp    $0x78,%al
81006e88:	74 07                	je     81006e91 <_strtol_l+0xaf>
81006e8a:	0f b6 06             	movzbl (%esi),%eax
81006e8d:	3c 58                	cmp    $0x58,%al
81006e8f:	75 13                	jne    81006ea4 <_strtol_l+0xc2>
81006e91:	8d 46 01             	lea    0x1(%esi),%eax
81006e94:	0f b6 00             	movzbl (%eax),%eax
81006e97:	0f b6 d8             	movzbl %al,%ebx
81006e9a:	83 c6 02             	add    $0x2,%esi
81006e9d:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81006ea4:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006ea8:	75 14                	jne    81006ebe <_strtol_l+0xdc>
81006eaa:	83 fb 30             	cmp    $0x30,%ebx
81006ead:	75 07                	jne    81006eb6 <_strtol_l+0xd4>
81006eaf:	b8 08 00 00 00       	mov    $0x8,%eax
81006eb4:	eb 05                	jmp    81006ebb <_strtol_l+0xd9>
81006eb6:	b8 0a 00 00 00       	mov    $0xa,%eax
81006ebb:	89 45 14             	mov    %eax,0x14(%ebp)
81006ebe:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006ec2:	74 07                	je     81006ecb <_strtol_l+0xe9>
81006ec4:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006ec9:	eb 05                	jmp    81006ed0 <_strtol_l+0xee>
81006ecb:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006ed0:	89 c7                	mov    %eax,%edi
81006ed2:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006ed5:	89 f8                	mov    %edi,%eax
81006ed7:	ba 00 00 00 00       	mov    $0x0,%edx
81006edc:	f7 f1                	div    %ecx
81006ede:	89 d0                	mov    %edx,%eax
81006ee0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006ee3:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006ee6:	89 f8                	mov    %edi,%eax
81006ee8:	ba 00 00 00 00       	mov    $0x0,%edx
81006eed:	f7 f1                	div    %ecx
81006eef:	89 c2                	mov    %eax,%edx
81006ef1:	bf 00 00 00 00       	mov    $0x0,%edi
81006ef6:	b9 00 00 00 00       	mov    $0x0,%ecx
81006efb:	83 fb 2f             	cmp    $0x2f,%ebx
81006efe:	7e 0a                	jle    81006f0a <_strtol_l+0x128>
81006f00:	83 fb 39             	cmp    $0x39,%ebx
81006f03:	7f 05                	jg     81006f0a <_strtol_l+0x128>
81006f05:	83 eb 30             	sub    $0x30,%ebx
81006f08:	eb 1c                	jmp    81006f26 <_strtol_l+0x144>
81006f0a:	83 fb 40             	cmp    $0x40,%ebx
81006f0d:	7e 0a                	jle    81006f19 <_strtol_l+0x137>
81006f0f:	83 fb 5a             	cmp    $0x5a,%ebx
81006f12:	7f 05                	jg     81006f19 <_strtol_l+0x137>
81006f14:	83 eb 37             	sub    $0x37,%ebx
81006f17:	eb 0d                	jmp    81006f26 <_strtol_l+0x144>
81006f19:	83 fb 60             	cmp    $0x60,%ebx
81006f1c:	7e 46                	jle    81006f64 <_strtol_l+0x182>
81006f1e:	83 fb 7a             	cmp    $0x7a,%ebx
81006f21:	7f 41                	jg     81006f64 <_strtol_l+0x182>
81006f23:	83 eb 57             	sub    $0x57,%ebx
81006f26:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81006f29:	7d 38                	jge    81006f63 <_strtol_l+0x181>
81006f2b:	89 c8                	mov    %ecx,%eax
81006f2d:	85 c0                	test   %eax,%eax
81006f2f:	78 0f                	js     81006f40 <_strtol_l+0x15e>
81006f31:	89 d0                	mov    %edx,%eax
81006f33:	39 c7                	cmp    %eax,%edi
81006f35:	77 09                	ja     81006f40 <_strtol_l+0x15e>
81006f37:	39 c7                	cmp    %eax,%edi
81006f39:	75 0c                	jne    81006f47 <_strtol_l+0x165>
81006f3b:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81006f3e:	7e 07                	jle    81006f47 <_strtol_l+0x165>
81006f40:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81006f45:	eb 0f                	jmp    81006f56 <_strtol_l+0x174>
81006f47:	b9 01 00 00 00       	mov    $0x1,%ecx
81006f4c:	8b 45 14             	mov    0x14(%ebp),%eax
81006f4f:	0f af f8             	imul   %eax,%edi
81006f52:	89 d8                	mov    %ebx,%eax
81006f54:	01 c7                	add    %eax,%edi
81006f56:	89 f0                	mov    %esi,%eax
81006f58:	8d 70 01             	lea    0x1(%eax),%esi
81006f5b:	0f b6 00             	movzbl (%eax),%eax
81006f5e:	0f b6 d8             	movzbl %al,%ebx
81006f61:	eb 98                	jmp    81006efb <_strtol_l+0x119>
81006f63:	90                   	nop
81006f64:	89 c8                	mov    %ecx,%eax
81006f66:	85 c0                	test   %eax,%eax
81006f68:	79 1f                	jns    81006f89 <_strtol_l+0x1a7>
81006f6a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006f6e:	74 07                	je     81006f77 <_strtol_l+0x195>
81006f70:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006f75:	eb 05                	jmp    81006f7c <_strtol_l+0x19a>
81006f77:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006f7c:	89 c7                	mov    %eax,%edi
81006f7e:	8b 45 08             	mov    0x8(%ebp),%eax
81006f81:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81006f87:	eb 08                	jmp    81006f91 <_strtol_l+0x1af>
81006f89:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006f8d:	74 02                	je     81006f91 <_strtol_l+0x1af>
81006f8f:	f7 df                	neg    %edi
81006f91:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006f95:	74 13                	je     81006faa <_strtol_l+0x1c8>
81006f97:	89 c8                	mov    %ecx,%eax
81006f99:	85 c0                	test   %eax,%eax
81006f9b:	74 05                	je     81006fa2 <_strtol_l+0x1c0>
81006f9d:	8d 46 ff             	lea    -0x1(%esi),%eax
81006fa0:	eb 03                	jmp    81006fa5 <_strtol_l+0x1c3>
81006fa2:	8b 45 0c             	mov    0xc(%ebp),%eax
81006fa5:	8b 55 10             	mov    0x10(%ebp),%edx
81006fa8:	89 02                	mov    %eax,(%edx)
81006faa:	89 f8                	mov    %edi,%eax
81006fac:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006faf:	5b                   	pop    %ebx
81006fb0:	5e                   	pop    %esi
81006fb1:	5f                   	pop    %edi
81006fb2:	5d                   	pop    %ebp
81006fb3:	c3                   	ret    

81006fb4 <_strtol_r>:
81006fb4:	55                   	push   %ebp
81006fb5:	89 e5                	mov    %esp,%ebp
81006fb7:	83 ec 08             	sub    $0x8,%esp
81006fba:	e8 19 fe ff ff       	call   81006dd8 <__get_current_locale>
81006fbf:	83 ec 0c             	sub    $0xc,%esp
81006fc2:	50                   	push   %eax
81006fc3:	ff 75 14             	pushl  0x14(%ebp)
81006fc6:	ff 75 10             	pushl  0x10(%ebp)
81006fc9:	ff 75 0c             	pushl  0xc(%ebp)
81006fcc:	ff 75 08             	pushl  0x8(%ebp)
81006fcf:	e8 0e fe ff ff       	call   81006de2 <_strtol_l>
81006fd4:	83 c4 20             	add    $0x20,%esp
81006fd7:	c9                   	leave  
81006fd8:	c3                   	ret    

81006fd9 <strtol_l>:
81006fd9:	55                   	push   %ebp
81006fda:	89 e5                	mov    %esp,%ebp
81006fdc:	83 ec 08             	sub    $0x8,%esp
81006fdf:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81006fe4:	83 ec 0c             	sub    $0xc,%esp
81006fe7:	ff 75 14             	pushl  0x14(%ebp)
81006fea:	ff 75 10             	pushl  0x10(%ebp)
81006fed:	ff 75 0c             	pushl  0xc(%ebp)
81006ff0:	ff 75 08             	pushl  0x8(%ebp)
81006ff3:	50                   	push   %eax
81006ff4:	e8 e9 fd ff ff       	call   81006de2 <_strtol_l>
81006ff9:	83 c4 20             	add    $0x20,%esp
81006ffc:	c9                   	leave  
81006ffd:	c3                   	ret    

81006ffe <strtol>:
81006ffe:	55                   	push   %ebp
81006fff:	89 e5                	mov    %esp,%ebp
81007001:	83 ec 08             	sub    $0x8,%esp
81007004:	e8 cf fd ff ff       	call   81006dd8 <__get_current_locale>
81007009:	8b 15 c4 90 00 81    	mov    0x810090c4,%edx
8100700f:	83 ec 0c             	sub    $0xc,%esp
81007012:	50                   	push   %eax
81007013:	ff 75 10             	pushl  0x10(%ebp)
81007016:	ff 75 0c             	pushl  0xc(%ebp)
81007019:	ff 75 08             	pushl  0x8(%ebp)
8100701c:	52                   	push   %edx
8100701d:	e8 c0 fd ff ff       	call   81006de2 <_strtol_l>
81007022:	83 c4 20             	add    $0x20,%esp
81007025:	c9                   	leave  
81007026:	c3                   	ret    

81007027 <__swbuf_r>:
81007027:	55                   	push   %ebp
81007028:	89 e5                	mov    %esp,%ebp
8100702a:	57                   	push   %edi
8100702b:	56                   	push   %esi
8100702c:	53                   	push   %ebx
8100702d:	83 ec 1c             	sub    $0x1c,%esp
81007030:	8b 7d 0c             	mov    0xc(%ebp),%edi
81007033:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007036:	8b 45 08             	mov    0x8(%ebp),%eax
81007039:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100703c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007040:	74 18                	je     8100705a <__swbuf_r+0x33>
81007042:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007045:	8b 40 38             	mov    0x38(%eax),%eax
81007048:	85 c0                	test   %eax,%eax
8100704a:	75 0e                	jne    8100705a <__swbuf_r+0x33>
8100704c:	83 ec 0c             	sub    $0xc,%esp
8100704f:	ff 75 e4             	pushl  -0x1c(%ebp)
81007052:	e8 80 a8 ff ff       	call   810018d7 <__sinit>
81007057:	83 c4 10             	add    $0x10,%esp
8100705a:	8b 43 18             	mov    0x18(%ebx),%eax
8100705d:	89 43 08             	mov    %eax,0x8(%ebx)
81007060:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007064:	98                   	cwtl   
81007065:	83 e0 08             	and    $0x8,%eax
81007068:	85 c0                	test   %eax,%eax
8100706a:	74 07                	je     81007073 <__swbuf_r+0x4c>
8100706c:	8b 43 10             	mov    0x10(%ebx),%eax
8100706f:	85 c0                	test   %eax,%eax
81007071:	75 1d                	jne    81007090 <__swbuf_r+0x69>
81007073:	83 ec 08             	sub    $0x8,%esp
81007076:	53                   	push   %ebx
81007077:	ff 75 08             	pushl  0x8(%ebp)
8100707a:	e8 21 01 00 00       	call   810071a0 <__swsetup_r>
8100707f:	83 c4 10             	add    $0x10,%esp
81007082:	85 c0                	test   %eax,%eax
81007084:	74 0a                	je     81007090 <__swbuf_r+0x69>
81007086:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100708b:	e9 a1 00 00 00       	jmp    81007131 <__swbuf_r+0x10a>
81007090:	89 f8                	mov    %edi,%eax
81007092:	0f b6 f8             	movzbl %al,%edi
81007095:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007099:	98                   	cwtl   
8100709a:	25 00 20 00 00       	and    $0x2000,%eax
8100709f:	85 c0                	test   %eax,%eax
810070a1:	75 14                	jne    810070b7 <__swbuf_r+0x90>
810070a3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070a7:	80 cc 20             	or     $0x20,%ah
810070aa:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810070ae:	8b 43 64             	mov    0x64(%ebx),%eax
810070b1:	80 e4 df             	and    $0xdf,%ah
810070b4:	89 43 64             	mov    %eax,0x64(%ebx)
810070b7:	8b 03                	mov    (%ebx),%eax
810070b9:	8b 53 10             	mov    0x10(%ebx),%edx
810070bc:	29 d0                	sub    %edx,%eax
810070be:	89 c6                	mov    %eax,%esi
810070c0:	8b 43 14             	mov    0x14(%ebx),%eax
810070c3:	39 c6                	cmp    %eax,%esi
810070c5:	7c 1f                	jl     810070e6 <__swbuf_r+0xbf>
810070c7:	83 ec 08             	sub    $0x8,%esp
810070ca:	53                   	push   %ebx
810070cb:	ff 75 08             	pushl  0x8(%ebp)
810070ce:	e8 17 a2 ff ff       	call   810012ea <_fflush_r>
810070d3:	83 c4 10             	add    $0x10,%esp
810070d6:	85 c0                	test   %eax,%eax
810070d8:	74 07                	je     810070e1 <__swbuf_r+0xba>
810070da:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810070df:	eb 50                	jmp    81007131 <__swbuf_r+0x10a>
810070e1:	be 00 00 00 00       	mov    $0x0,%esi
810070e6:	8b 43 08             	mov    0x8(%ebx),%eax
810070e9:	83 e8 01             	sub    $0x1,%eax
810070ec:	89 43 08             	mov    %eax,0x8(%ebx)
810070ef:	8b 03                	mov    (%ebx),%eax
810070f1:	8d 50 01             	lea    0x1(%eax),%edx
810070f4:	89 13                	mov    %edx,(%ebx)
810070f6:	89 fa                	mov    %edi,%edx
810070f8:	88 10                	mov    %dl,(%eax)
810070fa:	83 c6 01             	add    $0x1,%esi
810070fd:	8b 43 14             	mov    0x14(%ebx),%eax
81007100:	39 c6                	cmp    %eax,%esi
81007102:	74 11                	je     81007115 <__swbuf_r+0xee>
81007104:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007108:	98                   	cwtl   
81007109:	83 e0 01             	and    $0x1,%eax
8100710c:	85 c0                	test   %eax,%eax
8100710e:	74 1f                	je     8100712f <__swbuf_r+0x108>
81007110:	83 ff 0a             	cmp    $0xa,%edi
81007113:	75 1a                	jne    8100712f <__swbuf_r+0x108>
81007115:	83 ec 08             	sub    $0x8,%esp
81007118:	53                   	push   %ebx
81007119:	ff 75 08             	pushl  0x8(%ebp)
8100711c:	e8 c9 a1 ff ff       	call   810012ea <_fflush_r>
81007121:	83 c4 10             	add    $0x10,%esp
81007124:	85 c0                	test   %eax,%eax
81007126:	74 07                	je     8100712f <__swbuf_r+0x108>
81007128:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100712d:	eb 02                	jmp    81007131 <__swbuf_r+0x10a>
8100712f:	89 f8                	mov    %edi,%eax
81007131:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007134:	5b                   	pop    %ebx
81007135:	5e                   	pop    %esi
81007136:	5f                   	pop    %edi
81007137:	5d                   	pop    %ebp
81007138:	c3                   	ret    

81007139 <__swbuf>:
81007139:	55                   	push   %ebp
8100713a:	89 e5                	mov    %esp,%ebp
8100713c:	83 ec 08             	sub    $0x8,%esp
8100713f:	8b 55 08             	mov    0x8(%ebp),%edx
81007142:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81007145:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100714a:	83 ec 04             	sub    $0x4,%esp
8100714d:	51                   	push   %ecx
8100714e:	52                   	push   %edx
8100714f:	50                   	push   %eax
81007150:	e8 d2 fe ff ff       	call   81007027 <__swbuf_r>
81007155:	83 c4 10             	add    $0x10,%esp
81007158:	c9                   	leave  
81007159:	c3                   	ret    

8100715a <_write_r>:
8100715a:	55                   	push   %ebp
8100715b:	89 e5                	mov    %esp,%ebp
8100715d:	83 ec 18             	sub    $0x18,%esp
81007160:	c7 05 0c 9c 00 81 00 	movl   $0x0,0x81009c0c
81007167:	00 00 00 
8100716a:	83 ec 04             	sub    $0x4,%esp
8100716d:	ff 75 14             	pushl  0x14(%ebp)
81007170:	ff 75 10             	pushl  0x10(%ebp)
81007173:	ff 75 0c             	pushl  0xc(%ebp)
81007176:	e8 75 9b ff ff       	call   81000cf0 <write>
8100717b:	83 c4 10             	add    $0x10,%esp
8100717e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007181:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007185:	75 14                	jne    8100719b <_write_r+0x41>
81007187:	a1 0c 9c 00 81       	mov    0x81009c0c,%eax
8100718c:	85 c0                	test   %eax,%eax
8100718e:	74 0b                	je     8100719b <_write_r+0x41>
81007190:	8b 15 0c 9c 00 81    	mov    0x81009c0c,%edx
81007196:	8b 45 08             	mov    0x8(%ebp),%eax
81007199:	89 10                	mov    %edx,(%eax)
8100719b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100719e:	c9                   	leave  
8100719f:	c3                   	ret    

810071a0 <__swsetup_r>:
810071a0:	55                   	push   %ebp
810071a1:	89 e5                	mov    %esp,%ebp
810071a3:	53                   	push   %ebx
810071a4:	83 ec 14             	sub    $0x14,%esp
810071a7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810071aa:	a1 c4 90 00 81       	mov    0x810090c4,%eax
810071af:	89 45 f4             	mov    %eax,-0xc(%ebp)
810071b2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810071b6:	74 18                	je     810071d0 <__swsetup_r+0x30>
810071b8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810071bb:	8b 40 38             	mov    0x38(%eax),%eax
810071be:	85 c0                	test   %eax,%eax
810071c0:	75 0e                	jne    810071d0 <__swsetup_r+0x30>
810071c2:	83 ec 0c             	sub    $0xc,%esp
810071c5:	ff 75 f4             	pushl  -0xc(%ebp)
810071c8:	e8 0a a7 ff ff       	call   810018d7 <__sinit>
810071cd:	83 c4 10             	add    $0x10,%esp
810071d0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071d4:	98                   	cwtl   
810071d5:	83 e0 08             	and    $0x8,%eax
810071d8:	85 c0                	test   %eax,%eax
810071da:	0f 85 82 00 00 00    	jne    81007262 <__swsetup_r+0xc2>
810071e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071e4:	98                   	cwtl   
810071e5:	83 e0 10             	and    $0x10,%eax
810071e8:	85 c0                	test   %eax,%eax
810071ea:	75 1e                	jne    8100720a <__swsetup_r+0x6a>
810071ec:	8b 45 08             	mov    0x8(%ebp),%eax
810071ef:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810071f5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071f9:	83 c8 40             	or     $0x40,%eax
810071fc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81007200:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007205:	e9 ec 00 00 00       	jmp    810072f6 <__swsetup_r+0x156>
8100720a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100720e:	98                   	cwtl   
8100720f:	83 e0 04             	and    $0x4,%eax
81007212:	85 c0                	test   %eax,%eax
81007214:	74 41                	je     81007257 <__swsetup_r+0xb7>
81007216:	8b 43 30             	mov    0x30(%ebx),%eax
81007219:	85 c0                	test   %eax,%eax
8100721b:	74 23                	je     81007240 <__swsetup_r+0xa0>
8100721d:	8b 53 30             	mov    0x30(%ebx),%edx
81007220:	8d 43 40             	lea    0x40(%ebx),%eax
81007223:	39 c2                	cmp    %eax,%edx
81007225:	74 12                	je     81007239 <__swsetup_r+0x99>
81007227:	8b 43 30             	mov    0x30(%ebx),%eax
8100722a:	83 ec 08             	sub    $0x8,%esp
8100722d:	50                   	push   %eax
8100722e:	ff 75 08             	pushl  0x8(%ebp)
81007231:	e8 56 ac ff ff       	call   81001e8c <_free_r>
81007236:	83 c4 10             	add    $0x10,%esp
81007239:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81007240:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007244:	83 e0 db             	and    $0xffffffdb,%eax
81007247:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100724b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007252:	8b 43 10             	mov    0x10(%ebx),%eax
81007255:	89 03                	mov    %eax,(%ebx)
81007257:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100725b:	83 c8 08             	or     $0x8,%eax
8100725e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81007262:	8b 43 10             	mov    0x10(%ebx),%eax
81007265:	85 c0                	test   %eax,%eax
81007267:	75 2b                	jne    81007294 <__swsetup_r+0xf4>
81007269:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100726d:	98                   	cwtl   
8100726e:	25 00 02 00 00       	and    $0x200,%eax
81007273:	85 c0                	test   %eax,%eax
81007275:	74 0e                	je     81007285 <__swsetup_r+0xe5>
81007277:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100727b:	98                   	cwtl   
8100727c:	25 80 00 00 00       	and    $0x80,%eax
81007281:	85 c0                	test   %eax,%eax
81007283:	74 0f                	je     81007294 <__swsetup_r+0xf4>
81007285:	83 ec 08             	sub    $0x8,%esp
81007288:	53                   	push   %ebx
81007289:	ff 75 08             	pushl  0x8(%ebp)
8100728c:	e8 c4 ca ff ff       	call   81003d55 <__smakebuf_r>
81007291:	83 c4 10             	add    $0x10,%esp
81007294:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007298:	98                   	cwtl   
81007299:	83 e0 01             	and    $0x1,%eax
8100729c:	85 c0                	test   %eax,%eax
8100729e:	74 11                	je     810072b1 <__swsetup_r+0x111>
810072a0:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810072a7:	8b 43 14             	mov    0x14(%ebx),%eax
810072aa:	f7 d8                	neg    %eax
810072ac:	89 43 18             	mov    %eax,0x18(%ebx)
810072af:	eb 19                	jmp    810072ca <__swsetup_r+0x12a>
810072b1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072b5:	98                   	cwtl   
810072b6:	83 e0 02             	and    $0x2,%eax
810072b9:	85 c0                	test   %eax,%eax
810072bb:	75 05                	jne    810072c2 <__swsetup_r+0x122>
810072bd:	8b 43 14             	mov    0x14(%ebx),%eax
810072c0:	eb 05                	jmp    810072c7 <__swsetup_r+0x127>
810072c2:	b8 00 00 00 00       	mov    $0x0,%eax
810072c7:	89 43 08             	mov    %eax,0x8(%ebx)
810072ca:	8b 43 10             	mov    0x10(%ebx),%eax
810072cd:	85 c0                	test   %eax,%eax
810072cf:	75 20                	jne    810072f1 <__swsetup_r+0x151>
810072d1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072d5:	98                   	cwtl   
810072d6:	25 80 00 00 00       	and    $0x80,%eax
810072db:	85 c0                	test   %eax,%eax
810072dd:	74 12                	je     810072f1 <__swsetup_r+0x151>
810072df:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072e3:	83 c8 40             	or     $0x40,%eax
810072e6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810072ea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810072ef:	eb 05                	jmp    810072f6 <__swsetup_r+0x156>
810072f1:	b8 00 00 00 00       	mov    $0x0,%eax
810072f6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810072f9:	c9                   	leave  
810072fa:	c3                   	ret    

810072fb <__call_exitprocs>:
810072fb:	55                   	push   %ebp
810072fc:	89 e5                	mov    %esp,%ebp
810072fe:	57                   	push   %edi
810072ff:	56                   	push   %esi
81007300:	53                   	push   %ebx
81007301:	83 ec 1c             	sub    $0x1c,%esp
81007304:	a1 04 89 00 81       	mov    0x81008904,%eax
81007309:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
8100730f:	a1 04 89 00 81       	mov    0x81008904,%eax
81007314:	05 48 01 00 00       	add    $0x148,%eax
81007319:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100731c:	90                   	nop
8100731d:	85 db                	test   %ebx,%ebx
8100731f:	0f 84 e1 00 00 00    	je     81007406 <__call_exitprocs+0x10b>
81007325:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
8100732b:	8b 43 04             	mov    0x4(%ebx),%eax
8100732e:	8d 70 ff             	lea    -0x1(%eax),%esi
81007331:	e9 c6 00 00 00       	jmp    810073fc <__call_exitprocs+0x101>
81007336:	b8 01 00 00 00       	mov    $0x1,%eax
8100733b:	89 f1                	mov    %esi,%ecx
8100733d:	d3 e0                	shl    %cl,%eax
8100733f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007342:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007346:	74 17                	je     8100735f <__call_exitprocs+0x64>
81007348:	85 ff                	test   %edi,%edi
8100734a:	0f 84 a5 00 00 00    	je     810073f5 <__call_exitprocs+0xfa>
81007350:	8d 46 20             	lea    0x20(%esi),%eax
81007353:	8b 04 87             	mov    (%edi,%eax,4),%eax
81007356:	39 45 0c             	cmp    %eax,0xc(%ebp)
81007359:	0f 85 96 00 00 00    	jne    810073f5 <__call_exitprocs+0xfa>
8100735f:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81007363:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007366:	8b 43 04             	mov    0x4(%ebx),%eax
81007369:	83 e8 01             	sub    $0x1,%eax
8100736c:	39 c6                	cmp    %eax,%esi
8100736e:	75 0b                	jne    8100737b <__call_exitprocs+0x80>
81007370:	8b 43 04             	mov    0x4(%ebx),%eax
81007373:	83 e8 01             	sub    $0x1,%eax
81007376:	89 43 04             	mov    %eax,0x4(%ebx)
81007379:	eb 08                	jmp    81007383 <__call_exitprocs+0x88>
8100737b:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81007382:	00 
81007383:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81007387:	74 6f                	je     810073f8 <__call_exitprocs+0xfd>
81007389:	8b 43 04             	mov    0x4(%ebx),%eax
8100738c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100738f:	85 ff                	test   %edi,%edi
81007391:	74 0f                	je     810073a2 <__call_exitprocs+0xa7>
81007393:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81007399:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100739c:	21 d0                	and    %edx,%eax
8100739e:	85 c0                	test   %eax,%eax
810073a0:	75 07                	jne    810073a9 <__call_exitprocs+0xae>
810073a2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073a5:	ff d0                	call   *%eax
810073a7:	eb 32                	jmp    810073db <__call_exitprocs+0xe0>
810073a9:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
810073af:	8b 45 e0             	mov    -0x20(%ebp),%eax
810073b2:	21 d0                	and    %edx,%eax
810073b4:	85 c0                	test   %eax,%eax
810073b6:	75 14                	jne    810073cc <__call_exitprocs+0xd1>
810073b8:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810073bb:	83 ec 08             	sub    $0x8,%esp
810073be:	50                   	push   %eax
810073bf:	ff 75 08             	pushl  0x8(%ebp)
810073c2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073c5:	ff d0                	call   *%eax
810073c7:	83 c4 10             	add    $0x10,%esp
810073ca:	eb 0f                	jmp    810073db <__call_exitprocs+0xe0>
810073cc:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810073cf:	83 ec 0c             	sub    $0xc,%esp
810073d2:	50                   	push   %eax
810073d3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073d6:	ff d0                	call   *%eax
810073d8:	83 c4 10             	add    $0x10,%esp
810073db:	8b 43 04             	mov    0x4(%ebx),%eax
810073de:	39 45 d8             	cmp    %eax,-0x28(%ebp)
810073e1:	0f 85 1d ff ff ff    	jne    81007304 <__call_exitprocs+0x9>
810073e7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810073ea:	8b 00                	mov    (%eax),%eax
810073ec:	39 c3                	cmp    %eax,%ebx
810073ee:	74 09                	je     810073f9 <__call_exitprocs+0xfe>
810073f0:	e9 0f ff ff ff       	jmp    81007304 <__call_exitprocs+0x9>
810073f5:	90                   	nop
810073f6:	eb 01                	jmp    810073f9 <__call_exitprocs+0xfe>
810073f8:	90                   	nop
810073f9:	83 ee 01             	sub    $0x1,%esi
810073fc:	85 f6                	test   %esi,%esi
810073fe:	0f 89 32 ff ff ff    	jns    81007336 <__call_exitprocs+0x3b>
81007404:	eb 01                	jmp    81007407 <__call_exitprocs+0x10c>
81007406:	90                   	nop
81007407:	90                   	nop
81007408:	8d 65 f4             	lea    -0xc(%ebp),%esp
8100740b:	5b                   	pop    %ebx
8100740c:	5e                   	pop    %esi
8100740d:	5f                   	pop    %edi
8100740e:	5d                   	pop    %ebp
8100740f:	c3                   	ret    

81007410 <_close_r>:
81007410:	55                   	push   %ebp
81007411:	89 e5                	mov    %esp,%ebp
81007413:	83 ec 18             	sub    $0x18,%esp
81007416:	c7 05 0c 9c 00 81 00 	movl   $0x0,0x81009c0c
8100741d:	00 00 00 
81007420:	83 ec 0c             	sub    $0xc,%esp
81007423:	ff 75 0c             	pushl  0xc(%ebp)
81007426:	e8 f2 98 ff ff       	call   81000d1d <close>
8100742b:	83 c4 10             	add    $0x10,%esp
8100742e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007431:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007435:	75 14                	jne    8100744b <_close_r+0x3b>
81007437:	a1 0c 9c 00 81       	mov    0x81009c0c,%eax
8100743c:	85 c0                	test   %eax,%eax
8100743e:	74 0b                	je     8100744b <_close_r+0x3b>
81007440:	8b 15 0c 9c 00 81    	mov    0x81009c0c,%edx
81007446:	8b 45 08             	mov    0x8(%ebp),%eax
81007449:	89 10                	mov    %edx,(%eax)
8100744b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100744e:	c9                   	leave  
8100744f:	c3                   	ret    

81007450 <__errno>:
81007450:	55                   	push   %ebp
81007451:	89 e5                	mov    %esp,%ebp
81007453:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81007458:	5d                   	pop    %ebp
81007459:	c3                   	ret    

8100745a <__sflags>:
8100745a:	55                   	push   %ebp
8100745b:	89 e5                	mov    %esp,%ebp
8100745d:	57                   	push   %edi
8100745e:	56                   	push   %esi
8100745f:	53                   	push   %ebx
81007460:	8b 55 0c             	mov    0xc(%ebp),%edx
81007463:	0f b6 02             	movzbl (%edx),%eax
81007466:	0f be c0             	movsbl %al,%eax
81007469:	83 f8 77             	cmp    $0x77,%eax
8100746c:	74 20                	je     8100748e <__sflags+0x34>
8100746e:	83 f8 77             	cmp    $0x77,%eax
81007471:	7f 3d                	jg     810074b0 <__sflags+0x56>
81007473:	83 f8 61             	cmp    $0x61,%eax
81007476:	74 27                	je     8100749f <__sflags+0x45>
81007478:	83 f8 72             	cmp    $0x72,%eax
8100747b:	75 33                	jne    810074b0 <__sflags+0x56>
8100747d:	be 04 00 00 00       	mov    $0x4,%esi
81007482:	bb 00 00 00 00       	mov    $0x0,%ebx
81007487:	bf 00 00 00 00       	mov    $0x0,%edi
8100748c:	eb 32                	jmp    810074c0 <__sflags+0x66>
8100748e:	be 08 00 00 00       	mov    $0x8,%esi
81007493:	bb 01 00 00 00       	mov    $0x1,%ebx
81007498:	bf 00 06 00 00       	mov    $0x600,%edi
8100749d:	eb 21                	jmp    810074c0 <__sflags+0x66>
8100749f:	be 08 01 00 00       	mov    $0x108,%esi
810074a4:	bb 01 00 00 00       	mov    $0x1,%ebx
810074a9:	bf 08 02 00 00       	mov    $0x208,%edi
810074ae:	eb 10                	jmp    810074c0 <__sflags+0x66>
810074b0:	8b 45 08             	mov    0x8(%ebp),%eax
810074b3:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
810074b9:	b8 00 00 00 00       	mov    $0x0,%eax
810074be:	eb 4f                	jmp    8100750f <__sflags+0xb5>
810074c0:	eb 38                	jmp    810074fa <__sflags+0xa0>
810074c2:	0f b6 02             	movzbl (%edx),%eax
810074c5:	0f be c0             	movsbl %al,%eax
810074c8:	83 f8 78             	cmp    $0x78,%eax
810074cb:	74 27                	je     810074f4 <__sflags+0x9a>
810074cd:	83 f8 78             	cmp    $0x78,%eax
810074d0:	7f 27                	jg     810074f9 <__sflags+0x9f>
810074d2:	83 f8 2b             	cmp    $0x2b,%eax
810074d5:	74 07                	je     810074de <__sflags+0x84>
810074d7:	83 f8 62             	cmp    $0x62,%eax
810074da:	74 1e                	je     810074fa <__sflags+0xa0>
810074dc:	eb 1b                	jmp    810074f9 <__sflags+0x9f>
810074de:	89 f0                	mov    %esi,%eax
810074e0:	83 e0 e3             	and    $0xffffffe3,%eax
810074e3:	83 c8 10             	or     $0x10,%eax
810074e6:	89 c6                	mov    %eax,%esi
810074e8:	89 d8                	mov    %ebx,%eax
810074ea:	83 e0 fc             	and    $0xfffffffc,%eax
810074ed:	83 c8 02             	or     $0x2,%eax
810074f0:	89 c3                	mov    %eax,%ebx
810074f2:	eb 06                	jmp    810074fa <__sflags+0xa0>
810074f4:	80 cf 08             	or     $0x8,%bh
810074f7:	eb 01                	jmp    810074fa <__sflags+0xa0>
810074f9:	90                   	nop
810074fa:	83 c2 01             	add    $0x1,%edx
810074fd:	0f b6 02             	movzbl (%edx),%eax
81007500:	84 c0                	test   %al,%al
81007502:	75 be                	jne    810074c2 <__sflags+0x68>
81007504:	89 da                	mov    %ebx,%edx
81007506:	09 fa                	or     %edi,%edx
81007508:	8b 45 10             	mov    0x10(%ebp),%eax
8100750b:	89 10                	mov    %edx,(%eax)
8100750d:	89 f0                	mov    %esi,%eax
8100750f:	5b                   	pop    %ebx
81007510:	5e                   	pop    %esi
81007511:	5f                   	pop    %edi
81007512:	5d                   	pop    %ebp
81007513:	c3                   	ret    

81007514 <_fputc_r>:
81007514:	55                   	push   %ebp
81007515:	89 e5                	mov    %esp,%ebp
81007517:	83 ec 18             	sub    $0x18,%esp
8100751a:	8b 45 08             	mov    0x8(%ebp),%eax
8100751d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007520:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007524:	74 18                	je     8100753e <_fputc_r+0x2a>
81007526:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007529:	8b 40 38             	mov    0x38(%eax),%eax
8100752c:	85 c0                	test   %eax,%eax
8100752e:	75 0e                	jne    8100753e <_fputc_r+0x2a>
81007530:	83 ec 0c             	sub    $0xc,%esp
81007533:	ff 75 f4             	pushl  -0xc(%ebp)
81007536:	e8 9c a3 ff ff       	call   810018d7 <__sinit>
8100753b:	83 c4 10             	add    $0x10,%esp
8100753e:	83 ec 04             	sub    $0x4,%esp
81007541:	ff 75 10             	pushl  0x10(%ebp)
81007544:	ff 75 0c             	pushl  0xc(%ebp)
81007547:	ff 75 08             	pushl  0x8(%ebp)
8100754a:	e8 a3 0c 00 00       	call   810081f2 <_putc_r>
8100754f:	83 c4 10             	add    $0x10,%esp
81007552:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007555:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007558:	c9                   	leave  
81007559:	c3                   	ret    

8100755a <fputc>:
8100755a:	55                   	push   %ebp
8100755b:	89 e5                	mov    %esp,%ebp
8100755d:	83 ec 18             	sub    $0x18,%esp
81007560:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81007565:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007568:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100756b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100756e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81007572:	74 18                	je     8100758c <fputc+0x32>
81007574:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007577:	8b 40 38             	mov    0x38(%eax),%eax
8100757a:	85 c0                	test   %eax,%eax
8100757c:	75 0e                	jne    8100758c <fputc+0x32>
8100757e:	83 ec 0c             	sub    $0xc,%esp
81007581:	ff 75 f0             	pushl  -0x10(%ebp)
81007584:	e8 4e a3 ff ff       	call   810018d7 <__sinit>
81007589:	83 c4 10             	add    $0x10,%esp
8100758c:	83 ec 04             	sub    $0x4,%esp
8100758f:	ff 75 0c             	pushl  0xc(%ebp)
81007592:	ff 75 08             	pushl  0x8(%ebp)
81007595:	ff 75 f4             	pushl  -0xc(%ebp)
81007598:	e8 55 0c 00 00       	call   810081f2 <_putc_r>
8100759d:	83 c4 10             	add    $0x10,%esp
810075a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
810075a3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810075a6:	c9                   	leave  
810075a7:	c3                   	ret    

810075a8 <__sputc_r>:
810075a8:	55                   	push   %ebp
810075a9:	89 e5                	mov    %esp,%ebp
810075ab:	83 ec 08             	sub    $0x8,%esp
810075ae:	8b 45 10             	mov    0x10(%ebp),%eax
810075b1:	8b 40 08             	mov    0x8(%eax),%eax
810075b4:	8d 50 ff             	lea    -0x1(%eax),%edx
810075b7:	8b 45 10             	mov    0x10(%ebp),%eax
810075ba:	89 50 08             	mov    %edx,0x8(%eax)
810075bd:	8b 45 10             	mov    0x10(%ebp),%eax
810075c0:	8b 40 08             	mov    0x8(%eax),%eax
810075c3:	85 c0                	test   %eax,%eax
810075c5:	79 17                	jns    810075de <__sputc_r+0x36>
810075c7:	8b 45 10             	mov    0x10(%ebp),%eax
810075ca:	8b 50 08             	mov    0x8(%eax),%edx
810075cd:	8b 45 10             	mov    0x10(%ebp),%eax
810075d0:	8b 40 18             	mov    0x18(%eax),%eax
810075d3:	39 c2                	cmp    %eax,%edx
810075d5:	7c 21                	jl     810075f8 <__sputc_r+0x50>
810075d7:	8b 45 0c             	mov    0xc(%ebp),%eax
810075da:	3c 0a                	cmp    $0xa,%al
810075dc:	74 1a                	je     810075f8 <__sputc_r+0x50>
810075de:	8b 45 10             	mov    0x10(%ebp),%eax
810075e1:	8b 00                	mov    (%eax),%eax
810075e3:	8d 48 01             	lea    0x1(%eax),%ecx
810075e6:	8b 55 10             	mov    0x10(%ebp),%edx
810075e9:	89 0a                	mov    %ecx,(%edx)
810075eb:	8b 55 0c             	mov    0xc(%ebp),%edx
810075ee:	88 10                	mov    %dl,(%eax)
810075f0:	0f b6 00             	movzbl (%eax),%eax
810075f3:	0f b6 c0             	movzbl %al,%eax
810075f6:	eb 14                	jmp    8100760c <__sputc_r+0x64>
810075f8:	83 ec 04             	sub    $0x4,%esp
810075fb:	ff 75 10             	pushl  0x10(%ebp)
810075fe:	ff 75 0c             	pushl  0xc(%ebp)
81007601:	ff 75 08             	pushl  0x8(%ebp)
81007604:	e8 1e fa ff ff       	call   81007027 <__swbuf_r>
81007609:	83 c4 10             	add    $0x10,%esp
8100760c:	c9                   	leave  
8100760d:	c3                   	ret    

8100760e <__fputwc>:
8100760e:	55                   	push   %ebp
8100760f:	89 e5                	mov    %esp,%ebp
81007611:	83 ec 18             	sub    $0x18,%esp
81007614:	e8 41 03 00 00       	call   8100795a <__locale_mb_cur_max>
81007619:	83 f8 01             	cmp    $0x1,%eax
8100761c:	75 1e                	jne    8100763c <__fputwc+0x2e>
8100761e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007622:	7e 18                	jle    8100763c <__fputwc+0x2e>
81007624:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
8100762b:	7f 0f                	jg     8100763c <__fputwc+0x2e>
8100762d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007630:	88 45 ef             	mov    %al,-0x11(%ebp)
81007633:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
8100763a:	eb 3c                	jmp    81007678 <__fputwc+0x6a>
8100763c:	8b 45 10             	mov    0x10(%ebp),%eax
8100763f:	83 c0 5c             	add    $0x5c,%eax
81007642:	50                   	push   %eax
81007643:	ff 75 0c             	pushl  0xc(%ebp)
81007646:	8d 45 ef             	lea    -0x11(%ebp),%eax
81007649:	50                   	push   %eax
8100764a:	ff 75 08             	pushl  0x8(%ebp)
8100764d:	e8 7b 0d 00 00       	call   810083cd <_wcrtomb_r>
81007652:	83 c4 10             	add    $0x10,%esp
81007655:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007658:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
8100765c:	75 1a                	jne    81007678 <__fputwc+0x6a>
8100765e:	8b 45 10             	mov    0x10(%ebp),%eax
81007661:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007665:	83 c8 40             	or     $0x40,%eax
81007668:	89 c2                	mov    %eax,%edx
8100766a:	8b 45 10             	mov    0x10(%ebp),%eax
8100766d:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007671:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007676:	eb 44                	jmp    810076bc <__fputwc+0xae>
81007678:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100767f:	eb 30                	jmp    810076b1 <__fputwc+0xa3>
81007681:	8d 55 ef             	lea    -0x11(%ebp),%edx
81007684:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007687:	01 d0                	add    %edx,%eax
81007689:	0f b6 00             	movzbl (%eax),%eax
8100768c:	0f b6 c0             	movzbl %al,%eax
8100768f:	83 ec 04             	sub    $0x4,%esp
81007692:	ff 75 10             	pushl  0x10(%ebp)
81007695:	50                   	push   %eax
81007696:	ff 75 08             	pushl  0x8(%ebp)
81007699:	e8 0a ff ff ff       	call   810075a8 <__sputc_r>
8100769e:	83 c4 10             	add    $0x10,%esp
810076a1:	83 f8 ff             	cmp    $0xffffffff,%eax
810076a4:	75 07                	jne    810076ad <__fputwc+0x9f>
810076a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810076ab:	eb 0f                	jmp    810076bc <__fputwc+0xae>
810076ad:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810076b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810076b4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810076b7:	72 c8                	jb     81007681 <__fputwc+0x73>
810076b9:	8b 45 0c             	mov    0xc(%ebp),%eax
810076bc:	c9                   	leave  
810076bd:	c3                   	ret    

810076be <_fputwc_r>:
810076be:	55                   	push   %ebp
810076bf:	89 e5                	mov    %esp,%ebp
810076c1:	83 ec 18             	sub    $0x18,%esp
810076c4:	8b 45 10             	mov    0x10(%ebp),%eax
810076c7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810076cb:	98                   	cwtl   
810076cc:	25 00 20 00 00       	and    $0x2000,%eax
810076d1:	85 c0                	test   %eax,%eax
810076d3:	75 24                	jne    810076f9 <_fputwc_r+0x3b>
810076d5:	8b 45 10             	mov    0x10(%ebp),%eax
810076d8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810076dc:	80 cc 20             	or     $0x20,%ah
810076df:	89 c2                	mov    %eax,%edx
810076e1:	8b 45 10             	mov    0x10(%ebp),%eax
810076e4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810076e8:	8b 45 10             	mov    0x10(%ebp),%eax
810076eb:	8b 40 64             	mov    0x64(%eax),%eax
810076ee:	80 cc 20             	or     $0x20,%ah
810076f1:	89 c2                	mov    %eax,%edx
810076f3:	8b 45 10             	mov    0x10(%ebp),%eax
810076f6:	89 50 64             	mov    %edx,0x64(%eax)
810076f9:	83 ec 04             	sub    $0x4,%esp
810076fc:	ff 75 10             	pushl  0x10(%ebp)
810076ff:	ff 75 0c             	pushl  0xc(%ebp)
81007702:	ff 75 08             	pushl  0x8(%ebp)
81007705:	e8 04 ff ff ff       	call   8100760e <__fputwc>
8100770a:	83 c4 10             	add    $0x10,%esp
8100770d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007710:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007713:	c9                   	leave  
81007714:	c3                   	ret    

81007715 <fputwc>:
81007715:	55                   	push   %ebp
81007716:	89 e5                	mov    %esp,%ebp
81007718:	83 ec 18             	sub    $0x18,%esp
8100771b:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81007720:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007723:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007726:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007729:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100772d:	74 18                	je     81007747 <fputwc+0x32>
8100772f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007732:	8b 40 38             	mov    0x38(%eax),%eax
81007735:	85 c0                	test   %eax,%eax
81007737:	75 0e                	jne    81007747 <fputwc+0x32>
81007739:	83 ec 0c             	sub    $0xc,%esp
8100773c:	ff 75 f0             	pushl  -0x10(%ebp)
8100773f:	e8 93 a1 ff ff       	call   810018d7 <__sinit>
81007744:	83 c4 10             	add    $0x10,%esp
81007747:	83 ec 04             	sub    $0x4,%esp
8100774a:	ff 75 0c             	pushl  0xc(%ebp)
8100774d:	ff 75 08             	pushl  0x8(%ebp)
81007750:	ff 75 f4             	pushl  -0xc(%ebp)
81007753:	e8 66 ff ff ff       	call   810076be <_fputwc_r>
81007758:	83 c4 10             	add    $0x10,%esp
8100775b:	c9                   	leave  
8100775c:	c3                   	ret    

8100775d <_findenv>:
8100775d:	55                   	push   %ebp
8100775e:	89 e5                	mov    %esp,%ebp
81007760:	83 ec 08             	sub    $0x8,%esp
81007763:	8b 55 08             	mov    0x8(%ebp),%edx
81007766:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100776b:	83 ec 04             	sub    $0x4,%esp
8100776e:	ff 75 0c             	pushl  0xc(%ebp)
81007771:	52                   	push   %edx
81007772:	50                   	push   %eax
81007773:	e8 25 00 00 00       	call   8100779d <_findenv_r>
81007778:	83 c4 10             	add    $0x10,%esp
8100777b:	c9                   	leave  
8100777c:	c3                   	ret    

8100777d <getenv>:
8100777d:	55                   	push   %ebp
8100777e:	89 e5                	mov    %esp,%ebp
81007780:	83 ec 18             	sub    $0x18,%esp
81007783:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81007788:	83 ec 04             	sub    $0x4,%esp
8100778b:	8d 55 f4             	lea    -0xc(%ebp),%edx
8100778e:	52                   	push   %edx
8100778f:	ff 75 08             	pushl  0x8(%ebp)
81007792:	50                   	push   %eax
81007793:	e8 05 00 00 00       	call   8100779d <_findenv_r>
81007798:	83 c4 10             	add    $0x10,%esp
8100779b:	c9                   	leave  
8100779c:	c3                   	ret    

8100779d <_findenv_r>:
8100779d:	55                   	push   %ebp
8100779e:	89 e5                	mov    %esp,%ebp
810077a0:	57                   	push   %edi
810077a1:	56                   	push   %esi
810077a2:	53                   	push   %ebx
810077a3:	83 ec 1c             	sub    $0x1c,%esp
810077a6:	8b 7d 0c             	mov    0xc(%ebp),%edi
810077a9:	83 ec 0c             	sub    $0xc,%esp
810077ac:	ff 75 08             	pushl  0x8(%ebp)
810077af:	e8 8a 0d 00 00       	call   8100853e <__env_lock>
810077b4:	83 c4 10             	add    $0x10,%esp
810077b7:	a1 f0 94 00 81       	mov    0x810094f0,%eax
810077bc:	8b 00                	mov    (%eax),%eax
810077be:	85 c0                	test   %eax,%eax
810077c0:	75 18                	jne    810077da <_findenv_r+0x3d>
810077c2:	83 ec 0c             	sub    $0xc,%esp
810077c5:	ff 75 08             	pushl  0x8(%ebp)
810077c8:	e8 77 0d 00 00       	call   81008544 <__env_unlock>
810077cd:	83 c4 10             	add    $0x10,%esp
810077d0:	b8 00 00 00 00       	mov    $0x0,%eax
810077d5:	e9 a8 00 00 00       	jmp    81007882 <_findenv_r+0xe5>
810077da:	89 7d e4             	mov    %edi,-0x1c(%ebp)
810077dd:	eb 04                	jmp    810077e3 <_findenv_r+0x46>
810077df:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810077e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077e6:	0f b6 00             	movzbl (%eax),%eax
810077e9:	84 c0                	test   %al,%al
810077eb:	74 0a                	je     810077f7 <_findenv_r+0x5a>
810077ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077f0:	0f b6 00             	movzbl (%eax),%eax
810077f3:	3c 3d                	cmp    $0x3d,%al
810077f5:	75 e8                	jne    810077df <_findenv_r+0x42>
810077f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077fa:	0f b6 00             	movzbl (%eax),%eax
810077fd:	3c 3d                	cmp    $0x3d,%al
810077ff:	74 6e                	je     8100786f <_findenv_r+0xd2>
81007801:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007804:	29 f8                	sub    %edi,%eax
81007806:	89 c6                	mov    %eax,%esi
81007808:	a1 f0 94 00 81       	mov    0x810094f0,%eax
8100780d:	8b 18                	mov    (%eax),%ebx
8100780f:	eb 58                	jmp    81007869 <_findenv_r+0xcc>
81007811:	89 f2                	mov    %esi,%edx
81007813:	8b 03                	mov    (%ebx),%eax
81007815:	83 ec 04             	sub    $0x4,%esp
81007818:	52                   	push   %edx
81007819:	57                   	push   %edi
8100781a:	50                   	push   %eax
8100781b:	e8 b6 0a 00 00       	call   810082d6 <strncmp>
81007820:	83 c4 10             	add    $0x10,%esp
81007823:	85 c0                	test   %eax,%eax
81007825:	75 3f                	jne    81007866 <_findenv_r+0xc9>
81007827:	8b 03                	mov    (%ebx),%eax
81007829:	89 f2                	mov    %esi,%edx
8100782b:	01 d0                	add    %edx,%eax
8100782d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007830:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007833:	0f b6 00             	movzbl (%eax),%eax
81007836:	3c 3d                	cmp    $0x3d,%al
81007838:	75 2c                	jne    81007866 <_findenv_r+0xc9>
8100783a:	a1 f0 94 00 81       	mov    0x810094f0,%eax
8100783f:	8b 10                	mov    (%eax),%edx
81007841:	89 d8                	mov    %ebx,%eax
81007843:	29 d0                	sub    %edx,%eax
81007845:	c1 f8 02             	sar    $0x2,%eax
81007848:	89 c2                	mov    %eax,%edx
8100784a:	8b 45 10             	mov    0x10(%ebp),%eax
8100784d:	89 10                	mov    %edx,(%eax)
8100784f:	83 ec 0c             	sub    $0xc,%esp
81007852:	ff 75 08             	pushl  0x8(%ebp)
81007855:	e8 ea 0c 00 00       	call   81008544 <__env_unlock>
8100785a:	83 c4 10             	add    $0x10,%esp
8100785d:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81007861:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007864:	eb 1c                	jmp    81007882 <_findenv_r+0xe5>
81007866:	83 c3 04             	add    $0x4,%ebx
81007869:	8b 03                	mov    (%ebx),%eax
8100786b:	85 c0                	test   %eax,%eax
8100786d:	75 a2                	jne    81007811 <_findenv_r+0x74>
8100786f:	83 ec 0c             	sub    $0xc,%esp
81007872:	ff 75 08             	pushl  0x8(%ebp)
81007875:	e8 ca 0c 00 00       	call   81008544 <__env_unlock>
8100787a:	83 c4 10             	add    $0x10,%esp
8100787d:	b8 00 00 00 00       	mov    $0x0,%eax
81007882:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007885:	5b                   	pop    %ebx
81007886:	5e                   	pop    %esi
81007887:	5f                   	pop    %edi
81007888:	5d                   	pop    %ebp
81007889:	c3                   	ret    

8100788a <_getenv_r>:
8100788a:	55                   	push   %ebp
8100788b:	89 e5                	mov    %esp,%ebp
8100788d:	83 ec 18             	sub    $0x18,%esp
81007890:	83 ec 04             	sub    $0x4,%esp
81007893:	8d 45 f4             	lea    -0xc(%ebp),%eax
81007896:	50                   	push   %eax
81007897:	ff 75 0c             	pushl  0xc(%ebp)
8100789a:	ff 75 08             	pushl  0x8(%ebp)
8100789d:	e8 fb fe ff ff       	call   8100779d <_findenv_r>
810078a2:	83 c4 10             	add    $0x10,%esp
810078a5:	c9                   	leave  
810078a6:	c3                   	ret    

810078a7 <_isatty_r>:
810078a7:	55                   	push   %ebp
810078a8:	89 e5                	mov    %esp,%ebp
810078aa:	83 ec 18             	sub    $0x18,%esp
810078ad:	c7 05 0c 9c 00 81 00 	movl   $0x0,0x81009c0c
810078b4:	00 00 00 
810078b7:	83 ec 0c             	sub    $0xc,%esp
810078ba:	ff 75 0c             	pushl  0xc(%ebp)
810078bd:	e8 d0 94 ff ff       	call   81000d92 <isatty>
810078c2:	83 c4 10             	add    $0x10,%esp
810078c5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810078c8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810078cc:	75 14                	jne    810078e2 <_isatty_r+0x3b>
810078ce:	a1 0c 9c 00 81       	mov    0x81009c0c,%eax
810078d3:	85 c0                	test   %eax,%eax
810078d5:	74 0b                	je     810078e2 <_isatty_r+0x3b>
810078d7:	8b 15 0c 9c 00 81    	mov    0x81009c0c,%edx
810078dd:	8b 45 08             	mov    0x8(%ebp),%eax
810078e0:	89 10                	mov    %edx,(%eax)
810078e2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810078e5:	c9                   	leave  
810078e6:	c3                   	ret    

810078e7 <__get_global_locale>:
810078e7:	55                   	push   %ebp
810078e8:	89 e5                	mov    %esp,%ebp
810078ea:	b8 00 95 00 81       	mov    $0x81009500,%eax
810078ef:	5d                   	pop    %ebp
810078f0:	c3                   	ret    

810078f1 <__get_current_locale>:
810078f1:	55                   	push   %ebp
810078f2:	89 e5                	mov    %esp,%ebp
810078f4:	e8 ee ff ff ff       	call   810078e7 <__get_global_locale>
810078f9:	5d                   	pop    %ebp
810078fa:	c3                   	ret    

810078fb <_setlocale_r>:
810078fb:	55                   	push   %ebp
810078fc:	89 e5                	mov    %esp,%ebp
810078fe:	83 ec 08             	sub    $0x8,%esp
81007901:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007905:	74 4c                	je     81007953 <_setlocale_r+0x58>
81007907:	83 ec 08             	sub    $0x8,%esp
8100790a:	68 64 8c 00 81       	push   $0x81008c64
8100790f:	ff 75 10             	pushl  0x10(%ebp)
81007912:	e8 25 f2 ff ff       	call   81006b3c <strcmp>
81007917:	83 c4 10             	add    $0x10,%esp
8100791a:	85 c0                	test   %eax,%eax
8100791c:	74 35                	je     81007953 <_setlocale_r+0x58>
8100791e:	83 ec 08             	sub    $0x8,%esp
81007921:	68 6a 8c 00 81       	push   $0x81008c6a
81007926:	ff 75 10             	pushl  0x10(%ebp)
81007929:	e8 0e f2 ff ff       	call   81006b3c <strcmp>
8100792e:	83 c4 10             	add    $0x10,%esp
81007931:	85 c0                	test   %eax,%eax
81007933:	74 1e                	je     81007953 <_setlocale_r+0x58>
81007935:	83 ec 08             	sub    $0x8,%esp
81007938:	68 63 8c 00 81       	push   $0x81008c63
8100793d:	ff 75 10             	pushl  0x10(%ebp)
81007940:	e8 f7 f1 ff ff       	call   81006b3c <strcmp>
81007945:	83 c4 10             	add    $0x10,%esp
81007948:	85 c0                	test   %eax,%eax
8100794a:	74 07                	je     81007953 <_setlocale_r+0x58>
8100794c:	b8 00 00 00 00       	mov    $0x0,%eax
81007951:	eb 05                	jmp    81007958 <_setlocale_r+0x5d>
81007953:	b8 6a 8c 00 81       	mov    $0x81008c6a,%eax
81007958:	c9                   	leave  
81007959:	c3                   	ret    

8100795a <__locale_mb_cur_max>:
8100795a:	55                   	push   %ebp
8100795b:	89 e5                	mov    %esp,%ebp
8100795d:	e8 8f ff ff ff       	call   810078f1 <__get_current_locale>
81007962:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81007969:	0f be c0             	movsbl %al,%eax
8100796c:	5d                   	pop    %ebp
8100796d:	c3                   	ret    

8100796e <setlocale>:
8100796e:	55                   	push   %ebp
8100796f:	89 e5                	mov    %esp,%ebp
81007971:	83 ec 08             	sub    $0x8,%esp
81007974:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81007979:	83 ec 04             	sub    $0x4,%esp
8100797c:	ff 75 0c             	pushl  0xc(%ebp)
8100797f:	ff 75 08             	pushl  0x8(%ebp)
81007982:	50                   	push   %eax
81007983:	e8 73 ff ff ff       	call   810078fb <_setlocale_r>
81007988:	83 c4 10             	add    $0x10,%esp
8100798b:	c9                   	leave  
8100798c:	c3                   	ret    

8100798d <_lseek_r>:
8100798d:	55                   	push   %ebp
8100798e:	89 e5                	mov    %esp,%ebp
81007990:	83 ec 18             	sub    $0x18,%esp
81007993:	c7 05 0c 9c 00 81 00 	movl   $0x0,0x81009c0c
8100799a:	00 00 00 
8100799d:	83 ec 04             	sub    $0x4,%esp
810079a0:	ff 75 14             	pushl  0x14(%ebp)
810079a3:	ff 75 10             	pushl  0x10(%ebp)
810079a6:	ff 75 0c             	pushl  0xc(%ebp)
810079a9:	e8 90 93 ff ff       	call   81000d3e <lseek>
810079ae:	83 c4 10             	add    $0x10,%esp
810079b1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810079b4:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810079b8:	75 14                	jne    810079ce <_lseek_r+0x41>
810079ba:	a1 0c 9c 00 81       	mov    0x81009c0c,%eax
810079bf:	85 c0                	test   %eax,%eax
810079c1:	74 0b                	je     810079ce <_lseek_r+0x41>
810079c3:	8b 15 0c 9c 00 81    	mov    0x81009c0c,%edx
810079c9:	8b 45 08             	mov    0x8(%ebp),%eax
810079cc:	89 10                	mov    %edx,(%eax)
810079ce:	8b 45 f4             	mov    -0xc(%ebp),%eax
810079d1:	c9                   	leave  
810079d2:	c3                   	ret    

810079d3 <__get_global_locale>:
810079d3:	55                   	push   %ebp
810079d4:	89 e5                	mov    %esp,%ebp
810079d6:	b8 00 95 00 81       	mov    $0x81009500,%eax
810079db:	5d                   	pop    %ebp
810079dc:	c3                   	ret    

810079dd <__get_current_locale>:
810079dd:	55                   	push   %ebp
810079de:	89 e5                	mov    %esp,%ebp
810079e0:	e8 ee ff ff ff       	call   810079d3 <__get_global_locale>
810079e5:	5d                   	pop    %ebp
810079e6:	c3                   	ret    

810079e7 <_mbtowc_r>:
810079e7:	55                   	push   %ebp
810079e8:	89 e5                	mov    %esp,%ebp
810079ea:	83 ec 08             	sub    $0x8,%esp
810079ed:	e8 eb ff ff ff       	call   810079dd <__get_current_locale>
810079f2:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810079f8:	83 ec 0c             	sub    $0xc,%esp
810079fb:	ff 75 18             	pushl  0x18(%ebp)
810079fe:	ff 75 14             	pushl  0x14(%ebp)
81007a01:	ff 75 10             	pushl  0x10(%ebp)
81007a04:	ff 75 0c             	pushl  0xc(%ebp)
81007a07:	ff 75 08             	pushl  0x8(%ebp)
81007a0a:	ff d0                	call   *%eax
81007a0c:	83 c4 20             	add    $0x20,%esp
81007a0f:	c9                   	leave  
81007a10:	c3                   	ret    

81007a11 <__ascii_mbtowc>:
81007a11:	55                   	push   %ebp
81007a12:	89 e5                	mov    %esp,%ebp
81007a14:	83 ec 10             	sub    $0x10,%esp
81007a17:	8b 45 10             	mov    0x10(%ebp),%eax
81007a1a:	89 45 fc             	mov    %eax,-0x4(%ebp)
81007a1d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007a21:	75 06                	jne    81007a29 <__ascii_mbtowc+0x18>
81007a23:	8d 45 f8             	lea    -0x8(%ebp),%eax
81007a26:	89 45 0c             	mov    %eax,0xc(%ebp)
81007a29:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007a2d:	75 07                	jne    81007a36 <__ascii_mbtowc+0x25>
81007a2f:	b8 00 00 00 00       	mov    $0x0,%eax
81007a34:	eb 31                	jmp    81007a67 <__ascii_mbtowc+0x56>
81007a36:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81007a3a:	75 07                	jne    81007a43 <__ascii_mbtowc+0x32>
81007a3c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81007a41:	eb 24                	jmp    81007a67 <__ascii_mbtowc+0x56>
81007a43:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007a46:	0f b6 00             	movzbl (%eax),%eax
81007a49:	0f b6 d0             	movzbl %al,%edx
81007a4c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a4f:	89 10                	mov    %edx,(%eax)
81007a51:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007a54:	0f b6 00             	movzbl (%eax),%eax
81007a57:	84 c0                	test   %al,%al
81007a59:	75 07                	jne    81007a62 <__ascii_mbtowc+0x51>
81007a5b:	b8 00 00 00 00       	mov    $0x0,%eax
81007a60:	eb 05                	jmp    81007a67 <__ascii_mbtowc+0x56>
81007a62:	b8 01 00 00 00       	mov    $0x1,%eax
81007a67:	c9                   	leave  
81007a68:	c3                   	ret    

81007a69 <__ssputs_r>:
81007a69:	55                   	push   %ebp
81007a6a:	89 e5                	mov    %esp,%ebp
81007a6c:	53                   	push   %ebx
81007a6d:	83 ec 14             	sub    $0x14,%esp
81007a70:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a73:	8b 58 08             	mov    0x8(%eax),%ebx
81007a76:	89 d8                	mov    %ebx,%eax
81007a78:	39 45 14             	cmp    %eax,0x14(%ebp)
81007a7b:	0f 82 3c 01 00 00    	jb     81007bbd <__ssputs_r+0x154>
81007a81:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a84:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007a88:	98                   	cwtl   
81007a89:	25 80 04 00 00       	and    $0x480,%eax
81007a8e:	85 c0                	test   %eax,%eax
81007a90:	0f 84 27 01 00 00    	je     81007bbd <__ssputs_r+0x154>
81007a96:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a99:	8b 10                	mov    (%eax),%edx
81007a9b:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a9e:	8b 48 10             	mov    0x10(%eax),%ecx
81007aa1:	89 d0                	mov    %edx,%eax
81007aa3:	29 c8                	sub    %ecx,%eax
81007aa5:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007aa8:	8b 45 0c             	mov    0xc(%ebp),%eax
81007aab:	8b 50 14             	mov    0x14(%eax),%edx
81007aae:	89 d0                	mov    %edx,%eax
81007ab0:	01 c0                	add    %eax,%eax
81007ab2:	01 d0                	add    %edx,%eax
81007ab4:	89 c2                	mov    %eax,%edx
81007ab6:	c1 ea 1f             	shr    $0x1f,%edx
81007ab9:	01 d0                	add    %edx,%eax
81007abb:	d1 f8                	sar    %eax
81007abd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007ac0:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007ac3:	8b 45 14             	mov    0x14(%ebp),%eax
81007ac6:	01 d0                	add    %edx,%eax
81007ac8:	8d 50 01             	lea    0x1(%eax),%edx
81007acb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007ace:	39 c2                	cmp    %eax,%edx
81007ad0:	76 0e                	jbe    81007ae0 <__ssputs_r+0x77>
81007ad2:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007ad5:	8b 45 14             	mov    0x14(%ebp),%eax
81007ad8:	01 d0                	add    %edx,%eax
81007ada:	83 c0 01             	add    $0x1,%eax
81007add:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007ae0:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ae3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007ae7:	98                   	cwtl   
81007ae8:	25 00 04 00 00       	and    $0x400,%eax
81007aed:	85 c0                	test   %eax,%eax
81007aef:	74 5a                	je     81007b4b <__ssputs_r+0xe2>
81007af1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007af4:	83 ec 08             	sub    $0x8,%esp
81007af7:	50                   	push   %eax
81007af8:	ff 75 08             	pushl  0x8(%ebp)
81007afb:	e8 a1 c6 ff ff       	call   810041a1 <_malloc_r>
81007b00:	83 c4 10             	add    $0x10,%esp
81007b03:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007b06:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007b0a:	75 0e                	jne    81007b1a <__ssputs_r+0xb1>
81007b0c:	8b 45 08             	mov    0x8(%ebp),%eax
81007b0f:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007b15:	e9 e9 00 00 00       	jmp    81007c03 <__ssputs_r+0x19a>
81007b1a:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007b1d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b20:	8b 40 10             	mov    0x10(%eax),%eax
81007b23:	83 ec 04             	sub    $0x4,%esp
81007b26:	52                   	push   %edx
81007b27:	50                   	push   %eax
81007b28:	ff 75 f4             	pushl  -0xc(%ebp)
81007b2b:	e8 88 cf ff ff       	call   81004ab8 <memcpy>
81007b30:	83 c4 10             	add    $0x10,%esp
81007b33:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b36:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007b3a:	66 25 7f fb          	and    $0xfb7f,%ax
81007b3e:	0c 80                	or     $0x80,%al
81007b40:	89 c2                	mov    %eax,%edx
81007b42:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b45:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007b49:	eb 42                	jmp    81007b8d <__ssputs_r+0x124>
81007b4b:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007b4e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b51:	8b 40 10             	mov    0x10(%eax),%eax
81007b54:	83 ec 04             	sub    $0x4,%esp
81007b57:	52                   	push   %edx
81007b58:	50                   	push   %eax
81007b59:	ff 75 08             	pushl  0x8(%ebp)
81007b5c:	e8 a9 dd ff ff       	call   8100590a <_realloc_r>
81007b61:	83 c4 10             	add    $0x10,%esp
81007b64:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007b67:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007b6b:	75 20                	jne    81007b8d <__ssputs_r+0x124>
81007b6d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b70:	8b 40 10             	mov    0x10(%eax),%eax
81007b73:	83 ec 08             	sub    $0x8,%esp
81007b76:	50                   	push   %eax
81007b77:	ff 75 08             	pushl  0x8(%ebp)
81007b7a:	e8 0d a3 ff ff       	call   81001e8c <_free_r>
81007b7f:	83 c4 10             	add    $0x10,%esp
81007b82:	8b 45 08             	mov    0x8(%ebp),%eax
81007b85:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007b8b:	eb 76                	jmp    81007c03 <__ssputs_r+0x19a>
81007b8d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b90:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007b93:	89 50 10             	mov    %edx,0x10(%eax)
81007b96:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007b99:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007b9c:	01 c2                	add    %eax,%edx
81007b9e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ba1:	89 10                	mov    %edx,(%eax)
81007ba3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ba6:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007ba9:	89 50 14             	mov    %edx,0x14(%eax)
81007bac:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007baf:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007bb2:	2b 45 ec             	sub    -0x14(%ebp),%eax
81007bb5:	89 c2                	mov    %eax,%edx
81007bb7:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bba:	89 50 08             	mov    %edx,0x8(%eax)
81007bbd:	89 d8                	mov    %ebx,%eax
81007bbf:	39 45 14             	cmp    %eax,0x14(%ebp)
81007bc2:	73 03                	jae    81007bc7 <__ssputs_r+0x15e>
81007bc4:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007bc7:	89 da                	mov    %ebx,%edx
81007bc9:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bcc:	8b 00                	mov    (%eax),%eax
81007bce:	83 ec 04             	sub    $0x4,%esp
81007bd1:	52                   	push   %edx
81007bd2:	ff 75 10             	pushl  0x10(%ebp)
81007bd5:	50                   	push   %eax
81007bd6:	e8 25 cf ff ff       	call   81004b00 <memmove>
81007bdb:	83 c4 10             	add    $0x10,%esp
81007bde:	8b 45 0c             	mov    0xc(%ebp),%eax
81007be1:	8b 40 08             	mov    0x8(%eax),%eax
81007be4:	29 d8                	sub    %ebx,%eax
81007be6:	89 c2                	mov    %eax,%edx
81007be8:	8b 45 0c             	mov    0xc(%ebp),%eax
81007beb:	89 50 08             	mov    %edx,0x8(%eax)
81007bee:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bf1:	8b 00                	mov    (%eax),%eax
81007bf3:	89 da                	mov    %ebx,%edx
81007bf5:	01 c2                	add    %eax,%edx
81007bf7:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bfa:	89 10                	mov    %edx,(%eax)
81007bfc:	b8 00 00 00 00       	mov    $0x0,%eax
81007c01:	eb 18                	jmp    81007c1b <__ssputs_r+0x1b2>
81007c03:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c06:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007c0a:	83 c8 40             	or     $0x40,%eax
81007c0d:	89 c2                	mov    %eax,%edx
81007c0f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c12:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007c16:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007c1b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007c1e:	c9                   	leave  
81007c1f:	c3                   	ret    

81007c20 <__ssprint_r>:
81007c20:	55                   	push   %ebp
81007c21:	89 e5                	mov    %esp,%ebp
81007c23:	57                   	push   %edi
81007c24:	56                   	push   %esi
81007c25:	53                   	push   %ebx
81007c26:	83 ec 2c             	sub    $0x2c,%esp
81007c29:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007c2c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81007c33:	8b 03                	mov    (%ebx),%eax
81007c35:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007c38:	be 00 00 00 00       	mov    $0x0,%esi
81007c3d:	8b 43 08             	mov    0x8(%ebx),%eax
81007c40:	85 c0                	test   %eax,%eax
81007c42:	75 22                	jne    81007c66 <__ssprint_r+0x46>
81007c44:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007c4b:	b8 00 00 00 00       	mov    $0x0,%eax
81007c50:	e9 f5 01 00 00       	jmp    81007e4a <__ssprint_r+0x22a>
81007c55:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007c58:	8b 08                	mov    (%eax),%ecx
81007c5a:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
81007c5d:	8b 70 04             	mov    0x4(%eax),%esi
81007c60:	83 c0 08             	add    $0x8,%eax
81007c63:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007c66:	85 f6                	test   %esi,%esi
81007c68:	74 eb                	je     81007c55 <__ssprint_r+0x35>
81007c6a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c6d:	8b 78 08             	mov    0x8(%eax),%edi
81007c70:	89 f8                	mov    %edi,%eax
81007c72:	39 c6                	cmp    %eax,%esi
81007c74:	0f 82 38 01 00 00    	jb     81007db2 <__ssprint_r+0x192>
81007c7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c7d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007c81:	98                   	cwtl   
81007c82:	25 80 04 00 00       	and    $0x480,%eax
81007c87:	85 c0                	test   %eax,%eax
81007c89:	0f 84 23 01 00 00    	je     81007db2 <__ssprint_r+0x192>
81007c8f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c92:	8b 10                	mov    (%eax),%edx
81007c94:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c97:	8b 48 10             	mov    0x10(%eax),%ecx
81007c9a:	89 d0                	mov    %edx,%eax
81007c9c:	29 c8                	sub    %ecx,%eax
81007c9e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007ca1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ca4:	8b 50 14             	mov    0x14(%eax),%edx
81007ca7:	89 d0                	mov    %edx,%eax
81007ca9:	01 c0                	add    %eax,%eax
81007cab:	01 d0                	add    %edx,%eax
81007cad:	89 c2                	mov    %eax,%edx
81007caf:	c1 ea 1f             	shr    $0x1f,%edx
81007cb2:	01 d0                	add    %edx,%eax
81007cb4:	d1 f8                	sar    %eax
81007cb6:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007cb9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007cbc:	01 f0                	add    %esi,%eax
81007cbe:	8d 50 01             	lea    0x1(%eax),%edx
81007cc1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007cc4:	39 c2                	cmp    %eax,%edx
81007cc6:	76 0b                	jbe    81007cd3 <__ssprint_r+0xb3>
81007cc8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007ccb:	01 f0                	add    %esi,%eax
81007ccd:	83 c0 01             	add    $0x1,%eax
81007cd0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007cd3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cd6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007cda:	98                   	cwtl   
81007cdb:	25 00 04 00 00       	and    $0x400,%eax
81007ce0:	85 c0                	test   %eax,%eax
81007ce2:	74 5a                	je     81007d3e <__ssprint_r+0x11e>
81007ce4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007ce7:	83 ec 08             	sub    $0x8,%esp
81007cea:	50                   	push   %eax
81007ceb:	ff 75 08             	pushl  0x8(%ebp)
81007cee:	e8 ae c4 ff ff       	call   810041a1 <_malloc_r>
81007cf3:	83 c4 10             	add    $0x10,%esp
81007cf6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007cf9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007cfd:	75 0e                	jne    81007d0d <__ssprint_r+0xed>
81007cff:	8b 45 08             	mov    0x8(%ebp),%eax
81007d02:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007d08:	e9 17 01 00 00       	jmp    81007e24 <__ssprint_r+0x204>
81007d0d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d10:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d13:	8b 40 10             	mov    0x10(%eax),%eax
81007d16:	83 ec 04             	sub    $0x4,%esp
81007d19:	52                   	push   %edx
81007d1a:	50                   	push   %eax
81007d1b:	ff 75 e4             	pushl  -0x1c(%ebp)
81007d1e:	e8 95 cd ff ff       	call   81004ab8 <memcpy>
81007d23:	83 c4 10             	add    $0x10,%esp
81007d26:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d29:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007d2d:	66 25 7f fb          	and    $0xfb7f,%ax
81007d31:	0c 80                	or     $0x80,%al
81007d33:	89 c2                	mov    %eax,%edx
81007d35:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d38:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007d3c:	eb 45                	jmp    81007d83 <__ssprint_r+0x163>
81007d3e:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007d41:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d44:	8b 40 10             	mov    0x10(%eax),%eax
81007d47:	83 ec 04             	sub    $0x4,%esp
81007d4a:	52                   	push   %edx
81007d4b:	50                   	push   %eax
81007d4c:	ff 75 08             	pushl  0x8(%ebp)
81007d4f:	e8 b6 db ff ff       	call   8100590a <_realloc_r>
81007d54:	83 c4 10             	add    $0x10,%esp
81007d57:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007d5a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007d5e:	75 23                	jne    81007d83 <__ssprint_r+0x163>
81007d60:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d63:	8b 40 10             	mov    0x10(%eax),%eax
81007d66:	83 ec 08             	sub    $0x8,%esp
81007d69:	50                   	push   %eax
81007d6a:	ff 75 08             	pushl  0x8(%ebp)
81007d6d:	e8 1a a1 ff ff       	call   81001e8c <_free_r>
81007d72:	83 c4 10             	add    $0x10,%esp
81007d75:	8b 45 08             	mov    0x8(%ebp),%eax
81007d78:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007d7e:	e9 a1 00 00 00       	jmp    81007e24 <__ssprint_r+0x204>
81007d83:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d86:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007d89:	89 50 10             	mov    %edx,0x10(%eax)
81007d8c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d8f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007d92:	01 c2                	add    %eax,%edx
81007d94:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d97:	89 10                	mov    %edx,(%eax)
81007d99:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d9c:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007d9f:	89 50 14             	mov    %edx,0x14(%eax)
81007da2:	89 f7                	mov    %esi,%edi
81007da4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007da7:	2b 45 dc             	sub    -0x24(%ebp),%eax
81007daa:	89 c2                	mov    %eax,%edx
81007dac:	8b 45 0c             	mov    0xc(%ebp),%eax
81007daf:	89 50 08             	mov    %edx,0x8(%eax)
81007db2:	89 f8                	mov    %edi,%eax
81007db4:	39 c6                	cmp    %eax,%esi
81007db6:	73 02                	jae    81007dba <__ssprint_r+0x19a>
81007db8:	89 f7                	mov    %esi,%edi
81007dba:	89 fa                	mov    %edi,%edx
81007dbc:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dbf:	8b 00                	mov    (%eax),%eax
81007dc1:	83 ec 04             	sub    $0x4,%esp
81007dc4:	52                   	push   %edx
81007dc5:	ff 75 d4             	pushl  -0x2c(%ebp)
81007dc8:	50                   	push   %eax
81007dc9:	e8 32 cd ff ff       	call   81004b00 <memmove>
81007dce:	83 c4 10             	add    $0x10,%esp
81007dd1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dd4:	8b 40 08             	mov    0x8(%eax),%eax
81007dd7:	29 f8                	sub    %edi,%eax
81007dd9:	89 c2                	mov    %eax,%edx
81007ddb:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dde:	89 50 08             	mov    %edx,0x8(%eax)
81007de1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007de4:	8b 00                	mov    (%eax),%eax
81007de6:	89 fa                	mov    %edi,%edx
81007de8:	01 c2                	add    %eax,%edx
81007dea:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ded:	89 10                	mov    %edx,(%eax)
81007def:	89 f7                	mov    %esi,%edi
81007df1:	89 f8                	mov    %edi,%eax
81007df3:	01 45 d4             	add    %eax,-0x2c(%ebp)
81007df6:	89 f8                	mov    %edi,%eax
81007df8:	29 c6                	sub    %eax,%esi
81007dfa:	8b 43 08             	mov    0x8(%ebx),%eax
81007dfd:	89 fa                	mov    %edi,%edx
81007dff:	29 d0                	sub    %edx,%eax
81007e01:	89 43 08             	mov    %eax,0x8(%ebx)
81007e04:	8b 43 08             	mov    0x8(%ebx),%eax
81007e07:	85 c0                	test   %eax,%eax
81007e09:	0f 85 57 fe ff ff    	jne    81007c66 <__ssprint_r+0x46>
81007e0f:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007e16:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007e1d:	b8 00 00 00 00       	mov    $0x0,%eax
81007e22:	eb 26                	jmp    81007e4a <__ssprint_r+0x22a>
81007e24:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e27:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007e2b:	83 c8 40             	or     $0x40,%eax
81007e2e:	89 c2                	mov    %eax,%edx
81007e30:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e33:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007e37:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007e3e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007e45:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007e4a:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007e4d:	5b                   	pop    %ebx
81007e4e:	5e                   	pop    %esi
81007e4f:	5f                   	pop    %edi
81007e50:	5d                   	pop    %ebp
81007e51:	c3                   	ret    

81007e52 <_svfiprintf_r>:
81007e52:	55                   	push   %ebp
81007e53:	89 e5                	mov    %esp,%ebp
81007e55:	57                   	push   %edi
81007e56:	56                   	push   %esi
81007e57:	53                   	push   %ebx
81007e58:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81007e5e:	c7 45 e4 69 7a 00 81 	movl   $0x81007a69,-0x1c(%ebp)
81007e65:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e68:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007e6c:	98                   	cwtl   
81007e6d:	25 80 00 00 00       	and    $0x80,%eax
81007e72:	85 c0                	test   %eax,%eax
81007e74:	74 50                	je     81007ec6 <_svfiprintf_r+0x74>
81007e76:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e79:	8b 40 10             	mov    0x10(%eax),%eax
81007e7c:	85 c0                	test   %eax,%eax
81007e7e:	75 46                	jne    81007ec6 <_svfiprintf_r+0x74>
81007e80:	83 ec 08             	sub    $0x8,%esp
81007e83:	6a 40                	push   $0x40
81007e85:	ff 75 08             	pushl  0x8(%ebp)
81007e88:	e8 14 c3 ff ff       	call   810041a1 <_malloc_r>
81007e8d:	83 c4 10             	add    $0x10,%esp
81007e90:	8b 55 0c             	mov    0xc(%ebp),%edx
81007e93:	89 02                	mov    %eax,(%edx)
81007e95:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e98:	8b 10                	mov    (%eax),%edx
81007e9a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e9d:	89 50 10             	mov    %edx,0x10(%eax)
81007ea0:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ea3:	8b 00                	mov    (%eax),%eax
81007ea5:	85 c0                	test   %eax,%eax
81007ea7:	75 13                	jne    81007ebc <_svfiprintf_r+0x6a>
81007ea9:	8b 45 08             	mov    0x8(%ebp),%eax
81007eac:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007eb2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007eb7:	e9 c8 02 00 00       	jmp    81008184 <_svfiprintf_r+0x332>
81007ebc:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ebf:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
81007ec6:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007ec9:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
81007ed0:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
81007ed4:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
81007ed8:	8b 45 14             	mov    0x14(%ebp),%eax
81007edb:	89 45 80             	mov    %eax,-0x80(%ebp)
81007ede:	89 de                	mov    %ebx,%esi
81007ee0:	eb 03                	jmp    81007ee5 <_svfiprintf_r+0x93>
81007ee2:	83 c3 01             	add    $0x1,%ebx
81007ee5:	0f b6 03             	movzbl (%ebx),%eax
81007ee8:	84 c0                	test   %al,%al
81007eea:	74 07                	je     81007ef3 <_svfiprintf_r+0xa1>
81007eec:	0f b6 03             	movzbl (%ebx),%eax
81007eef:	3c 25                	cmp    $0x25,%al
81007ef1:	75 ef                	jne    81007ee2 <_svfiprintf_r+0x90>
81007ef3:	89 d8                	mov    %ebx,%eax
81007ef5:	29 f0                	sub    %esi,%eax
81007ef7:	85 c0                	test   %eax,%eax
81007ef9:	74 2b                	je     81007f26 <_svfiprintf_r+0xd4>
81007efb:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81007f01:	50                   	push   %eax
81007f02:	56                   	push   %esi
81007f03:	ff 75 0c             	pushl  0xc(%ebp)
81007f06:	ff 75 08             	pushl  0x8(%ebp)
81007f09:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007f0c:	ff d0                	call   *%eax
81007f0e:	83 c4 10             	add    $0x10,%esp
81007f11:	83 f8 ff             	cmp    $0xffffffff,%eax
81007f14:	0f 84 4a 02 00 00    	je     81008164 <_svfiprintf_r+0x312>
81007f1a:	8b 45 98             	mov    -0x68(%ebp),%eax
81007f1d:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81007f23:	89 45 98             	mov    %eax,-0x68(%ebp)
81007f26:	0f b6 03             	movzbl (%ebx),%eax
81007f29:	84 c0                	test   %al,%al
81007f2b:	0f 84 36 02 00 00    	je     81008167 <_svfiprintf_r+0x315>
81007f31:	83 c3 01             	add    $0x1,%ebx
81007f34:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81007f3b:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
81007f42:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81007f49:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81007f50:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
81007f54:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81007f5b:	c7 45 e0 6c 8c 00 81 	movl   $0x81008c6c,-0x20(%ebp)
81007f62:	eb 1b                	jmp    81007f7f <_svfiprintf_r+0x12d>
81007f64:	8b 55 84             	mov    -0x7c(%ebp),%edx
81007f67:	89 f0                	mov    %esi,%eax
81007f69:	2b 45 e0             	sub    -0x20(%ebp),%eax
81007f6c:	be 01 00 00 00       	mov    $0x1,%esi
81007f71:	89 c1                	mov    %eax,%ecx
81007f73:	d3 e6                	shl    %cl,%esi
81007f75:	89 f0                	mov    %esi,%eax
81007f77:	09 d0                	or     %edx,%eax
81007f79:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007f7c:	83 c3 01             	add    $0x1,%ebx
81007f7f:	0f b6 03             	movzbl (%ebx),%eax
81007f82:	0f be c0             	movsbl %al,%eax
81007f85:	83 ec 04             	sub    $0x4,%esp
81007f88:	6a 05                	push   $0x5
81007f8a:	50                   	push   %eax
81007f8b:	ff 75 e0             	pushl  -0x20(%ebp)
81007f8e:	e8 3d ca ff ff       	call   810049d0 <memchr>
81007f93:	83 c4 10             	add    $0x10,%esp
81007f96:	89 c6                	mov    %eax,%esi
81007f98:	85 f6                	test   %esi,%esi
81007f9a:	75 c8                	jne    81007f64 <_svfiprintf_r+0x112>
81007f9c:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007f9f:	83 e0 10             	and    $0x10,%eax
81007fa2:	85 c0                	test   %eax,%eax
81007fa4:	74 04                	je     81007faa <_svfiprintf_r+0x158>
81007fa6:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
81007faa:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007fad:	83 e0 08             	and    $0x8,%eax
81007fb0:	85 c0                	test   %eax,%eax
81007fb2:	74 04                	je     81007fb8 <_svfiprintf_r+0x166>
81007fb4:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
81007fb8:	0f b6 03             	movzbl (%ebx),%eax
81007fbb:	3c 2a                	cmp    $0x2a,%al
81007fbd:	75 4a                	jne    81008009 <_svfiprintf_r+0x1b7>
81007fbf:	8b 45 80             	mov    -0x80(%ebp),%eax
81007fc2:	8d 50 04             	lea    0x4(%eax),%edx
81007fc5:	89 55 80             	mov    %edx,-0x80(%ebp)
81007fc8:	8b 00                	mov    (%eax),%eax
81007fca:	89 45 90             	mov    %eax,-0x70(%ebp)
81007fcd:	8b 45 90             	mov    -0x70(%ebp),%eax
81007fd0:	85 c0                	test   %eax,%eax
81007fd2:	79 11                	jns    81007fe5 <_svfiprintf_r+0x193>
81007fd4:	8b 45 90             	mov    -0x70(%ebp),%eax
81007fd7:	f7 d8                	neg    %eax
81007fd9:	89 45 90             	mov    %eax,-0x70(%ebp)
81007fdc:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007fdf:	83 c8 02             	or     $0x2,%eax
81007fe2:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007fe5:	83 c3 01             	add    $0x1,%ebx
81007fe8:	eb 2d                	jmp    81008017 <_svfiprintf_r+0x1c5>
81007fea:	8b 55 90             	mov    -0x70(%ebp),%edx
81007fed:	89 d0                	mov    %edx,%eax
81007fef:	c1 e0 02             	shl    $0x2,%eax
81007ff2:	01 d0                	add    %edx,%eax
81007ff4:	01 c0                	add    %eax,%eax
81007ff6:	89 c2                	mov    %eax,%edx
81007ff8:	0f b6 03             	movzbl (%ebx),%eax
81007ffb:	0f be c0             	movsbl %al,%eax
81007ffe:	83 e8 30             	sub    $0x30,%eax
81008001:	01 d0                	add    %edx,%eax
81008003:	89 45 90             	mov    %eax,-0x70(%ebp)
81008006:	83 c3 01             	add    $0x1,%ebx
81008009:	0f b6 03             	movzbl (%ebx),%eax
8100800c:	0f be c0             	movsbl %al,%eax
8100800f:	83 e8 30             	sub    $0x30,%eax
81008012:	83 f8 09             	cmp    $0x9,%eax
81008015:	76 d3                	jbe    81007fea <_svfiprintf_r+0x198>
81008017:	0f b6 03             	movzbl (%ebx),%eax
8100801a:	3c 2e                	cmp    $0x2e,%al
8100801c:	75 61                	jne    8100807f <_svfiprintf_r+0x22d>
8100801e:	83 c3 01             	add    $0x1,%ebx
81008021:	0f b6 03             	movzbl (%ebx),%eax
81008024:	3c 2a                	cmp    $0x2a,%al
81008026:	75 21                	jne    81008049 <_svfiprintf_r+0x1f7>
81008028:	83 c3 01             	add    $0x1,%ebx
8100802b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100802e:	8d 50 04             	lea    0x4(%eax),%edx
81008031:	89 55 80             	mov    %edx,-0x80(%ebp)
81008034:	8b 00                	mov    (%eax),%eax
81008036:	89 45 88             	mov    %eax,-0x78(%ebp)
81008039:	8b 45 88             	mov    -0x78(%ebp),%eax
8100803c:	85 c0                	test   %eax,%eax
8100803e:	79 3f                	jns    8100807f <_svfiprintf_r+0x22d>
81008040:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81008047:	eb 36                	jmp    8100807f <_svfiprintf_r+0x22d>
81008049:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81008050:	eb 1f                	jmp    81008071 <_svfiprintf_r+0x21f>
81008052:	8b 55 88             	mov    -0x78(%ebp),%edx
81008055:	89 d0                	mov    %edx,%eax
81008057:	c1 e0 02             	shl    $0x2,%eax
8100805a:	01 d0                	add    %edx,%eax
8100805c:	01 c0                	add    %eax,%eax
8100805e:	89 c2                	mov    %eax,%edx
81008060:	0f b6 03             	movzbl (%ebx),%eax
81008063:	0f be c0             	movsbl %al,%eax
81008066:	83 e8 30             	sub    $0x30,%eax
81008069:	01 d0                	add    %edx,%eax
8100806b:	89 45 88             	mov    %eax,-0x78(%ebp)
8100806e:	83 c3 01             	add    $0x1,%ebx
81008071:	0f b6 03             	movzbl (%ebx),%eax
81008074:	0f be c0             	movsbl %al,%eax
81008077:	83 e8 30             	sub    $0x30,%eax
8100807a:	83 f8 09             	cmp    $0x9,%eax
8100807d:	76 d3                	jbe    81008052 <_svfiprintf_r+0x200>
8100807f:	c7 45 e0 72 8c 00 81 	movl   $0x81008c72,-0x20(%ebp)
81008086:	0f b6 03             	movzbl (%ebx),%eax
81008089:	0f be c0             	movsbl %al,%eax
8100808c:	83 ec 04             	sub    $0x4,%esp
8100808f:	6a 03                	push   $0x3
81008091:	50                   	push   %eax
81008092:	ff 75 e0             	pushl  -0x20(%ebp)
81008095:	e8 36 c9 ff ff       	call   810049d0 <memchr>
8100809a:	83 c4 10             	add    $0x10,%esp
8100809d:	89 c6                	mov    %eax,%esi
8100809f:	85 f6                	test   %esi,%esi
810080a1:	74 1b                	je     810080be <_svfiprintf_r+0x26c>
810080a3:	8b 55 84             	mov    -0x7c(%ebp),%edx
810080a6:	89 f0                	mov    %esi,%eax
810080a8:	2b 45 e0             	sub    -0x20(%ebp),%eax
810080ab:	be 40 00 00 00       	mov    $0x40,%esi
810080b0:	89 c1                	mov    %eax,%ecx
810080b2:	d3 e6                	shl    %cl,%esi
810080b4:	89 f0                	mov    %esi,%eax
810080b6:	09 d0                	or     %edx,%eax
810080b8:	89 45 84             	mov    %eax,-0x7c(%ebp)
810080bb:	83 c3 01             	add    $0x1,%ebx
810080be:	89 d8                	mov    %ebx,%eax
810080c0:	8d 58 01             	lea    0x1(%eax),%ebx
810080c3:	0f b6 00             	movzbl (%eax),%eax
810080c6:	88 45 9c             	mov    %al,-0x64(%ebp)
810080c9:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
810080cd:	0f be c0             	movsbl %al,%eax
810080d0:	83 ec 04             	sub    $0x4,%esp
810080d3:	6a 06                	push   $0x6
810080d5:	50                   	push   %eax
810080d6:	68 76 8c 00 81       	push   $0x81008c76
810080db:	e8 f0 c8 ff ff       	call   810049d0 <memchr>
810080e0:	83 c4 10             	add    $0x10,%esp
810080e3:	89 c6                	mov    %eax,%esi
810080e5:	85 f6                	test   %esi,%esi
810080e7:	74 4b                	je     81008134 <_svfiprintf_r+0x2e2>
810080e9:	b8 00 00 00 00       	mov    $0x0,%eax
810080ee:	85 c0                	test   %eax,%eax
810080f0:	75 22                	jne    81008114 <_svfiprintf_r+0x2c2>
810080f2:	8b 45 84             	mov    -0x7c(%ebp),%eax
810080f5:	25 00 01 00 00       	and    $0x100,%eax
810080fa:	85 c0                	test   %eax,%eax
810080fc:	74 0b                	je     81008109 <_svfiprintf_r+0x2b7>
810080fe:	8b 45 80             	mov    -0x80(%ebp),%eax
81008101:	83 c0 0c             	add    $0xc,%eax
81008104:	89 45 80             	mov    %eax,-0x80(%ebp)
81008107:	eb 49                	jmp    81008152 <_svfiprintf_r+0x300>
81008109:	8b 45 80             	mov    -0x80(%ebp),%eax
8100810c:	83 c0 08             	add    $0x8,%eax
8100810f:	89 45 80             	mov    %eax,-0x80(%ebp)
81008112:	eb 3e                	jmp    81008152 <_svfiprintf_r+0x300>
81008114:	83 ec 0c             	sub    $0xc,%esp
81008117:	8d 45 80             	lea    -0x80(%ebp),%eax
8100811a:	50                   	push   %eax
8100811b:	ff 75 e4             	pushl  -0x1c(%ebp)
8100811e:	ff 75 0c             	pushl  0xc(%ebp)
81008121:	8d 45 84             	lea    -0x7c(%ebp),%eax
81008124:	50                   	push   %eax
81008125:	ff 75 08             	pushl  0x8(%ebp)
81008128:	e8 d3 7e ff 7e       	call   0 <show_promot-0x81000000>
8100812d:	83 c4 20             	add    $0x20,%esp
81008130:	89 c7                	mov    %eax,%edi
81008132:	eb 1e                	jmp    81008152 <_svfiprintf_r+0x300>
81008134:	83 ec 0c             	sub    $0xc,%esp
81008137:	8d 45 80             	lea    -0x80(%ebp),%eax
8100813a:	50                   	push   %eax
8100813b:	ff 75 e4             	pushl  -0x1c(%ebp)
8100813e:	ff 75 0c             	pushl  0xc(%ebp)
81008141:	8d 45 84             	lea    -0x7c(%ebp),%eax
81008144:	50                   	push   %eax
81008145:	ff 75 08             	pushl  0x8(%ebp)
81008148:	e8 d4 d1 ff ff       	call   81005321 <_printf_i>
8100814d:	83 c4 20             	add    $0x20,%esp
81008150:	89 c7                	mov    %eax,%edi
81008152:	83 ff ff             	cmp    $0xffffffff,%edi
81008155:	74 13                	je     8100816a <_svfiprintf_r+0x318>
81008157:	8b 45 98             	mov    -0x68(%ebp),%eax
8100815a:	01 f8                	add    %edi,%eax
8100815c:	89 45 98             	mov    %eax,-0x68(%ebp)
8100815f:	e9 7a fd ff ff       	jmp    81007ede <_svfiprintf_r+0x8c>
81008164:	90                   	nop
81008165:	eb 04                	jmp    8100816b <_svfiprintf_r+0x319>
81008167:	90                   	nop
81008168:	eb 01                	jmp    8100816b <_svfiprintf_r+0x319>
8100816a:	90                   	nop
8100816b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100816e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81008172:	98                   	cwtl   
81008173:	83 e0 40             	and    $0x40,%eax
81008176:	85 c0                	test   %eax,%eax
81008178:	75 05                	jne    8100817f <_svfiprintf_r+0x32d>
8100817a:	8b 45 98             	mov    -0x68(%ebp),%eax
8100817d:	eb 05                	jmp    81008184 <_svfiprintf_r+0x332>
8100817f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81008184:	8d 65 f4             	lea    -0xc(%ebp),%esp
81008187:	5b                   	pop    %ebx
81008188:	5e                   	pop    %esi
81008189:	5f                   	pop    %edi
8100818a:	5d                   	pop    %ebp
8100818b:	c3                   	ret    

8100818c <__sputc_r>:
8100818c:	55                   	push   %ebp
8100818d:	89 e5                	mov    %esp,%ebp
8100818f:	83 ec 08             	sub    $0x8,%esp
81008192:	8b 45 10             	mov    0x10(%ebp),%eax
81008195:	8b 40 08             	mov    0x8(%eax),%eax
81008198:	8d 50 ff             	lea    -0x1(%eax),%edx
8100819b:	8b 45 10             	mov    0x10(%ebp),%eax
8100819e:	89 50 08             	mov    %edx,0x8(%eax)
810081a1:	8b 45 10             	mov    0x10(%ebp),%eax
810081a4:	8b 40 08             	mov    0x8(%eax),%eax
810081a7:	85 c0                	test   %eax,%eax
810081a9:	79 17                	jns    810081c2 <__sputc_r+0x36>
810081ab:	8b 45 10             	mov    0x10(%ebp),%eax
810081ae:	8b 50 08             	mov    0x8(%eax),%edx
810081b1:	8b 45 10             	mov    0x10(%ebp),%eax
810081b4:	8b 40 18             	mov    0x18(%eax),%eax
810081b7:	39 c2                	cmp    %eax,%edx
810081b9:	7c 21                	jl     810081dc <__sputc_r+0x50>
810081bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810081be:	3c 0a                	cmp    $0xa,%al
810081c0:	74 1a                	je     810081dc <__sputc_r+0x50>
810081c2:	8b 45 10             	mov    0x10(%ebp),%eax
810081c5:	8b 00                	mov    (%eax),%eax
810081c7:	8d 48 01             	lea    0x1(%eax),%ecx
810081ca:	8b 55 10             	mov    0x10(%ebp),%edx
810081cd:	89 0a                	mov    %ecx,(%edx)
810081cf:	8b 55 0c             	mov    0xc(%ebp),%edx
810081d2:	88 10                	mov    %dl,(%eax)
810081d4:	0f b6 00             	movzbl (%eax),%eax
810081d7:	0f b6 c0             	movzbl %al,%eax
810081da:	eb 14                	jmp    810081f0 <__sputc_r+0x64>
810081dc:	83 ec 04             	sub    $0x4,%esp
810081df:	ff 75 10             	pushl  0x10(%ebp)
810081e2:	ff 75 0c             	pushl  0xc(%ebp)
810081e5:	ff 75 08             	pushl  0x8(%ebp)
810081e8:	e8 3a ee ff ff       	call   81007027 <__swbuf_r>
810081ed:	83 c4 10             	add    $0x10,%esp
810081f0:	c9                   	leave  
810081f1:	c3                   	ret    

810081f2 <_putc_r>:
810081f2:	55                   	push   %ebp
810081f3:	89 e5                	mov    %esp,%ebp
810081f5:	53                   	push   %ebx
810081f6:	83 ec 14             	sub    $0x14,%esp
810081f9:	8b 5d 10             	mov    0x10(%ebp),%ebx
810081fc:	8b 45 08             	mov    0x8(%ebp),%eax
810081ff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008202:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81008206:	74 18                	je     81008220 <_putc_r+0x2e>
81008208:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100820b:	8b 40 38             	mov    0x38(%eax),%eax
8100820e:	85 c0                	test   %eax,%eax
81008210:	75 0e                	jne    81008220 <_putc_r+0x2e>
81008212:	83 ec 0c             	sub    $0xc,%esp
81008215:	ff 75 f4             	pushl  -0xc(%ebp)
81008218:	e8 ba 96 ff ff       	call   810018d7 <__sinit>
8100821d:	83 c4 10             	add    $0x10,%esp
81008220:	83 ec 04             	sub    $0x4,%esp
81008223:	53                   	push   %ebx
81008224:	ff 75 0c             	pushl  0xc(%ebp)
81008227:	ff 75 08             	pushl  0x8(%ebp)
8100822a:	e8 5d ff ff ff       	call   8100818c <__sputc_r>
8100822f:	83 c4 10             	add    $0x10,%esp
81008232:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008235:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008238:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100823b:	c9                   	leave  
8100823c:	c3                   	ret    

8100823d <putc>:
8100823d:	55                   	push   %ebp
8100823e:	89 e5                	mov    %esp,%ebp
81008240:	53                   	push   %ebx
81008241:	83 ec 14             	sub    $0x14,%esp
81008244:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81008247:	a1 c4 90 00 81       	mov    0x810090c4,%eax
8100824c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100824f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008252:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008255:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81008259:	74 18                	je     81008273 <putc+0x36>
8100825b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100825e:	8b 40 38             	mov    0x38(%eax),%eax
81008261:	85 c0                	test   %eax,%eax
81008263:	75 0e                	jne    81008273 <putc+0x36>
81008265:	83 ec 0c             	sub    $0xc,%esp
81008268:	ff 75 f0             	pushl  -0x10(%ebp)
8100826b:	e8 67 96 ff ff       	call   810018d7 <__sinit>
81008270:	83 c4 10             	add    $0x10,%esp
81008273:	83 ec 04             	sub    $0x4,%esp
81008276:	53                   	push   %ebx
81008277:	ff 75 08             	pushl  0x8(%ebp)
8100827a:	ff 75 f4             	pushl  -0xc(%ebp)
8100827d:	e8 0a ff ff ff       	call   8100818c <__sputc_r>
81008282:	83 c4 10             	add    $0x10,%esp
81008285:	89 45 ec             	mov    %eax,-0x14(%ebp)
81008288:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100828b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100828e:	c9                   	leave  
8100828f:	c3                   	ret    

81008290 <_read_r>:
81008290:	55                   	push   %ebp
81008291:	89 e5                	mov    %esp,%ebp
81008293:	83 ec 18             	sub    $0x18,%esp
81008296:	c7 05 0c 9c 00 81 00 	movl   $0x0,0x81009c0c
8100829d:	00 00 00 
810082a0:	83 ec 04             	sub    $0x4,%esp
810082a3:	ff 75 14             	pushl  0x14(%ebp)
810082a6:	ff 75 10             	pushl  0x10(%ebp)
810082a9:	ff 75 0c             	pushl  0xc(%ebp)
810082ac:	e8 12 8a ff ff       	call   81000cc3 <read>
810082b1:	83 c4 10             	add    $0x10,%esp
810082b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810082b7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810082bb:	75 14                	jne    810082d1 <_read_r+0x41>
810082bd:	a1 0c 9c 00 81       	mov    0x81009c0c,%eax
810082c2:	85 c0                	test   %eax,%eax
810082c4:	74 0b                	je     810082d1 <_read_r+0x41>
810082c6:	8b 15 0c 9c 00 81    	mov    0x81009c0c,%edx
810082cc:	8b 45 08             	mov    0x8(%ebp),%eax
810082cf:	89 10                	mov    %edx,(%eax)
810082d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810082d4:	c9                   	leave  
810082d5:	c3                   	ret    

810082d6 <strncmp>:
810082d6:	55                   	push   %ebp
810082d7:	89 e5                	mov    %esp,%ebp
810082d9:	83 ec 10             	sub    $0x10,%esp
810082dc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810082e0:	75 0a                	jne    810082ec <strncmp+0x16>
810082e2:	b8 00 00 00 00       	mov    $0x0,%eax
810082e7:	e9 cb 00 00 00       	jmp    810083b7 <strncmp+0xe1>
810082ec:	8b 55 08             	mov    0x8(%ebp),%edx
810082ef:	8b 45 0c             	mov    0xc(%ebp),%eax
810082f2:	09 d0                	or     %edx,%eax
810082f4:	83 e0 03             	and    $0x3,%eax
810082f7:	85 c0                	test   %eax,%eax
810082f9:	0f 85 85 00 00 00    	jne    81008384 <strncmp+0xae>
810082ff:	8b 45 08             	mov    0x8(%ebp),%eax
81008302:	89 45 fc             	mov    %eax,-0x4(%ebp)
81008305:	8b 45 0c             	mov    0xc(%ebp),%eax
81008308:	89 45 f8             	mov    %eax,-0x8(%ebp)
8100830b:	eb 36                	jmp    81008343 <strncmp+0x6d>
8100830d:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
81008311:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008315:	74 1d                	je     81008334 <strncmp+0x5e>
81008317:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100831a:	8b 00                	mov    (%eax),%eax
8100831c:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81008322:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008325:	8b 00                	mov    (%eax),%eax
81008327:	f7 d0                	not    %eax
81008329:	21 d0                	and    %edx,%eax
8100832b:	25 80 80 80 80       	and    $0x80808080,%eax
81008330:	85 c0                	test   %eax,%eax
81008332:	74 07                	je     8100833b <strncmp+0x65>
81008334:	b8 00 00 00 00       	mov    $0x0,%eax
81008339:	eb 7c                	jmp    810083b7 <strncmp+0xe1>
8100833b:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100833f:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81008343:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81008347:	76 0e                	jbe    81008357 <strncmp+0x81>
81008349:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100834c:	8b 10                	mov    (%eax),%edx
8100834e:	8b 45 f8             	mov    -0x8(%ebp),%eax
81008351:	8b 00                	mov    (%eax),%eax
81008353:	39 c2                	cmp    %eax,%edx
81008355:	74 b6                	je     8100830d <strncmp+0x37>
81008357:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100835a:	89 45 08             	mov    %eax,0x8(%ebp)
8100835d:	8b 45 f8             	mov    -0x8(%ebp),%eax
81008360:	89 45 0c             	mov    %eax,0xc(%ebp)
81008363:	eb 1f                	jmp    81008384 <strncmp+0xae>
81008365:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008369:	74 0a                	je     81008375 <strncmp+0x9f>
8100836b:	8b 45 08             	mov    0x8(%ebp),%eax
8100836e:	0f b6 00             	movzbl (%eax),%eax
81008371:	84 c0                	test   %al,%al
81008373:	75 07                	jne    8100837c <strncmp+0xa6>
81008375:	b8 00 00 00 00       	mov    $0x0,%eax
8100837a:	eb 3b                	jmp    810083b7 <strncmp+0xe1>
8100837c:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81008380:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81008384:	8b 45 10             	mov    0x10(%ebp),%eax
81008387:	8d 50 ff             	lea    -0x1(%eax),%edx
8100838a:	89 55 10             	mov    %edx,0x10(%ebp)
8100838d:	85 c0                	test   %eax,%eax
8100838f:	74 10                	je     810083a1 <strncmp+0xcb>
81008391:	8b 45 08             	mov    0x8(%ebp),%eax
81008394:	0f b6 10             	movzbl (%eax),%edx
81008397:	8b 45 0c             	mov    0xc(%ebp),%eax
8100839a:	0f b6 00             	movzbl (%eax),%eax
8100839d:	38 c2                	cmp    %al,%dl
8100839f:	74 c4                	je     81008365 <strncmp+0x8f>
810083a1:	8b 45 08             	mov    0x8(%ebp),%eax
810083a4:	0f b6 00             	movzbl (%eax),%eax
810083a7:	0f b6 d0             	movzbl %al,%edx
810083aa:	8b 45 0c             	mov    0xc(%ebp),%eax
810083ad:	0f b6 00             	movzbl (%eax),%eax
810083b0:	0f b6 c8             	movzbl %al,%ecx
810083b3:	89 d0                	mov    %edx,%eax
810083b5:	29 c8                	sub    %ecx,%eax
810083b7:	c9                   	leave  
810083b8:	c3                   	ret    

810083b9 <__get_global_locale>:
810083b9:	55                   	push   %ebp
810083ba:	89 e5                	mov    %esp,%ebp
810083bc:	b8 00 95 00 81       	mov    $0x81009500,%eax
810083c1:	5d                   	pop    %ebp
810083c2:	c3                   	ret    

810083c3 <__get_current_locale>:
810083c3:	55                   	push   %ebp
810083c4:	89 e5                	mov    %esp,%ebp
810083c6:	e8 ee ff ff ff       	call   810083b9 <__get_global_locale>
810083cb:	5d                   	pop    %ebp
810083cc:	c3                   	ret    

810083cd <_wcrtomb_r>:
810083cd:	55                   	push   %ebp
810083ce:	89 e5                	mov    %esp,%ebp
810083d0:	83 ec 18             	sub    $0x18,%esp
810083d3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810083da:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810083de:	75 21                	jne    81008401 <_wcrtomb_r+0x34>
810083e0:	e8 de ff ff ff       	call   810083c3 <__get_current_locale>
810083e5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083eb:	ff 75 14             	pushl  0x14(%ebp)
810083ee:	6a 00                	push   $0x0
810083f0:	8d 55 ea             	lea    -0x16(%ebp),%edx
810083f3:	52                   	push   %edx
810083f4:	ff 75 08             	pushl  0x8(%ebp)
810083f7:	ff d0                	call   *%eax
810083f9:	83 c4 10             	add    $0x10,%esp
810083fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810083ff:	eb 1f                	jmp    81008420 <_wcrtomb_r+0x53>
81008401:	e8 bd ff ff ff       	call   810083c3 <__get_current_locale>
81008406:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100840c:	ff 75 14             	pushl  0x14(%ebp)
8100840f:	ff 75 10             	pushl  0x10(%ebp)
81008412:	ff 75 0c             	pushl  0xc(%ebp)
81008415:	ff 75 08             	pushl  0x8(%ebp)
81008418:	ff d0                	call   *%eax
8100841a:	83 c4 10             	add    $0x10,%esp
8100841d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008420:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008424:	75 19                	jne    8100843f <_wcrtomb_r+0x72>
81008426:	8b 45 14             	mov    0x14(%ebp),%eax
81008429:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100842f:	8b 45 08             	mov    0x8(%ebp),%eax
81008432:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008438:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100843d:	eb 03                	jmp    81008442 <_wcrtomb_r+0x75>
8100843f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008442:	c9                   	leave  
81008443:	c3                   	ret    

81008444 <wcrtomb>:
81008444:	55                   	push   %ebp
81008445:	89 e5                	mov    %esp,%ebp
81008447:	83 ec 28             	sub    $0x28,%esp
8100844a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81008451:	a1 c4 90 00 81       	mov    0x810090c4,%eax
81008456:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008459:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100845d:	75 21                	jne    81008480 <wcrtomb+0x3c>
8100845f:	e8 5f ff ff ff       	call   810083c3 <__get_current_locale>
81008464:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100846a:	ff 75 10             	pushl  0x10(%ebp)
8100846d:	6a 00                	push   $0x0
8100846f:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81008472:	52                   	push   %edx
81008473:	ff 75 f0             	pushl  -0x10(%ebp)
81008476:	ff d0                	call   *%eax
81008478:	83 c4 10             	add    $0x10,%esp
8100847b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100847e:	eb 1f                	jmp    8100849f <wcrtomb+0x5b>
81008480:	e8 3e ff ff ff       	call   810083c3 <__get_current_locale>
81008485:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100848b:	ff 75 10             	pushl  0x10(%ebp)
8100848e:	ff 75 0c             	pushl  0xc(%ebp)
81008491:	ff 75 08             	pushl  0x8(%ebp)
81008494:	ff 75 f0             	pushl  -0x10(%ebp)
81008497:	ff d0                	call   *%eax
81008499:	83 c4 10             	add    $0x10,%esp
8100849c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100849f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810084a3:	75 19                	jne    810084be <wcrtomb+0x7a>
810084a5:	8b 45 10             	mov    0x10(%ebp),%eax
810084a8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810084ae:	8b 45 f0             	mov    -0x10(%ebp),%eax
810084b1:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
810084b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810084bc:	eb 03                	jmp    810084c1 <wcrtomb+0x7d>
810084be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810084c1:	c9                   	leave  
810084c2:	c3                   	ret    

810084c3 <__get_global_locale>:
810084c3:	55                   	push   %ebp
810084c4:	89 e5                	mov    %esp,%ebp
810084c6:	b8 00 95 00 81       	mov    $0x81009500,%eax
810084cb:	5d                   	pop    %ebp
810084cc:	c3                   	ret    

810084cd <__get_current_locale>:
810084cd:	55                   	push   %ebp
810084ce:	89 e5                	mov    %esp,%ebp
810084d0:	e8 ee ff ff ff       	call   810084c3 <__get_global_locale>
810084d5:	5d                   	pop    %ebp
810084d6:	c3                   	ret    

810084d7 <_wctomb_r>:
810084d7:	55                   	push   %ebp
810084d8:	89 e5                	mov    %esp,%ebp
810084da:	83 ec 08             	sub    $0x8,%esp
810084dd:	e8 eb ff ff ff       	call   810084cd <__get_current_locale>
810084e2:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810084e8:	ff 75 14             	pushl  0x14(%ebp)
810084eb:	ff 75 10             	pushl  0x10(%ebp)
810084ee:	ff 75 0c             	pushl  0xc(%ebp)
810084f1:	ff 75 08             	pushl  0x8(%ebp)
810084f4:	ff d0                	call   *%eax
810084f6:	83 c4 10             	add    $0x10,%esp
810084f9:	c9                   	leave  
810084fa:	c3                   	ret    

810084fb <__ascii_wctomb>:
810084fb:	55                   	push   %ebp
810084fc:	89 e5                	mov    %esp,%ebp
810084fe:	83 ec 10             	sub    $0x10,%esp
81008501:	8b 45 10             	mov    0x10(%ebp),%eax
81008504:	89 45 fc             	mov    %eax,-0x4(%ebp)
81008507:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100850b:	75 07                	jne    81008514 <__ascii_wctomb+0x19>
8100850d:	b8 00 00 00 00       	mov    $0x0,%eax
81008512:	eb 28                	jmp    8100853c <__ascii_wctomb+0x41>
81008514:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
8100851b:	76 10                	jbe    8100852d <__ascii_wctomb+0x32>
8100851d:	8b 45 08             	mov    0x8(%ebp),%eax
81008520:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008526:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100852b:	eb 0f                	jmp    8100853c <__ascii_wctomb+0x41>
8100852d:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008530:	89 c2                	mov    %eax,%edx
81008532:	8b 45 0c             	mov    0xc(%ebp),%eax
81008535:	88 10                	mov    %dl,(%eax)
81008537:	b8 01 00 00 00       	mov    $0x1,%eax
8100853c:	c9                   	leave  
8100853d:	c3                   	ret    

8100853e <__env_lock>:
8100853e:	55                   	push   %ebp
8100853f:	89 e5                	mov    %esp,%ebp
81008541:	90                   	nop
81008542:	5d                   	pop    %ebp
81008543:	c3                   	ret    

81008544 <__env_unlock>:
81008544:	55                   	push   %ebp
81008545:	89 e5                	mov    %esp,%ebp
81008547:	90                   	nop
81008548:	5d                   	pop    %ebp
81008549:	c3                   	ret    
